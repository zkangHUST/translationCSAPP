[Script Info]
; Script generated by Aegisub r8942
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1280
PlayResY: 720

[Aegisub Project Garbage]
Last Style Storage: Default
Audio File: ../../../../Desktop/csapp/Lecture 22  Network Programming  Part II.mp4
Video File: ../../../../Desktop/csapp/Lecture 22  Network Programming  Part II.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 1.000000
Scroll Position: 835
Active Line: 844
Video Position: 140051

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: English,Source Han Sans CN,30,&H00FFFFFF,&H00412A2C,&H00412A2C,&H00412A2C,0,0,0,0,100,100,0,0,1,2.2,1,2,10,10,10,1
Style: Chinese,Source Han Sans CN,34,&H00FBFD00,&H00FFFFFF,&H00362A28,&H00FFFFFF,0,0,0,0,100,100,0,0,1,2,0.2,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.72,0:00:06.36,English,,0,0,0,,So today,it's the second lecture about network programming we got started last time
Dialogue: 0,0:00:00.72,0:00:06.36,Chinese,,0,0,0,,所以今天是关于网络编程的第二次课程，我们上次已经讲过一节课
Dialogue: 0,0:00:07.04,0:00:15.18,English,,0,0,0,,And as you probably saw last time there the apis for this are really big and hairy and messy and
Dialogue: 0,0:00:07.04,0:00:15.18,Chinese,,0,0,0,,正如你上次可能看到的那样，这一套网络api非常庞大而且混乱
Dialogue: 0,0:00:15.54,0:00:19.06,English,,0,0,0,,It takes just a lot of time in my own personal experience of
Dialogue: 0,0:00:15.54,0:00:19.06,Chinese,,0,0,0,,就我个人经验来说，这需要花费大量的时间
Dialogue: 0,0:00:19.64,0:00:24.74,English,,0,0,0,,Rereading ,looking at code looking at examples rereading documentation
Dialogue: 0,0:00:19.64,0:00:24.74,Chinese,,0,0,0,,不断地阅读，看代码和例程，以及读文档
Dialogue: 0,0:00:25.26,0:00:28.00,English,,0,0,0,,Going back and forth over that a dozen or so times
Dialogue: 0,0:00:25.26,0:00:28.00,Chinese,,0,0,0,,这个过程来来回回重复十几次甚至更多次
Dialogue: 0,0:00:28.56,0:00:30.02,English,,0,0,0,,Before it all really sinks in
Dialogue: 0,0:00:28.56,0:00:30.02,Chinese,,0,0,0,,才能真正理解
Dialogue: 0,0:00:30.20,0:00:34.70,English,,0,0,0,,And it's one where it really helps a lot to look at example code
Dialogue: 0,0:00:30.20,0:00:34.70,Chinese,,0,0,0,,而且看示例代码是非常有帮助的
Dialogue: 0,0:00:34.70,0:00:40.90,English,,0,0,0,,And there's example code in the book in that csapp.c file
Dialogue: 0,0:00:34.70,0:00:40.90,Chinese,,0,0,0,,在书中csapp.c文件里有示例代码
Dialogue: 0,0:00:40.90,0:00:43.34,English,,0,0,0,,That you've seen versions of in various forms
Dialogue: 0,0:00:40.90,0:00:43.34,Chinese,,0,0,0,,你已经看过各种形式不同的版本
Dialogue: 0,0:00:44.58,0:00:50.16,English,,0,0,0,,So I can lecture for days and weeks
Dialogue: 0,0:00:44.58,0:00:50.16,Chinese,,0,0,0,,就网络编程这个话题，我可以讲几天几夜甚至几周
Dialogue: 0,0:00:50.30,0:00:54.24,English,,0,0,0,,But this really would all settle in until you've spent time studying yourself
Dialogue: 0,0:00:50.30,0:00:54.24,Chinese,,0,0,0,,但是只有你自己花时间学习，才能真正掌握
Dialogue: 0,0:00:54.86,0:00:59.90,English,,0,0,0,,Anyways I want to repeat and go back over a little bit of ground before
Dialogue: 0,0:00:54.86,0:00:59.90,Chinese,,0,0,0,,无论如何，我想重复一遍，然后再回过头来继续我们的课程
Dialogue: 0,0:00:59.92,0:01:05.98,English,,0,0,0,,But last time we talked about the idea of translating from a domain name
Dialogue: 0,0:00:59.92,0:01:05.98,Chinese,,0,0,0,,上次我们谈到了从域名转换的概念
Dialogue: 0,0:01:05.98,0:01:12.32,English,,0,0,0,,Which is something like www.cmu.edu to IP address
Dialogue: 0,0:01:05.98,0:01:12.32,Chinese,,0,0,0,,就比如从www.cmu.edu转换到IP
Dialogue: 0,0:01:13.26,0:01:21.00,English,,0,0,0,,Which for IPv4 is a 32 bit address,it's usually written in dotted decimal form
Dialogue: 0,0:01:13.26,0:01:21.00,Chinese,,0,0,0,,对于IPv4,它是用32个比特位表示的地址，通常以点分十进制形式表示
Dialogue: 0,0:01:22.48,0:01:26.81,English,,0,0,0,,And I showed you a program last time called host info that you could
Dialogue: 0,0:01:22.48,0:01:26.81,Chinese,,0,0,0,,我上次给你们看了一个叫做主机信息的程序，它可以
Dialogue: 0,0:01:27.74,0:01:29.78,English,,0,0,0,,That will look actually at the code for
Dialogue: 0,0:01:27.74,0:01:29.78,Chinese,,0,0,0,,这看起来实际上是代码
Dialogue: 0,0:01:34.14,0:01:40.62,English,,0,0,0,,And I just wanted to show you today I just did one very small tweak to that program and I'll describe it today
Dialogue: 0,0:01:34.14,0:01:40.62,Chinese,,0,0,0,,我今天只想告诉你我刚刚对该程序进行了一次非常小的调整，我今天将对其进行描述
Dialogue: 0,0:01:41.34,0:01:48.88,English,,0,0,0,,And the interesting thing is it lets you look at both IPv4 and IPv6
Dialogue: 0,0:01:41.34,0:01:48.88,Chinese,,0,0,0,,有趣的是它可以让你同时看到IPv4和IPv6
Dialogue: 0,0:01:49.52,0:01:52.36,English,,0,0,0,,And it's one of the interesting features the code in the book
Dialogue: 0,0:01:49.52,0:01:52.36,Chinese,,0,0,0,,这是本书代码中有趣的功能之一
Dialogue: 0,0:01:52.36,0:01:55.76,English,,0,0,0,,And it's new to the third edition is it uses a new api
Dialogue: 0,0:01:52.36,0:01:55.76,Chinese,,0,0,0,,它是第三版新增的功能，它使用了新的api
Dialogue: 0,0:01:56.38,0:02:03.28,English,,0,0,0,,That lets you pretty easily write code that will work under either of these two versions of the internet protocol
Dialogue: 0,0:01:56.38,0:02:03.28,Chinese,,0,0,0,,这使你可以非常轻松地编写可以在这两个版本Internet协议之一下工作的代码
Dialogue: 0,0:02:04.62,0:02:06.26,English,,0,0,0,,So for example
Dialogue: 0,0:02:04.62,0:02:06.26,Chinese,,0,0,0,,所以举个例子
Dialogue: 0,0:02:08.44,0:02:10.58,English,,0,0,0,,With this slightly modified program
Dialogue: 0,0:02:08.44,0:02:10.58,Chinese,,0,0,0,,通过这个略微修改的程序
Dialogue: 0,0:02:11.54,0:02:14.92,English,,0,0,0,,If I now look up the IP address for facebook
Dialogue: 0,0:02:11.54,0:02:14.92,Chinese,,0,0,0,,如果我现在查找facebook的IP地址
Dialogue: 0,0:02:16.80,0:02:19.02,English,,0,0,0,,You'll see it comes back with two different ones
Dialogue: 0,0:02:16.80,0:02:19.02,Chinese,,0,0,0,,你会看到它会返回两个不同的IP地址
Dialogue: 0,0:02:21.16,0:02:22.02,English,,0,0,0,,And the
Dialogue: 0,0:02:21.16,0:02:22.02,Chinese,,0,0,0,,而且
Dialogue: 0,0:02:25.26,0:02:31.46,English,,0,0,0,,The first one is the familiar dotted decimal form where each recall that each of these digits
Dialogue: 0,0:02:25.26,0:02:31.46,Chinese,,0,0,0,,第一个是熟悉的点分十进制形式，回忆一下这里的每一个数字
Dialogue: 0,0:02:31.46,0:02:35.08,English,,0,0,0,,It's a decimal representation of of a single byte
Dialogue: 0,0:02:31.46,0:02:35.08,Chinese,,0,0,0,,它是单个字节的十进制表示
Dialogue: 0,0:02:35.22,0:02:37.66,English,,0,0,0,,So it's a number between 0 and 255
Dialogue: 0,0:02:35.22,0:02:37.66,Chinese,,0,0,0,,所以范围是0到255之间的数字
Dialogue: 0,0:02:38.32,0:02:46.06,English,,0,0,0,,This is a IPv6 address which is I told you is 128 bits long
Dialogue: 0,0:02:38.32,0:02:46.06,Chinese,,0,0,0,,这是一个IPv6地址，我告诉你它的长度是128个比特位
Dialogue: 0,0:02:46.18,0:02:53.18,English,,0,0,0,,So that's to the seventh takeaway 3 to the fifth 32 bytes right
Dialogue: 0,0:02:46.18,0:02:53.18,Chinese,,0,0,0,,所以这是第七个外卖3到第五个32字节右边
Dialogue: 0,0:02:54.20,0:02:56.52,English,,0,0,0,,And it's usually written in this hex format
Dialogue: 0,0:02:54.20,0:02:56.52,Chinese,,0,0,0,,它通常以这种十六进制格式表示
Dialogue: 0,0:02:58.06,0:03:01.84,English,,0,0,0,,With ： after every pair of bytes
Dialogue: 0,0:02:58.06,0:03:01.84,Chinese,,0,0,0,,在每两个字节后面加一个：
Dialogue: 0,0:03:02.68,0:03:05.74,English,,0,0,0,,And I think the : : just means that's a zero there
Dialogue: 0,0:03:02.68,0:03:05.74,Chinese,,0,0,0,,我认为::只是意味着那里是零
Dialogue: 0,0:03:06.24,0:03:16.38,English,,0,0,0,,When the cute things facebook did was embed face as a hex code inside of their IPv6 address
Dialogue: 0,0:03:06.24,0:03:16.38,Chinese,,0,0,0,,Facebook做了一件有趣的事情，他们face这个单词作为十六进制编码嵌入到了IP6地址当中
Dialogue: 0,0:03:23.84,0:03:24.72,English,,0,0,0,,And
Dialogue: 0,0:03:23.84,0:03:24.72,Chinese,,0,0,0,,嗯……
Dialogue: 0,0:03:28.32,0:03:30.20,English,,0,0,0,,That's really different I get very different results
Dialogue: 0,0:03:28.32,0:03:30.20,Chinese,,0,0,0,,这真的不同，我得到了非常不同的结果
Dialogue: 0,0:03:30.88,0:03:32.96,English,,0,0,0,,Running this at home and then I do here
Dialogue: 0,0:03:30.88,0:03:32.96,Chinese,,0,0,0,,在家里运行和在这里运行
Dialogue: 0,0:03:33.26,0:03:39.62,English,,0,0,0,,And as I mentioned you'll get different results running a DNS server depending on where in the country are
Dialogue: 0,0:03:33.26,0:03:39.62,Chinese,,0,0,0,,正如我所提到的，根据国家/地区的不同，你将获得运行DNS服务器的不同结果
Dialogue: 0,0:03:40.74,0:03:42.72,English,,0,0,0,,Uh if you repeat the same thing over and over again
Dialogue: 0,0:03:40.74,0:03:42.72,Chinese,,0,0,0,,呃，如果你一遍又一遍地重复同样的事情
Dialogue: 0,0:03:42.72,0:03:43.84,English,,0,0,0,,You'll get different results
Dialogue: 0,0:03:42.72,0:03:43.84,Chinese,,0,0,0,,你会得到不同的结果
Dialogue: 0,0:03:43.84,0:03:50.52,English,,0,0,0,,And that's because these very large companies are providing servers that are stationed all over the world
Dialogue: 0,0:03:43.84,0:03:50.52,Chinese,,0,0,0,,这是因为这些非常大的公司正在提供驻扎在世界各地的服务器
Dialogue: 0,0:03:51.02,0:03:56.54,English,,0,0,0,,And as a way to sort of balance out the load of the traffic they also have multiple server addresses
Dialogue: 0,0:03:51.02,0:03:56.54,Chinese,,0,0,0,,作为一种平衡流量负载的方法，它们还具有多个服务器地址
Dialogue: 0,0:03:57.12,0:04:02.56,English,,0,0,0,,That then they kind of rotate through to give you so that different people will get served by different machines
Dialogue: 0,0:03:57.12,0:04:02.56,Chinese,,0,0,0,,然后他们会把地址轮流返回给你，以便不同的人可以得到不同的机器的服务
Dialogue: 0,0:04:03.70,0:04:11.72,English,,0,0,0,,So you see for example twitter, google just gave me two addresses in IPv4 and IPv6 address
Dialogue: 0,0:04:03.70,0:04:11.72,Chinese,,0,0,0,,所以你看到例如twitter，谷歌只给了我两个地址的，一个IPv4和一个IPv6
Dialogue: 0,0:04:12.34,0:04:15.12,English,,0,0,0,,Twitter gave me a for different IPv4 addresses
Dialogue: 0,0:04:12.34,0:04:15.12,Chinese,,0,0,0,,Twitter给了我一个不同的IPv4地址
Dialogue: 0,0:04:18.16,0:04:21.36,English,,0,0,0,,So let's look then at the code
Dialogue: 0,0:04:18.16,0:04:21.36,Chinese,,0,0,0,,那么让我们看看代码
Dialogue: 0,0:04:22.08,0:04:25.38,English,,0,0,0,,I'll go back through some of what we talked about last time
Dialogue: 0,0:04:22.08,0:04:25.38,Chinese,,0,0,0,,我将回顾一下我们上次谈到的一些内容
Dialogue: 0,0:04:26.00,0:04:28.92,English,,0,0,0,,I quite honestly I spent a fair amount of time looking at it
Dialogue: 0,0:04:26.00,0:04:28.92,Chinese,,0,0,0,,老实说，我花了相当多的时间来看待它
Dialogue: 0,0:04:29.08,0:04:31.56,English,,0,0,0,,So I can really understand it better
Dialogue: 0,0:04:29.08,0:04:31.56,Chinese,,0,0,0,,所以我可以更好地理解它
Dialogue: 0,0:04:32.10,0:04:34.22,English,,0,0,0,,Because it's pretty it's not simple stuff
Dialogue: 0,0:04:32.10,0:04:34.22,Chinese,,0,0,0,,因为它很漂亮并不简单
Dialogue: 0,0:04:35.48,0:04:36.70,English,,0,0,0,,But as I mentioned that
Dialogue: 0,0:04:35.48,0:04:36.70,Chinese,,0,0,0,,但正如我提到的那样
Dialogue: 0,0:04:37.36,0:04:38.80,English,,0,0,0,,As we went over last time
Dialogue: 0,0:04:37.36,0:04:38.80,Chinese,,0,0,0,,我们上次去了
Dialogue: 0,0:04:39.54,0:04:42.52,English,,0,0,0,,This is sort of this giant block diagram that shows
Dialogue: 0,0:04:39.54,0:04:42.52,Chinese,,0,0,0,,这是一个巨大的框图显示
Dialogue: 0,0:04:43.06,0:04:47.86,English,,0,0,0,,All the activity involved in setting up and running both a server and a client
Dialogue: 0,0:04:43.06,0:04:47.86,Chinese,,0,0,0,,设置和运行服务器和客户端所涉及的所有活动
Dialogue: 0,0:04:48.76,0:04:50.08,English,,0,0,0,,And just to repeat
Dialogue: 0,0:04:48.76,0:04:50.08,Chinese,,0,0,0,,只是重复一遍
Dialogue: 0,0:04:50.74,0:04:54.70,English,,0,0,0,,The idea is you need to the server needs to fire up
Dialogue: 0,0:04:50.74,0:04:54.70,Chinese,,0,0,0,,这个想法是你需要服务器需要启动
Dialogue: 0,0:04:54.72,0:04:58.78,English,,0,0,0,,You can't contact a server until that server exists
Dialogue: 0,0:04:54.72,0:04:58.78,Chinese,,0,0,0,,在该服务器存在之前，你无法联系服务器
Dialogue: 0,0:04:59.04,0:05:02.12,English,,0,0,0,,So it's the server is the thing that has to exist first
Dialogue: 0,0:04:59.04,0:05:02.12,Chinese,,0,0,0,,所以服务器是首先必须存在的东西
Dialogue: 0,0:05:02.70,0:05:09.30,English,,0,0,0,,And all these steps are what are required for a server to begin on a machine
Dialogue: 0,0:05:02.70,0:05:09.30,Chinese,,0,0,0,,所有这些步骤都是服务器在计算机上启动所需的步骤
Dialogue: 0,0:05:09.30,0:05:12.60,English,,0,0,0,,And then to accept a connection request from a client
Dialogue: 0,0:05:09.30,0:05:12.60,Chinese,,0,0,0,,然后接受来自客户端的连接请求
Dialogue: 0,0:05:14.52,0:05:18.88,English,,0,0,0,,Similarly once the server is set then the client can begin
Dialogue: 0,0:05:14.52,0:05:18.88,Chinese,,0,0,0,,同样，一旦设置了服务器，客户端就可以开始了
Dialogue: 0,0:05:19.32,0:05:22.52,English,,0,0,0,,And it's like placing a call to the server
Dialogue: 0,0:05:19.32,0:05:22.52,Chinese,,0,0,0,,这就像拨打服务器一样
Dialogue: 0,0:05:23.04,0:05:25.02,English,,0,0,0,,And it makes a connection request
Dialogue: 0,0:05:23.04,0:05:25.02,Chinese,,0,0,0,,它会发出连接请求
Dialogue: 0,0:05:25.60,0:05:27.48,English,,0,0,0,,And that's accepted by the server
Dialogue: 0,0:05:25.60,0:05:27.48,Chinese,,0,0,0,,这已经被服务器接受了
Dialogue: 0,0:05:27.96,0:05:32.22,English,,0,0,0,,And then what's called a session begins meaning an ability for these two
Dialogue: 0,0:05:27.96,0:05:32.22,Chinese,,0,0,0,,然后所谓的会话开始意味着这两者的能力
Dialogue: 0,0:05:32.78,0:05:37.87,English,,0,0,0,,Machines to talk back and for worth over an internet connection
Dialogue: 0,0:05:32.78,0:05:37.87,Chinese,,0,0,0,,通过互联网连接进行通话的机器
Dialogue: 0,0:05:38.54,0:05:42.70,English,,0,0,0,,And they'll do it this example I'll show is done by reading and writing
Dialogue: 0,0:05:38.54,0:05:42.70,Chinese,,0,0,0,,他们会做这个例子我将通过阅读和写作完成
Dialogue: 0,0:05:43.22,0:05:49.08,English,,0,0,0,,As if they were filed,a file each end looks like it's reading and writing a file
Dialogue: 0,0:05:43.22,0:05:49.08,Chinese,,0,0,0,,就好像它们被归档一样，每个文件的末尾看起来都在读取和写入文件
Dialogue: 0,0:05:52.08,0:05:57.92,English,,0,0,0,,And then once the client is done with whatever it's trying to get
Dialogue: 0,0:05:52.08,0:05:57.92,Chinese,,0,0,0,,然后，一旦客户端完成了它想要获得的任何东西
Dialogue: 0,0:05:58.60,0:06:01.30,English,,0,0,0,,It will disconnect
Dialogue: 0,0:05:58.60,0:06:01.30,Chinese,,0,0,0,,它将断开连接
Dialogue: 0,0:06:02.28,0:06:03.68,English,,0,0,0,,Since we hang up its phone
Dialogue: 0,0:06:02.28,0:06:03.68,Chinese,,0,0,0,,因为我们挂了电话
Dialogue: 0,0:06:04.76,0:06:10.74,English,,0,0,0,,And then the listening the server will detect this by receiving an end of file
Dialogue: 0,0:06:04.76,0:06:10.74,Chinese,,0,0,0,,然后监听服务器将通过接收文件结束来检测到这一点
Dialogue: 0,0:06:10.74,0:06:13.02,English,,0,0,0,,When it attempts to read from the client
Dialogue: 0,0:06:10.74,0:06:13.02,Chinese,,0,0,0,,当它试图从客户端读取时
Dialogue: 0,0:06:13.74,0:06:19.70,English,,0,0,0,,And then it will close that connection but and this I didn't have stated quite properly last time
Dialogue: 0,0:06:13.74,0:06:19.70,Chinese,,0,0,0,,然后它会关闭那个连接，但是我上次没有说得很清楚
Dialogue: 0,0:06:20.42,0:06:24.60,English,,0,0,0,,This it's not going to actually shut down at that point it's just going to return back
Dialogue: 0,0:06:20.42,0:06:24.60,Chinese,,0,0,0,,在这一点上它实际上不会关闭它只会返回
Dialogue: 0,0:06:25.42,0:06:27.12,English,,0,0,0,,And accept a new connection request
Dialogue: 0,0:06:25.42,0:06:27.12,Chinese,,0,0,0,,并接受新的连接请求
Dialogue: 0,0:06:27.66,0:06:32.42,English,,0,0,0,,And this is what's known as an iterative server it can only handle a single client at a time
Dialogue: 0,0:06:27.66,0:06:32.42,Chinese,,0,0,0,,这就是所谓的迭代服务器，它一次只能处理一个客户端
Dialogue: 0,0:06:32.96,0:06:39.72,English,,0,0,0,,Later in the course we'll talk about how to do a multi-threaded server that can handle multiple connections at one time
Dialogue: 0,0:06:32.96,0:06:39.72,Chinese,,0,0,0,,在本课程的后面，我们将讨论如何创建一个可以同时处理多个连接的多线程服务器
Dialogue: 0,0:06:40.66,0:06:42.58,English,,0,0,0,,So this is a pretty basic version
Dialogue: 0,0:06:40.66,0:06:42.58,Chinese,,0,0,0,,所以这是一个非常基本的版本
Dialogue: 0,0:06:44.98,0:06:57.02,English,,0,0,0,,So the first step on either the client or the server side is this very hairy messy relatively new api  called getaddrinfo
Dialogue: 0,0:06:44.98,0:06:57.02,Chinese,,0,0,0,,所以在客户端或服务器端的第一步是这个非常多毛的凌乱相对较新的api，叫做getaddrinfo
Dialogue: 0,0:06:57.52,0:07:03.02,English,,0,0,0,,And the idea of getaddrinfo is it's a sort of kitchen sink a Swiss army knife for you
Dialogue: 0,0:06:57.52,0:07:03.02,Chinese,,0,0,0,,getaddrinfo的想法是它是一种厨房水槽，一把瑞士军刀
Dialogue: 0,0:07:03.04,0:07:07.80,English,,0,0,0,,All those expressions of it has a zillion features
Dialogue: 0,0:07:03.04,0:07:07.80,Chinese,,0,0,0,,它的所有表达都具有无数的特征
Dialogue: 0,0:07:08.26,0:07:13.42,English,,0,0,0,,To that sort of subsume a lot of other sort of individual protocols
Dialogue: 0,0:07:08.26,0:07:13.42,Chinese,,0,0,0,,对于那种包含许多其他类型的单独协议
Dialogue: 0,0:07:13.52,0:07:17.90,English,,0,0,0,,So for example it's pretty much the same whether it's IPv4 IPv6
Dialogue: 0,0:07:13.52,0:07:17.90,Chinese,,0,0,0,,例如，无论是IPv4 IPv6，它几乎都是一样的
Dialogue: 0,0:07:18.64,0:07:27.68,English,,0,0,0,,It lets you sort of go forward from and a domain name to an IP address
Dialogue: 0,0:07:18.64,0:07:27.68,Chinese,,0,0,0,,它允许你从一个域名转发到一个IP地址
Dialogue: 0,0:07:27.82,0:07:31.34,English,,0,0,0,,Lets you go backward from an IP address back to a domain name
Dialogue: 0,0:07:27.82,0:07:31.34,Chinese,,0,0,0,,允许你从IP地址返回到域名
Dialogue: 0,0:07:31.69,0:07:39.08,English,,0,0,0,,It supports all of those things it will let you look up what is the port number associated with an http server
Dialogue: 0,0:07:31.69,0:07:39.08,Chinese,,0,0,0,,它支持所有这些功能，它可以让你查找与http服务器关联的端口号
Dialogue: 0,0:07:39.20,0:07:41.70,English,,0,0,0,,So it will let you do all kinds of different things
Dialogue: 0,0:07:39.20,0:07:41.70,Chinese,,0,0,0,,所以它会让你做各种不同的事情
Dialogue: 0,0:07:43.22,0:07:51.50,English,,0,0,0,,And as a result it's a big and messy api with zillions features and parameters and and so forth
Dialogue: 0,0:07:43.22,0:07:51.50,Chinese,,0,0,0,,因此，它是一个庞大而凌乱的api，具有zillions功能和参数等等
Dialogue: 0,0:07:55.26,0:07:57.60,English,,0,0,0,,So you recall from last time that the
Dialogue: 0,0:07:55.26,0:07:57.60,Chinese,,0,0,0,,所以你从上次回忆起那个
Dialogue: 0,0:07:59.12,0:08:05.44,English,,0,0,0,,The data structures we use to refer to a connection
Dialogue: 0,0:07:59.12,0:08:05.44,Chinese,,0,0,0,,我们用来引用连接的数据结构
Dialogue: 0,0:08:06.40,0:08:11.42,English,,0,0,0,,Whether it's an IPv4 or an IPv6 connection is called a sockaddr
Dialogue: 0,0:08:06.40,0:08:11.42,Chinese,,0,0,0,,无论是IPv4还是IPv6连接都称为sockaddr
Dialogue: 0,0:08:12.16,0:08:15.90,English,,0,0,0,,And as I mentioned this is sort of the C version of sub typing
Dialogue: 0,0:08:12.16,0:08:15.90,Chinese,,0,0,0,,正如我所提到的，这是一种子类型的C版本
Dialogue: 0,0:08:15.96,0:08:18.78,English,,0,0,0,,If you know a language with a type inheritance
Dialogue: 0,0:08:15.96,0:08:18.78,Chinese,,0,0,0,,如果你知道具有类型继承的语言
Dialogue: 0,0:08:19.30,0:08:22.20,English,,0,0,0,,This is how it's done in C it's done by casting
Dialogue: 0,0:08:19.30,0:08:22.20,Chinese,,0,0,0,,这就是它在C中完成的方式
Dialogue: 0,0:08:22.88,0:08:26.40,English,,0,0,0,,And so in particular the sort of generic socket address
Dialogue: 0,0:08:22.88,0:08:26.40,Chinese,,0,0,0,,特别是那种通用套接字地址
Dialogue: 0,0:08:26.44,0:08:32.06,English,,0,0,0,,All it needs to know is a two byte field at the front that specifies what kind of socket is this
Dialogue: 0,0:08:26.44,0:08:32.06,Chinese,,0,0,0,,它需要知道的是前面的一个双字节字段，它指定了这种类型的套接字
Dialogue: 0,0:08:33.20,0:08:34.46,English,,0,0,0,,And then in particular
Dialogue: 0,0:08:33.20,0:08:34.46,Chinese,,0,0,0,,然后特别是
Dialogue: 0,0:08:35.78,0:08:38.46,English,,0,0,0,,We'll be looking at what's called a sockaddr_in
Dialogue: 0,0:08:35.78,0:08:38.46,Chinese,,0,0,0,,我们将关注所谓的sockaddr_in
Dialogue: 0,0:08:39.02,0:08:43.26,English,,0,0,0,,Which is an IPv4 version of of a socket
Dialogue: 0,0:08:39.02,0:08:43.26,Chinese,,0,0,0,,哪个是套接字的IPv4版本
Dialogue: 0,0:08:43.44,0:08:52.02,English,,0,0,0,,And so what it needs to know is a port number which is a two byte integer and a IP address
Dialogue: 0,0:08:43.44,0:08:52.02,Chinese,,0,0,0,,所以需要知道的是一个端口号，它是一个双字节整数和一个IP地址
Dialogue: 0,0:08:52.12,0:08:56.58,English,,0,0,0,,Which is a 4 byte address for IPv4
Dialogue: 0,0:08:52.12,0:08:56.58,Chinese,,0,0,0,,这是IPv4的4字节地址
Dialogue: 0,0:08:59.02,0:09:02.44,English,,0,0,0,,Both of those are actually stored in this structure as I mentioned in
Dialogue: 0,0:08:59.02,0:09:02.44,Chinese,,0,0,0,,正如我在上面提到的那样，这两个实际上都存储在这个结构中
Dialogue: 0,0:09:02.82,0:09:06.56,English,,0,0,0,,In big-endian order even if you're running it on a little endian machine
Dialogue: 0,0:09:02.82,0:09:06.56,Chinese,,0,0,0,,即使你在一台小端机上运行它，也会以big-endian命令运行
Dialogue: 0,0:09:07.32,0:09:09.78,English,,0,0,0,,And one of the interesting features of that
Dialogue: 0,0:09:07.32,0:09:09.78,Chinese,,0,0,0,,其中一个有趣的特点
Dialogue: 0,0:09:10.32,0:09:12.36,English,,0,0,0,,This api this getaddrinfo
Dialogue: 0,0:09:10.32,0:09:12.36,Chinese,,0,0,0,,这个api这个getaddrinfo
Dialogue: 0,0:09:13.06,0:09:18.78,English,,0,0,0,,It's largely removed the need for you as a programmer to worry about byte ordering
Dialogue: 0,0:09:13.06,0:09:18.78,Chinese,,0,0,0,,它在很大程度上消除了作为程序员担心字节排序的需要
Dialogue: 0,0:09:19.04,0:09:20.56,English,,0,0,0,,And that's a nice feature
Dialogue: 0,0:09:19.04,0:09:20.56,Chinese,,0,0,0,,这是一个很好的功能
Dialogue: 0,0:09:21.18,0:09:25.96,English,,0,0,0,,So in general for example and getaddrinfo if I want to pass an port number
Dialogue: 0,0:09:21.18,0:09:25.96,Chinese,,0,0,0,,所以一般来说例如和getaddrinfo如果我想传递一个端口号
Dialogue: 0,0:09:26.44,0:09:28.46,English,,0,0,0,,I'll pass it as a character string
Dialogue: 0,0:09:26.44,0:09:28.46,Chinese,,0,0,0,,我将它作为一个字符串传递给我
Dialogue: 0,0:09:29.24,0:09:33.56,English,,0,0,0,,A string representation of a decimal number in other words
Dialogue: 0,0:09:29.24,0:09:33.56,Chinese,,0,0,0,,换句话说，十进制数字的字符串表示
Dialogue: 0,0:09:34.20,0:09:43.52,English,,0,0,0,,And then the code here within this api will automatically turn that into a 16-bit integer and  put it in the proper byte order
Dialogue: 0,0:09:34.20,0:09:43.52,Chinese,,0,0,0,,然后这个api中的代码会自动将其转换为16位整数并按正确的字节顺序排列
Dialogue: 0,0:09:44.16,0:09:49.50,English,,0,0,0,,And same with how it takes use of this 32 bit IP address
Dialogue: 0,0:09:44.16,0:09:49.50,Chinese,,0,0,0,,与使用这个32位IP地址的方式相同
Dialogue: 0,0:09:50.16,0:09:53.80,English,,0,0,0,,And you want to get it into dotted decimal form it will do that for you
Dialogue: 0,0:09:50.16,0:09:53.80,Chinese,,0,0,0,,而你想把它变成点分十进制形式它会为你做到这一点
Dialogue: 0,0:09:54.26,0:09:57.88,English,,0,0,0,,Without you having to worry about byte order so it's kind of a nice thing
Dialogue: 0,0:09:54.26,0:09:57.88,Chinese,,0,0,0,,没有你不必担心字节顺序所以这是一件好事
Dialogue: 0,0:10:06.54,0:10:10.02,English,,0,0,0,,So getaddrinfo has a whole bunch of arguments
Dialogue: 0,0:10:06.54,0:10:10.02,Chinese,,0,0,0,,所以getaddrinfo有很多论点
Dialogue: 0,0:10:10.48,0:10:12.92,English,,0,0,0,,And some of them are essentially outputs
Dialogue: 0,0:10:10.48,0:10:12.92,Chinese,,0,0,0,,其中一些基本上是产出
Dialogue: 0,0:10:13.52,0:10:16.86,English,,0,0,0,,Some of them are inputs things you're passing into the function
Dialogue: 0,0:10:13.52,0:10:16.86,Chinese,,0,0,0,,其中一些是你传递给函数的输入内容
Dialogue: 0,0:10:17.18,0:10:20.94,English,,0,0,0,,And others are really more like outputs how it gets information back to you
Dialogue: 0,0:10:17.18,0:10:20.94,Chinese,,0,0,0,,而其他人更像是输出如何将信息传回给你
Dialogue: 0,0:10:21.68,0:10:22.64,English,,0,0,0,,So in particular
Dialogue: 0,0:10:21.68,0:10:22.64,Chinese,,0,0,0,,特别是
Dialogue: 0,0:10:23.62,0:10:28.52,English,,0,0,0,,The first one is just the name of the host and that can be either a domain name
Dialogue: 0,0:10:23.62,0:10:28.52,Chinese,,0,0,0,,第一个只是主机的名称，可以是域名
Dialogue: 0,0:10:29.18,0:10:38.10,English,,0,0,0,,Or a dotted decimal name or one of those funky looking things with the const that you solve for IPv6
Dialogue: 0,0:10:29.18,0:10:38.10,Chinese,,0,0,0,,或点缀的十进制名称，或者你为IPv6解决的const的那些时髦外观之一
Dialogue: 0,0:10:39.12,0:10:43.98,English,,0,0,0,,The service is usually if you're looking up so if we're using this to look up
Dialogue: 0,0:10:39.12,0:10:43.98,Chinese,,0,0,0,,这项服务通常是在你查找时如果我们使用它来查找
Dialogue: 0,0:10:44.62,0:10:46.44,English,,0,0,0,,That'll actually be a null pointer
Dialogue: 0,0:10:44.62,0:10:46.44,Chinese,,0,0,0,,那实际上是一个空指针
Dialogue: 0,0:10:47.10,0:10:54.96,English,,0,0,0,,And basically what typically you'll have is one of those two will be a string and the other will be a null pointer
Dialogue: 0,0:10:47.10,0:10:54.96,Chinese,,0,0,0,,基本上你通常拥有的是这两个中的一个将是一个字符串而另一个将是一个空指针
Dialogue: 0,0:10:55.02,0:11:00.50,English,,0,0,0,,And the reason for that is the same function can be used either to look up a service like
Dialogue: 0,0:10:55.02,0:11:00.50,Chinese,,0,0,0,,原因是同样的功能可以用来查找像这样的服务
Dialogue: 0,0:11:00.94,0:11:03.88,English,,0,0,0,,What is the port number associated with http
Dialogue: 0,0:11:00.94,0:11:03.88,Chinese,,0,0,0,,什么是与http关联的端口号
Dialogue: 0,0:11:04.68,0:11:10.22,English,,0,0,0,,Or it can be what is the IP address of www.cmu.edu
Dialogue: 0,0:11:04.68,0:11:10.22,Chinese,,0,0,0,,或者它可以是www.cmu.edu的IP地址
Dialogue: 0,0:11:11.44,0:11:14.40,English,,0,0,0,,The hints is something that you're passing in
Dialogue: 0,0:11:11.44,0:11:14.40,Chinese,,0,0,0,,提示是你传递的东西
Dialogue: 0,0:11:15.06,0:11:22.00,English,,0,0,0,,And it's basically as you fill in a small amount of a fairly large body of information
Dialogue: 0,0:11:15.06,0:11:22.00,Chinese,,0,0,0,,它基本上就是你填写了一小部分相当大的信息
Dialogue: 0,0:11:22.02,0:11:28.04,English,,0,0,0,,About what specifically are you looking for in this request are you looking for an IPv6
Dialogue: 0,0:11:22.02,0:11:28.04,Chinese,,0,0,0,,关于你在此请求中具体寻找的内容是你在寻找IPv6
Dialogue: 0,0:11:28.74,0:11:32.50,English,,0,0,0,,Information are you looking for IPv4 and so forth
Dialogue: 0,0:11:28.74,0:11:32.50,Chinese,,0,0,0,,信息是你在寻找IPv4等等
Dialogue: 0,0:11:34.34,0:11:36.76,English,,0,0,0,,And then what it returns back
Dialogue: 0,0:11:34.34,0:11:36.76,Chinese,,0,0,0,,然后返回的是什么
Dialogue: 0,0:11:37.32,0:11:46.84,English,,0,0,0,,That's why you pass a ** ,it will return back a linked list that it's generated of results
Dialogue: 0,0:11:37.32,0:11:46.84,Chinese,,0,0,0,,这就是你传递**的原因，它将返回一个由结果生成的链表
Dialogue: 0,0:11:47.86,0:11:50.38,English,,0,0,0,,And the reason for that as I mentioned is
Dialogue: 0,0:11:47.86,0:11:50.38,Chinese,,0,0,0,,我提到的原因是
Dialogue: 0,0:11:51.14,0:11:57.36,English,,0,0,0,,That IP addresses are sort of many to many mapping potentially there as you saw
Dialogue: 0,0:11:51.14,0:11:57.36,Chinese,,0,0,0,,正如你所看到的那样，IP地址可能会有多对多映射
Dialogue: 0,0:11:57.80,0:12:01.58,English,,0,0,0,,It's possible for a single domain name to have multiple IP addresses
Dialogue: 0,0:11:57.80,0:12:01.58,Chinese,,0,0,0,,单个域名可能有多个IP地址
Dialogue: 0,0:12:02.18,0:12:05.44,English,,0,0,0,,It's possible for a single IP address to have multiple domain names
Dialogue: 0,0:12:02.18,0:12:05.44,Chinese,,0,0,0,,单个IP地址可能有多个域名
Dialogue: 0,0:12:05.96,0:12:11.60,English,,0,0,0,,And so this is how they handle that sort of fact that they return a whole list of results
Dialogue: 0,0:12:05.96,0:12:11.60,Chinese,,0,0,0,,所以这就是他们如何处理这样一个事实，即他们返回一整套结果
Dialogue: 0,0:12:13.40,0:12:16.78,English,,0,0,0,,And associated with that once that result gets used
Dialogue: 0,0:12:13.40,0:12:16.78,Chinese,,0,0,0,,一旦结果被使用，就与之相关联
Dialogue: 0,0:12:16.78,0:12:20.44,English,,0,0,0,,Once you done with it you're supposed to call a function called freeaddrinfo
Dialogue: 0,0:12:16.78,0:12:20.44,Chinese,,0,0,0,,一旦你完成它，你应该调用一个名为freeaddrinfo的函数
Dialogue: 0,0:12:20.88,0:12:26.06,English,,0,0,0,,That will basically dispose of all the elements of that linked list you don't have to do it yourself with free
Dialogue: 0,0:12:20.88,0:12:26.06,Chinese,,0,0,0,,这将基本上处理该链接列表的所有元素，你不必自由地自行完成
Dialogue: 0,0:12:26.86,0:12:31.26,English,,0,0,0,,And then there's a another helper function called gai_strerror
Dialogue: 0,0:12:26.86,0:12:31.26,Chinese,,0,0,0,,然后是另一个名为gai_strerror的辅助函数
Dialogue: 0,0:12:31.90,0:12:34.90,English,,0,0,0,,That you use if there's an error code to help you interpret that error
Dialogue: 0,0:12:31.90,0:12:34.90,Chinese,,0,0,0,,如果有错误代码可以帮助你解释该错误，那么你可以使用它
Dialogue: 0,0:12:36.80,0:12:38.06,English,,0,0,0,,And it returns an error code
Dialogue: 0,0:12:36.80,0:12:38.06,Chinese,,0,0,0,,并返回错误代码
Dialogue: 0,0:12:40.26,0:12:44.50,English,,0,0,0,,So as I mentioned it returns up a linked list
Dialogue: 0,0:12:40.26,0:12:44.50,Chinese,,0,0,0,,所以我提到它会返回一个链表
Dialogue: 0,0:12:45.12,0:12:51.40,English,,0,0,0,,That result is a linked list of these a get of addr structs, addrinfo structs
Dialogue: 0,0:12:45.12,0:12:51.40,Chinese,,0,0,0,,这个结果是这些add addr结构，addrinfo结构的链表
Dialogue: 0,0:12:53.14,0:12:56.08,English,,0,0,0,,And the addrinfo struct has int fields
Dialogue: 0,0:12:53.14,0:12:56.08,Chinese,,0,0,0,,addrinfo结构有int字段
Dialogue: 0,0:12:56.94,0:12:59.34,English,,0,0,0,,Some of which you'll use and some which you won't
Dialogue: 0,0:12:56.94,0:12:59.34,Chinese,,0,0,0,,其中一些你将使用，一些你不会
Dialogue: 0,0:13:01.94,0:13:05.26,English,,0,0,0,,This is for example when you're passing in hints
Dialogue: 0,0:13:01.94,0:13:05.26,Chinese,,0,0,0,,例如，当你传递提示时
Dialogue: 0,0:13:06.78,0:13:11.40,English,,0,0,0,,Hints is sort of that what you're passing in the information you know some conditions about
Dialogue: 0,0:13:06.78,0:13:11.40,Chinese,,0,0,0,,提示就是你在了解某些条件的信息中传递的内容
Dialogue: 0,0:13:11.70,0:13:13.68,English,,0,0,0,,What you're looking for in this request
Dialogue: 0,0:13:11.70,0:13:13.68,Chinese,,0,0,0,,你在这个请求中寻找什么
Dialogue: 0,0:13:17.24,0:13:21.20,English,,0,0,0,,And then what some of these you pass in and some of it returns
Dialogue: 0,0:13:17.24,0:13:21.20,Chinese,,0,0,0,,然后你传递了一些其中一些，其中一些返回
Dialogue: 0,0:13:21.78,0:13:24.76,English,,0,0,0,,And so some of these fields are ones that then you can use
Dialogue: 0,0:13:21.78,0:13:24.76,Chinese,,0,0,0,,所以这些领域中的一些是你可以使用的领域
Dialogue: 0,0:13:25.16,0:13:30.88,English,,0,0,0,,When you're making calls to other socket functions,functions in the socket library
Dialogue: 0,0:13:25.16,0:13:30.88,Chinese,,0,0,0,,当你调用其他套接字函数时，套接字库中的函数
Dialogue: 0,0:13:31.32,0:13:34.04,English,,0,0,0,,It'll fill in instead of you having to worry about
Dialogue: 0,0:13:31.32,0:13:34.04,Chinese,,0,0,0,,它会填补而不是你不必担心
Dialogue: 0,0:13:34.26,0:13:40.60,English,,0,0,0,,What's the structure the format of a sockaddr in and how do I convert into network order and stuff
Dialogue: 0,0:13:34.26,0:13:40.60,Chinese,,0,0,0,,sockaddr的格式结构是什么，以及如何转换为网络顺序和内容
Dialogue: 0,0:13:41.20,0:13:42.84,English,,0,0,0,,It will do all that for you
Dialogue: 0,0:13:41.20,0:13:42.84,Chinese,,0,0,0,,它会为你做所有这些
Dialogue: 0,0:13:46.88,0:13:50.94,English,,0,0,0,,So it's a little confusing to use though because sometimes the stuff you're providing
Dialogue: 0,0:13:46.88,0:13:50.94,Chinese,,0,0,0,,所以使用它有点令人困惑，因为有时你提供的东西
Dialogue: 0,0:13:51.46,0:13:55.36,English,,0,0,0,,Is stuff you're giving it and sometimes it's stuff that it's returning back to you
Dialogue: 0,0:13:51.46,0:13:55.36,Chinese,,0,0,0,,是你给它的东西，有时它是回归你的东西
Dialogue: 0,0:13:59.72,0:14:01.64,English,,0,0,0,,And then there's an inverse function
Dialogue: 0,0:13:59.72,0:14:01.64,Chinese,,0,0,0,,然后有一个反函数
Dialogue: 0,0:14:01.76,0:14:04.90,English,,0,0,0,,That so getaddrinfo is given a
Dialogue: 0,0:14:01.76,0:14:04.90,Chinese,,0,0,0,,这样getaddrinfo给了一个
Dialogue: 0,0:14:09.06,0:14:14.32,English,,0,0,0,,It's actually give me the address information about some name
Dialogue: 0,0:14:09.06,0:14:14.32,Chinese,,0,0,0,,它实际上给了我一些名字的地址信息
Dialogue: 0,0:14:15.50,0:14:19.34,English,,0,0,0,,And get name info is I give you an address
Dialogue: 0,0:14:15.50,0:14:19.34,Chinese,,0,0,0,,获取名称信息是我给你一个地址
Dialogue: 0,0:14:19.88,0:14:24.88,English,,0,0,0,,And you give me back some documentation about it including potentially a domain name
Dialogue: 0,0:14:19.88,0:14:24.88,Chinese,,0,0,0,,你给我一些关于它的文件，包括可能的域名
Dialogue: 0,0:14:25.74,0:14:31.38,English,,0,0,0,,So there you pass in as a the first argument is a sockaddr struct
Dialogue: 0,0:14:25.74,0:14:31.38,Chinese,,0,0,0,,所以你传入的第一个参数是一个sockaddr结构
Dialogue: 0,0:14:32.08,0:14:35.86,English,,0,0,0,,Remember for this lecture and I think in the book in a few places
Dialogue: 0,0:14:32.08,0:14:35.86,Chinese,,0,0,0,,请记住这个讲座，我想在书中的几个地方
Dialogue: 0,0:14:35.86,0:14:39.86,English,,0,0,0,,We've sort of created a typedef to alias
Dialogue: 0,0:14:35.86,0:14:39.86,Chinese,,0,0,0,,我们已经创建了一个别名的typedef
Dialogue: 0,0:14:40.52,0:14:45.02,English,,0,0,0,,So we don't have to say struct sockaddr all over the place but that's what the SA is
Dialogue: 0,0:14:40.52,0:14:45.02,Chinese,,0,0,0,,所以我们不必在整个地方都说struct sockaddr，但那就是SA
Dialogue: 0,0:14:46.96,0:14:54.70,English,,0,0,0,,And it will provide back information about that address
Dialogue: 0,0:14:46.96,0:14:54.70,Chinese,,0,0,0,,它将提供有关该地址的信息
Dialogue: 0,0:14:54.92,0:14:57.84,English,,0,0,0,,So if you passing in a 32 bit IP address
Dialogue: 0,0:14:54.92,0:14:57.84,Chinese,,0,0,0,,所以，如果你传入一个32位的IP地址
Dialogue: 0,0:14:58.40,0:15:04.84,English,,0,0,0,,You can get it to return either a dotted decimal version of that or to do the DNS lookup
Dialogue: 0,0:14:58.40,0:15:04.84,Chinese,,0,0,0,,你可以让它返回点分十进制版本或进行DNS查找
Dialogue: 0,0:15:05.32,0:15:07.42,English,,0,0,0,,And have it come back with the domain name for that
Dialogue: 0,0:15:05.32,0:15:07.42,Chinese,,0,0,0,,并让它返回域名
Dialogue: 0,0:15:11.16,0:15:17.60,English,,0,0,0,,So this is that program that I just demoed to you this one called host info
Dialogue: 0,0:15:11.16,0:15:17.60,Chinese,,0,0,0,,所以这就是我刚给你演示的程序，这个程序叫做主机信息
Dialogue: 0,0:15:17.70,0:15:24.46,English,,0,0,0,,So all it's really going to do is use these features to all on the command line give a domain name you say
Dialogue: 0,0:15:17.70,0:15:24.46,Chinese,,0,0,0,,所以它真正要做的就是在命令行中使用这些功能给出你说的域名
Dialogue: 0,0:15:25.00,0:15:28.50,English,,0,0,0,,And it will just come back with a list of IP addresses
Dialogue: 0,0:15:25.00,0:15:28.50,Chinese,,0,0,0,,它将返回一个IP地址列表
Dialogue: 0,0:15:30.04,0:15:30.88,English,,0,0,0,,So
Dialogue: 0,0:15:30.04,0:15:30.88,Chinese,,0,0,0,,所以
Dialogue: 0,0:15:32.22,0:15:37.80,English,,0,0,0,,And this is pretty much the way you write code for this getaddrinfo api
Dialogue: 0,0:15:32.22,0:15:37.80,Chinese,,0,0,0,,这就是你为这个getaddrinfo api编写代码的方式
Dialogue: 0,0:15:39.02,0:15:45.04,English,,0,0,0,,That you typically so hints is the information I'm passing about what it is I'm looking for here
Dialogue: 0,0:15:39.02,0:15:45.04,Chinese,,0,0,0,,你通常提示的是我正在传递的信息，我在这里寻找的是什么
Dialogue: 0,0:15:46.62,0:15:51.98,English,,0,0,0,,And so you start typically by zeroing out that entire field
Dialogue: 0,0:15:46.62,0:15:51.98,Chinese,,0,0,0,,因此，你通常会将整个字段归零
Dialogue: 0,0:15:53.68,0:15:56.56,English,,0,0,0,,And then setting the particular things you want
Dialogue: 0,0:15:53.68,0:15:56.56,Chinese,,0,0,0,,然后设置你想要的特定事物
Dialogue: 0,0:15:56.74,0:15:59.08,English,,0,0,0,,So in particular
Dialogue: 0,0:15:56.74,0:15:59.08,Chinese,,0,0,0,,特别是
Dialogue: 0,0:16:00.36,0:16:05.58,English,,0,0,0,,In this code that's...in the slides and the one I demo to you last time
Dialogue: 0,0:16:00.36,0:16:05.58,Chinese,,0,0,0,,在这段代码中，幻灯片和我上次向你演示的代码
Dialogue: 0,0:16:05.64,0:16:08.70,English,,0,0,0,,I'm only going to be looking for IPv4 connections
Dialogue: 0,0:16:05.64,0:16:08.70,Chinese,,0,0,0,,我只会寻找IPv4连接
Dialogue: 0,0:16:09.30,0:16:14.20,English,,0,0,0,,And so I use the constant called AF_INET which is defined in the sockets interface
Dialogue: 0,0:16:09.30,0:16:14.20,Chinese,,0,0,0,,所以我使用在套接字接口中定义的名为AF_INET的常量
Dialogue: 0,0:16:14.94,0:16:20.00,English,,0,0,0,,And also I'll say that I want a TCP connection out what's called a socket stream
Dialogue: 0,0:16:14.94,0:16:20.00,Chinese,,0,0,0,,而且我会说我想要一个TCP连接，这就是所谓的套接字流
Dialogue: 0,0:16:20.54,0:16:28.84,English,,0,0,0,,Which if you recall is the sort of protocol that 99% of the the IP traffic in the world is carrying is on TCP
Dialogue: 0,0:16:20.54,0:16:28.84,Chinese,,0,0,0,,如果你还记得那就是世界上99％的IP流量都在TCP上的那种协议
Dialogue: 0,0:16:29.34,0:16:35.78,English,,0,0,0,,Meaning it provides a somewhat higher level abstraction of what's going on of sending packets back and forth
Dialogue: 0,0:16:29.34,0:16:35.78,Chinese,,0,0,0,,这意味着它提供了对来回发送数据包的更高级别的抽象
Dialogue: 0,0:16:37.26,0:16:40.04,English,,0,0,0,,So that's as much hint as I'm giving it here
Dialogue: 0,0:16:37.26,0:16:40.04,Chinese,,0,0,0,,所以这就像我在这里提供的一样多
Dialogue: 0,0:16:41.24,0:16:46.02,English,,0,0,0,,And now I'm making a call to getaddrinfo and this argument is the name
Dialogue: 0,0:16:41.24,0:16:46.02,Chinese,,0,0,0,,现在我正在调用getaddrinfo，这个名字就是这个名字
Dialogue: 0,0:16:46.44,0:16:49.18,English,,0,0,0,,Which is I'm getting it right off of the command line here
Dialogue: 0,0:16:46.44,0:16:49.18,Chinese,,0,0,0,,我在这里从命令行了解它
Dialogue: 0,0:16:49.26,0:16:55.54,English,,0,0,0,,So in my demo it was always the commit up a domain name
Dialogue: 0,0:16:49.26,0:16:55.54,Chinese,,0,0,0,,所以在我的演示中，它始终是提交域名
Dialogue: 0,0:16:55.92,0:17:04.02,English,,0,0,0,,I'm passing it null for the service as I mentioned this call you typically have one of the two are is null but not both
Dialogue: 0,0:16:55.92,0:17:04.02,Chinese,,0,0,0,,我正在为服务传递null，因为我提到这个调用你通常有两个中的一个是null但不是两个
Dialogue: 0,0:17:05.34,0:17:08.98,English,,0,0,0,,Hints is what I'm passing in is this is the kind of information I want
Dialogue: 0,0:17:05.34,0:17:08.98,Chinese,,0,0,0,,提示是我传递的是这是我想要的那种信息
Dialogue: 0,0:17:09.86,0:17:17.58,English,,0,0,0,,And listp is a will now become a pointer to the results that get returned by getaddrinfo
Dialogue: 0,0:17:09.86,0:17:17.58,Chinese,,0,0,0,,而listp现在将成为指向getaddrinfo返回的结果的指针
Dialogue: 0,0:17:21.24,0:17:24.76,English,,0,0,0,,So that's the calling all of its quarry
Dialogue: 0,0:17:21.24,0:17:24.76,Chinese,,0,0,0,,这就是所有采石场的召唤
Dialogue: 0,0:17:29.18,0:17:32.62,English,,0,0,0,,Okay and now I want to go back so I got one of those linked lists
Dialogue: 0,0:17:29.18,0:17:32.62,Chinese,,0,0,0,,好的，现在我想回去，所以我得到了一个链接列表
Dialogue: 0,0:17:32.78,0:17:37.30,English,,0,0,0,,And that will have a whole bunch of IP address of potentially multiple IP addresses in it
Dialogue: 0,0:17:32.78,0:17:37.30,Chinese,,0,0,0,,这将包含一大堆可能包含多个IP地址的IP地址
Dialogue: 0,0:17:37.80,0:17:39.56,English,,0,0,0,,Maybe just one maybe none
Dialogue: 0,0:17:37.80,0:17:39.56,Chinese,,0,0,0,,也许只有一个也许没有
Dialogue: 0,0:17:40.38,0:17:42.44,English,,0,0,0,,But some number of them in a linked list
Dialogue: 0,0:17:40.38,0:17:42.44,Chinese,,0,0,0,,但其中有一些在链表中
Dialogue: 0,0:17:43.08,0:17:47.84,English,,0,0,0,,And I want to walk through that list and get back the dotted decimal version of all those names
Dialogue: 0,0:17:43.08,0:17:47.84,Chinese,,0,0,0,,我想通过该列表并获取所有这些名称的点分十进制版本
Dialogue: 0,0:17:48.36,0:17:53.98,English,,0,0,0,,Or the colon eyes of those IPv6 addresses I don't know how you refer to those by the way
Dialogue: 0,0:17:48.36,0:17:53.98,Chinese,,0,0,0,,或者那些IPv6地址的冒号眼睛我不知道你是怎么称呼它们的
Dialogue: 0,0:17:54.86,0:17:58.60,English,,0,0,0,,I know relatively little about IPv6 I have to confess
Dialogue: 0,0:17:54.86,0:17:58.60,Chinese,,0,0,0,,我对IPv6的了解相对较少，我不得不承认
Dialogue: 0,0:18:00.10,0:18:05.42,English,,0,0,0,,So then there's a function called getnameinfo which usually you use to take
Dialogue: 0,0:18:00.10,0:18:05.42,Chinese,,0,0,0,,那么就有一个名为getnameinfo的函数，通常你可以使用它
Dialogue: 0,0:18:05.60,0:18:09.66,English,,0,0,0,,A socket address IP address and go backward and get a domain name
Dialogue: 0,0:18:05.60,0:18:09.66,Chinese,,0,0,0,,套接字地址IP地址，然后返回并获取域名
Dialogue: 0,0:18:10.24,0:18:11.16,English,,0,0,0,,But if I tell it
Dialogue: 0,0:18:10.24,0:18:11.16,Chinese,,0,0,0,,但是，如果我告诉它
Dialogue: 0,0:18:12.08,0:18:16.74,English,,0,0,0,,By a flag one of the final argument to it is a flag argument
Dialogue: 0,0:18:12.08,0:18:16.74,Chinese,,0,0,0,,通过一个标志，它的最后一个参数是一个标志参数
Dialogue: 0,0:18:17.20,0:18:22.44,English,,0,0,0,,And say what I want back from this is not a domain name I wanted in this numeric format
Dialogue: 0,0:18:17.20,0:18:22.44,Chinese,,0,0,0,,并说我想从这里回来的不是我想要的这个数字格式的域名
Dialogue: 0,0:18:22.82,0:18:27.42,English,,0,0,0,,Either dotted decimal or the cohen's between hex digits
Dialogue: 0,0:18:22.82,0:18:27.42,Chinese,,0,0,0,,点分十进制或十六进制数字之间的cohen
Dialogue: 0,0:18:28.80,0:18:31.20,English,,0,0,0,,So by passing that to getnameinfo
Dialogue: 0,0:18:28.80,0:18:31.20,Chinese,,0,0,0,,所以通过传递给getnameinfo
Dialogue: 0,0:18:31.84,0:18:36.92,English,,0,0,0,,What it's going to return and I'm passing in a buffer meaning of a char*
Dialogue: 0,0:18:31.84,0:18:36.92,Chinese,,0,0,0,,它将返回什么，我正在缓冲区中传递char *
Dialogue: 0,0:18:37.68,0:18:43.82,English,,0,0,0,,And some size of that buffer and it's going to fill that in with the string representation of it
Dialogue: 0,0:18:37.68,0:18:43.82,Chinese,,0,0,0,,和缓冲区的一些大小，它将用它的字符串表示填充
Dialogue: 0,0:18:44.38,0:18:46.90,English,,0,0,0,,So you see this is a way I'm going from the
Dialogue: 0,0:18:44.38,0:18:46.90,Chinese,,0,0,0,,所以你看到这是我要走的路
Dialogue: 0,0:18:47.20,0:18:52.98,English,,0,0,0,,If you look at this is the actual sockaddr of each of the wist elements
Dialogue: 0,0:18:47.20,0:18:52.98,Chinese,,0,0,0,,如果你看一下这是每个wist元素的实际sockaddr
Dialogue: 0,0:18:55.26,0:18:59.88,English,,0,0,0,,I'm giving it,it's going from that sockaddr which embedded within it
Dialogue: 0,0:18:55.26,0:18:59.88,Chinese,,0,0,0,,我正在给它，它来自嵌入其中的那个sockaddr
Dialogue: 0,0:19:00.30,0:19:03.82,English,,0,0,0,,As you know is the 4 byte IP address
Dialogue: 0,0:19:00.30,0:19:03.82,Chinese,,0,0,0,,如你所知，是4字节的IP地址
Dialogue: 0,0:19:04.44,0:19:06.78,English,,0,0,0,,And what it's doing is it's taking that
Dialogue: 0,0:19:04.44,0:19:06.78,Chinese,,0,0,0,,而它正在做的是它正在采取这样做
Dialogue: 0,0:19:07.28,0:19:11.20,English,,0,0,0,,Flipping the bytes well and converting it to the dotted decimal form so
Dialogue: 0,0:19:07.28,0:19:11.20,Chinese,,0,0,0,,很好地翻转字节并将其转换为点分十进制形式
Dialogue: 0,0:19:12.06,0:19:17.06,English,,0,0,0,,This function can do a lot of different things and I'm using it for that particular feature here
Dialogue: 0,0:19:12.06,0:19:17.06,Chinese,,0,0,0,,这个函数可以做很多不同的事情，我在这里使用它来表示这个特定的功能
Dialogue: 0,0:19:17.20,0:19:21.00,English,,0,0,0,,Question
Dialogue: 0,0:19:17.20,0:19:21.00,Chinese,,0,0,0,,题
Dialogue: 0,0:19:21.22,0:19:23.84,English,,0,0,0,,If he is no then I will go very far
Dialogue: 0,0:19:21.22,0:19:23.84,Chinese,,0,0,0,,如果他不是那么我会走得很远
Dialogue: 0,0:19:28.02,0:19:30.60,English,,0,0,0,,Yes because you know it's a null-terminated whist so
Dialogue: 0,0:19:28.02,0:19:30.60,Chinese,,0,0,0,,是的，因为你知道它是一个空终止的惠斯特
Dialogue: 0,0:19:31.42,0:19:32.24,English,,0,0,0,,Other questions
Dialogue: 0,0:19:31.42,0:19:32.24,Chinese,,0,0,0,,其他问题
Dialogue: 0,0:19:32.64,0:19:33.40,English,,0,0,0,,Good questions
Dialogue: 0,0:19:32.64,0:19:33.40,Chinese,,0,0,0,,好问题
Dialogue: 0,0:19:34.10,0:19:36.32,English,,0,0,0,,But that's exactly the code you saw running
Dialogue: 0,0:19:34.10,0:19:36.32,Chinese,,0,0,0,,但这正是你看到的运行代码
Dialogue: 0,0:19:36.90,0:19:42.16,English,,0,0,0,,And all I did to generalize it to include IPv6 addresses
Dialogue: 0,0:19:36.90,0:19:42.16,Chinese,,0,0,0,,我所做的就是将其概括为包含IPv6地址
Dialogue: 0,0:19:42.60,0:19:44.66,English,,0,0,0,,Was I commented out this one
Dialogue: 0,0:19:42.60,0:19:44.66,Chinese,,0,0,0,,我是否已注释掉这一个
Dialogue: 0,0:19:45.94,0:19:53.26,English,,0,0,0,, I don't demand that it be a IP, AF_INET is a shorthand for IPv4
Dialogue: 0,0:19:45.94,0:19:53.26,Chinese,,0,0,0,,我不要求它是IP，AF_INET是IPv4的简写
Dialogue: 0,0:19:53.32,0:20:01.72,English,,0,0,0,,So by commenting that out it said okay I'll get whatever TCP connections this domain will support
Dialogue: 0,0:19:53.32,0:20:01.72,Chinese,,0,0,0,,所以通过评论说它没关系，我会得到这个域将支持的任何TCP连接
Dialogue: 0,0:20:01.94,0:20:04.16,English,,0,0,0,,And that will include IPv6 addresses
Dialogue: 0,0:20:01.94,0:20:04.16,Chinese,,0,0,0,,这将包括IPv6地址
Dialogue: 0,0:20:07.98,0:20:09.66,English,,0,0,0,,So I thought it's pretty neat
Dialogue: 0,0:20:07.98,0:20:09.66,Chinese,,0,0,0,,所以我觉得它很整洁
Dialogue: 0,0:20:10.42,0:20:14.90,English,,0,0,0,,And you have to be a pretty nerdy but I am pretty nerdy to think this kind of thing is neat
Dialogue: 0,0:20:10.42,0:20:14.90,Chinese,,0,0,0,,而且你必须是一个非常讨厌但我觉得这样的事情很整洁我很讨厌
Dialogue: 0,0:20:14.90,0:20:16.46,English,,0,0,0,,But that you could write code
Dialogue: 0,0:20:14.90,0:20:16.46,Chinese,,0,0,0,,但是你可以编写代码
Dialogue: 0,0:20:17.10,0:20:21.60,English,,0,0,0,,In this way that whether you're doing your different versions of the internet protocol
Dialogue: 0,0:20:17.10,0:20:21.60,Chinese,,0,0,0,,通过这种方式，你是否正在使用不同版本的互联网协议
Dialogue: 0,0:20:22.96,0:20:25.30,English,,0,0,0,,Well it's all one common body of code
Dialogue: 0,0:20:22.96,0:20:25.30,Chinese,,0,0,0,,嗯，这是所有常见的代码体
Dialogue: 0,0:20:27.78,0:20:29.30,English,,0,0,0,,So we've seen demo of this
Dialogue: 0,0:20:27.78,0:20:29.30,Chinese,,0,0,0,,所以我们已经看到了这个的演示
Dialogue: 0,0:20:30.16,0:20:37.60,English,,0,0,0,,Okay so now let's jump into that shows you sort of a little bit of this getaddrinfo api
Dialogue: 0,0:20:30.16,0:20:37.60,Chinese,,0,0,0,,好的，现在让我们跳进去，这表明你有点像这个getaddrinfo api
Dialogue: 0,0:20:37.76,0:20:42.04,English,,0,0,0,,Now let's jump into the full-blown web server part
Dialogue: 0,0:20:37.76,0:20:42.04,Chinese,,0,0,0,,现在让我们跳进成熟的Web服务器部分
Dialogue: 0,0:20:42.80,0:20:48.12,English,,0,0,0,,And as I mentioned in chronological order you actually want to set up the server first
Dialogue: 0,0:20:42.80,0:20:48.12,Chinese,,0,0,0,,正如我在时间顺序中提到的那样，你实际上想要首先设置服务器
Dialogue: 0,0:20:48.92,0:20:51.52,English,,0,0,0,,But it's easiest to understand the code for the client
Dialogue: 0,0:20:48.92,0:20:51.52,Chinese,,0,0,0,,但是最容易理解客户端的代码
Dialogue: 0,0:20:51.80,0:20:56.20,English,,0,0,0,,Because as you see it has a couple fewer calls to make
Dialogue: 0,0:20:51.80,0:20:56.20,Chinese,,0,0,0,,因为你看到它的呼叫次数减少了几次
Dialogue: 0,0:20:56.68,0:20:59.24,English,,0,0,0,,So let's go for through the client and just imagine
Dialogue: 0,0:20:56.68,0:20:59.24,Chinese,,0,0,0,,所以，让我们通过客户进行想象吧
Dialogue: 0,0:20:59.66,0:21:03.28,English,,0,0,0,,That somewhere out there there's a server that's waiting for us to connect to
Dialogue: 0,0:20:59.66,0:21:03.28,Chinese,,0,0,0,,那个地方有一台等待我们连接的服务器
Dialogue: 0,0:21:06.72,0:21:09.10,English,,0,0,0,,So this now doesn't perhaps
Dialogue: 0,0:21:06.72,0:21:09.10,Chinese,,0,0,0,,所以现在也许不是这样
Dialogue: 0,0:21:09.56,0:21:13.18,English,,0,0,0,,When you break it down maybe this picture looks a little less daunting
Dialogue: 0,0:21:09.56,0:21:13.18,Chinese,,0,0,0,,当你打破它时，这张照片可能看起来不那么令人生畏
Dialogue: 0,0:21:13.52,0:21:22.92,English,,0,0,0,,We already saw getaddrinfo is the way I'm going to get an IP address  out of whatever I'm where my server is
Dialogue: 0,0:21:13.52,0:21:22.92,Chinese,,0,0,0,,我们已经看到getaddrinfo就是我要从我服务器所在的地方获取IP地址的方式
Dialogue: 0,0:21:23.50,0:21:26.88,English,,0,0,0,,Socket I mentioned this yesterday or last time
Dialogue: 0,0:21:23.50,0:21:26.88,Chinese,,0,0,0,,插座我昨天或上次提到过这个
Dialogue: 0,0:21:27.40,0:21:33.90,English,,0,0,0,,It's just a local call that's used to allocate some data structures for this particular connection
Dialogue: 0,0:21:27.40,0:21:33.90,Chinese,,0,0,0,,它只是一个本地调用，用于为此特定连接分配一些数据结构
Dialogue: 0,0:21:34.48,0:21:37.10,English,,0,0,0,,And then connect is like placing a call
Dialogue: 0,0:21:34.48,0:21:37.10,Chinese,,0,0,0,,然后连接就像拨打电话一样
Dialogue: 0,0:21:37.78,0:21:42.52,English,,0,0,0,,It's an api it's actually sending over the internet to the server
Dialogue: 0,0:21:37.78,0:21:42.52,Chinese,,0,0,0,,这是一个api，它实际上通过互联网发送到服务器
Dialogue: 0,0:21:43.04,0:21:45.66,English,,0,0,0,,Some information saying hey I'd like to connect you
Dialogue: 0,0:21:43.04,0:21:45.66,Chinese,,0,0,0,,有些信息说嘿，我想和你联系
Dialogue: 0,0:21:47.10,0:21:53.78,English,,0,0,0,,And then once the server risk...that once that connection is accepted then I can begin my session
Dialogue: 0,0:21:47.10,0:21:53.78,Chinese,,0,0,0,,然后一旦服务器冒险......一旦接受该连接，我就可以开始我的会话了
Dialogue: 0,0:21:55.02,0:21:56.06,English,,0,0,0,,So let's look at that
Dialogue: 0,0:21:55.02,0:21:56.06,Chinese,,0,0,0,,那么让我们来看看
Dialogue: 0,0:21:58.94,0:22:03.44,English,,0,0,0,,So first of all I have to go through all this rigmarole with getaddrinfo
Dialogue: 0,0:21:58.94,0:22:03.44,Chinese,,0,0,0,,首先，我必须通过getaddrinfo来完成所有这些操作
Dialogue: 0,0:22:04.10,0:22:06.90,English,,0,0,0,,But it will look pretty similar to what you've seen before
Dialogue: 0,0:22:04.10,0:22:06.90,Chinese,,0,0,0,,但它看起来与你之前看到的非常相似
Dialogue: 0,0:22:07.30,0:22:10.80,English,,0,0,0,,Except I'm going to give a little more information because I want this to be
Dialogue: 0,0:22:07.30,0:22:10.80,Chinese,,0,0,0,,除了我要提供更多信息，因为我希望这样
Dialogue: 0,0:22:14.26,0:22:18.56,English,,0,0,0,,I'm filling in a few more details here
Dialogue: 0,0:22:14.26,0:22:18.56,Chinese,,0,0,0,,我在这里填写一些细节
Dialogue: 0,0:22:18.56,0:22:21.48,English,,0,0,0,,Because I want to specify more features of this connection
Dialogue: 0,0:22:18.56,0:22:21.48,Chinese,,0,0,0,,因为我想指定此连接的更多功能
Dialogue: 0,0:22:22.10,0:22:26.16,English,,0,0,0,,So I'm saying that it's a TCP connection that's a sock stream
Dialogue: 0,0:22:22.10,0:22:26.16,Chinese,,0,0,0,,所以我说这是一个TCP连接，它是一个袜子流
Dialogue: 0,0:22:27.42,0:22:31.30,English,,0,0,0,,I'm saying that I'm going to give it a port number in a numeric form
Dialogue: 0,0:22:27.42,0:22:31.30,Chinese,,0,0,0,,我是说我打算用数字形式给它一个端口号
Dialogue: 0,0:22:31.38,0:22:41.02,English,,0,0,0,,You could also say as I mentioned of the certain ports have standard names http,ssh and so forth
Dialogue: 0,0:22:31.38,0:22:41.02,Chinese,,0,0,0,,你也可以说，我提到的某些端口有标准名称http，ssh等等
Dialogue: 0,0:22:41.02,0:22:44.28,English,,0,0,0,,You can actually pass in the string representation of those
Dialogue: 0,0:22:41.02,0:22:44.28,Chinese,,0,0,0,,你实际上可以传入那些字符串表示形式
Dialogue: 0,0:22:44.86,0:22:49.54,English,,0,0,0,,But I'm using this in a sort of idiosyncratic way here
Dialogue: 0,0:22:44.86,0:22:49.54,Chinese,,0,0,0,,但我在这里以一种特殊的方式使用它
Dialogue: 0,0:22:50.46,0:22:57.52,English,,0,0,0,,And then this feature get adder config is a parameter that's described in the book
Dialogue: 0,0:22:50.46,0:22:57.52,Chinese,,0,0,0,,然后，此功能获取加法器配置是本书中描述的参数
Dialogue: 0,0:22:57.56,0:22:59.68,English,,0,0,0,,And it they say it's a good idea to use it
Dialogue: 0,0:22:57.56,0:22:59.68,Chinese,,0,0,0,,他们说使用它是个好主意
Dialogue: 0,0:23:00.14,0:23:03.56,English,,0,0,0,,And then I'm making a call to my friend getaddrinfo
Dialogue: 0,0:23:00.14,0:23:03.56,Chinese,,0,0,0,,然后我打电话给我的朋友getaddrinfo
Dialogue: 0,0:23:04.38,0:23:13.04,English,,0,0,0,,With these hints and it's going to return back this linked list of representing the the results of this request
Dialogue: 0,0:23:04.38,0:23:13.04,Chinese,,0,0,0,,通过这些提示，它将返回此链表，表示此请求的结果
Dialogue: 0,0:23:13.64,0:23:16.02,English,,0,0,0,,So basically a linked list of IP addresses
Dialogue: 0,0:23:13.64,0:23:16.02,Chinese,,0,0,0,,所以基本上是一个链接的IP地址列表
Dialogue: 0,0:23:18.30,0:23:21.84,English,,0,0,0,,And now just like you saw before I'm going to walk that list with a
Dialogue: 0,0:23:18.30,0:23:21.84,Chinese,,0,0,0,,现在就像你之前看到的那样，我要带着一个
Dialogue: 0,0:23:23.44,0:23:26.92,English,,0,0,0,,Except now what I'm going to try and do is for each of those say
Dialogue: 0,0:23:23.44,0:23:26.92,Chinese,,0,0,0,,除了现在我要尝试做的是每个人说的
Dialogue: 0,0:23:27.34,0:23:30.40,English,,0,0,0,,Well here's a number let me give that a try and if that fails
Dialogue: 0,0:23:27.34,0:23:30.40,Chinese,,0,0,0,,那么这里有一个数字让我尝试一下，如果失败了
Dialogue: 0,0:23:30.42,0:23:34.90,English,,0,0,0,,Here's another address let me give that a try so I'm going to just sequentially try
Dialogue: 0,0:23:30.42,0:23:34.90,Chinese,,0,0,0,,这是另一个地址让我试一试，所以我将继续尝试
Dialogue: 0,0:23:35.54,0:23:37.30,English,,0,0,0,,All the different addresses you saw
Dialogue: 0,0:23:35.54,0:23:37.30,Chinese,,0,0,0,,你看到的所有不同地址
Dialogue: 0,0:23:37.74,0:23:41.14,English,,0,0,0,,For example for potential addresses for twitter
Dialogue: 0,0:23:37.74,0:23:41.14,Chinese,,0,0,0,,例如，针对twitter的潜在地址
Dialogue: 0,0:23:41.70,0:23:43.24,English,,0,0,0,,I'll walk through all of those
Dialogue: 0,0:23:41.70,0:23:43.24,Chinese,,0,0,0,,我将介绍所有这些
Dialogue: 0,0:23:44.72,0:23:47.46,English,,0,0,0,,And on each one I'm going to call for a socket
Dialogue: 0,0:23:44.72,0:23:47.46,Chinese,,0,0,0,,在每一个我打算要求套接字
Dialogue: 0,0:23:48.36,0:23:50.48,English,,0,0,0,,And the socket is the one that
Dialogue: 0,0:23:48.36,0:23:50.48,Chinese,,0,0,0,,套接字是那个
Dialogue: 0,0:23:52.86,0:23:55.72,English,,0,0,0,,As I said it allocates some data structures
Dialogue: 0,0:23:52.86,0:23:55.72,Chinese,,0,0,0,,正如我所说，它分配了一些数据结构
Dialogue: 0,0:23:55.88,0:23:59.50,English,,0,0,0,,I talked about this last time that's why I'm rushing through is pretty fast
Dialogue: 0,0:23:55.88,0:23:59.50,Chinese,,0,0,0,,我上次谈到这个问题，这就是为什么我匆匆忙忙的原因
Dialogue: 0,0:24:00.04,0:24:10.76,English,,0,0,0,,But you'll notice that the fields that you're filling in are actually all been generated for us by the Getaddrinfo call
Dialogue: 0,0:24:00.04,0:24:10.76,Chinese,,0,0,0,,但是你会注意到你填写的字段实际上都是由Getaddrinfo调用为我们生成的
Dialogue: 0,0:24:11.28,0:24:18.00,English,,0,0,0,,So whereas the east have to remember oh this is a number and it should be a shortened network order and yada da
Dialogue: 0,0:24:11.28,0:24:18.00,Chinese,,0,0,0,,所以东方必须记住哦，这是一个数字，它应该是一个缩短的网络秩序和yada da
Dialogue: 0,0:24:18.40,0:24:25.96,English,,0,0,0,,Pretty much nowadays you can just say here I'm just going to pass you this information that
Dialogue: 0,0:24:18.40,0:24:25.96,Chinese,,0,0,0,,现在几乎你可以在这里说我只是想把这些信息告诉你
Dialogue: 0,0:24:32.12,0:24:34.56,English,,0,0,0,,Was returned by a function call
Dialogue: 0,0:24:32.12,0:24:34.56,Chinese,,0,0,0,,是通过函数调用返回的
Dialogue: 0,0:24:35.46,0:24:39.04,English,,0,0,0,,Oh and then as I mentioned also last time
Dialogue: 0,0:24:35.46,0:24:39.04,Chinese,,0,0,0,,哦，然后正如我上次提到的那样
Dialogue: 0,0:24:39.24,0:24:41.14,English,,0,0,0,,I know I went through a pretty fast last time
Dialogue: 0,0:24:39.24,0:24:41.14,Chinese,,0,0,0,,我知道上次我跑得很快
Dialogue: 0,0:24:41.68,0:24:45.32,English,,0,0,0,,Socket actually returns back to you a file descriptor
Dialogue: 0,0:24:41.68,0:24:45.32,Chinese,,0,0,0,,套接字实际上会返回给你一个文件描述符
Dialogue: 0,0:24:45.70,0:24:51.54,English,,0,0,0,,And you recall a file descriptor is just a small integer starts with 0,1 & 2
Dialogue: 0,0:24:45.70,0:24:51.54,Chinese,,0,0,0,,你还记得一个文件描述符只是一个以0,1和2开头的小整数
Dialogue: 0,0:24:52.20,0:24:53.72,English,,0,0,0,,And then it goes up from there
Dialogue: 0,0:24:52.20,0:24:53.72,Chinese,,0,0,0,,然后它从那里上升
Dialogue: 0,0:24:54.94,0:25:00.50,English,,0,0,0,,So I'm going to interface with this network code as if I'm talking through files
Dialogue: 0,0:24:54.94,0:25:00.50,Chinese,,0,0,0,,所以我打算与这个网络代码接口，好像我正在通过文件进行交谈
Dialogue: 0,0:25:02.16,0:25:06.18,English,,0,0,0,,But it doesn't socket doesn't actually do anything as far as the internet goes
Dialogue: 0,0:25:02.16,0:25:06.18,Chinese,,0,0,0,,但就互联网而言，套接字实际上并没有做任何事情
Dialogue: 0,0:25:06.18,0:25:08.56,English,,0,0,0,,There's nothing going there's not even
Dialogue: 0,0:25:06.18,0:25:08.56,Chinese,,0,0,0,,什么都没有，甚至没有
Dialogue: 0,0:25:09.26,0:25:14.06,English,,0,0,0,,The you know serious effort within the operating system nothing goes over the network here
Dialogue: 0,0:25:09.26,0:25:14.06,Chinese,,0,0,0,,你知道操作系统中的认真努力在这里没有任何东西通过网络
Dialogue: 0,0:25:15.76,0:25:22.04,English,,0,0,0,,So the real work here is but it also allocates some local data structures
Dialogue: 0,0:25:15.76,0:25:22.04,Chinese,,0,0,0,,所以这里的实际工作是，但它也分配了一些本地数据结构
Dialogue: 0,0:25:23.96,0:25:28.16,English,,0,0,0,,And then what I'll do is I'll attempt to connect to the server
Dialogue: 0,0:25:23.96,0:25:28.16,Chinese,,0,0,0,,然后我要做的是我将尝试连接到服务器
Dialogue: 0,0:25:28.62,0:25:32.73,English,,0,0,0,,And again you'll see the various arguments I have to pass to the connect command
Dialogue: 0,0:25:28.62,0:25:32.73,Chinese,,0,0,0,,再次，你将看到我必须传递给connect命令的各种参数
Dialogue: 0,0:25:33.24,0:25:38.24,English,,0,0,0,,I get provided for me out of this call I made to getaddrinfo
Dialogue: 0,0:25:33.24,0:25:38.24,Chinese,,0,0,0,,我从getaddrinfo这个电话中得到了我的帮助
Dialogue: 0,0:25:39.40,0:25:41.46,English,,0,0,0,,And that's either going to work or it's not going to work
Dialogue: 0,0:25:39.40,0:25:41.46,Chinese,,0,0,0,,而这要么正在发挥作用，要么无法发挥作用
Dialogue: 0,0:25:41.94,0:25:44.92,English,,0,0,0,,Similarly the socket call is either going to work or not work
Dialogue: 0,0:25:41.94,0:25:44.92,Chinese,,0,0,0,,类似地，套接字调用要么工作要么不工作
Dialogue: 0,0:25:45.44,0:25:48.06,English,,0,0,0,,Be very unusual for a call to socket to fail
Dialogue: 0,0:25:45.44,0:25:48.06,Chinese,,0,0,0,,对socket调用失败非常不寻常
Dialogue: 0,0:25:48.72,0:25:54.74,English,,0,0,0,,But connect for example will fail if the server's not available or doesn't like you for some reason
Dialogue: 0,0:25:48.72,0:25:54.74,Chinese,,0,0,0,,但是，如果服务器由于某种原因不可用或不喜欢你，则连接将失败
Dialogue: 0,0:25:56.28,0:26:02.48,English,,0,0,0,,And so if that succeeds I'm going to break out of this loop
Dialogue: 0,0:25:56.28,0:26:02.48,Chinese,,0,0,0,,所以，如果成功，我将打破这个循环
Dialogue: 0,0:26:03.16,0:26:11.10,English,,0,0,0,,I'm going to then free this data structure and return the client the file descriptor
Dialogue: 0,0:26:03.16,0:26:11.10,Chinese,,0,0,0,,然后我将释放这个数据结构并返回客户端的文件描述符
Dialogue: 0,0:26:11.98,0:26:19.76,English,,0,0,0,,For the this particular function its job is to open a connection to a client and return a file descriptor for it
Dialogue: 0,0:26:11.98,0:26:19.76,Chinese,,0,0,0,,对于此特定功能，其工作是打开与客户端的连接并为其返回文件描述符
Dialogue: 0,0:26:20.34,0:26:24.88,English,,0,0,0,,And this is just what happens if you fall out of the loop not having made any connections
Dialogue: 0,0:26:20.34,0:26:24.88,Chinese,,0,0,0,,这就是如果你没有建立任何连接而退出循环就会发生的事情
Dialogue: 0,0:26:30.94,0:26:35.54,English,,0,0,0,,Ok so I know this is I'm marching this fast
Dialogue: 0,0:26:30.94,0:26:35.54,Chinese,,0,0,0,,好的，所以我知道这是我快速行进
Dialogue: 0,0:26:36.76,0:26:41.82,English,,0,0,0,,And as I said I know from my own personal experience I can test this stuff
Dialogue: 0,0:26:36.76,0:26:41.82,Chinese,,0,0,0,,正如我所说，根据我自己的经验，我可以测试这些东西
Dialogue: 0,0:26:42.32,0:26:46.08,English,,0,0,0,,Just takes time to understand because there's so many different features here
Dialogue: 0,0:26:42.32,0:26:46.08,Chinese,,0,0,0,,只是需要时间来理解，因为这里有很多不同的功能
Dialogue: 0,0:26:47.04,0:26:50.48,English,,0,0,0,,Ok but that's the idea is we're going to
Dialogue: 0,0:26:47.04,0:26:50.48,Chinese,,0,0,0,,好的，但我们的想法就是这样
Dialogue: 0,0:26:51.88,0:26:56.60,English,,0,0,0,,Now on this server side which as I mentioned is that actually what you do beforehand
Dialogue: 0,0:26:51.88,0:26:56.60,Chinese,,0,0,0,,现在在这个服务器端，正如我所提到的那样，实际上你事先做了什么
Dialogue: 0,0:26:56.60,0:27:00.46,English,,0,0,0,,Because you can't really have a client connect to a server that doesn't exist
Dialogue: 0,0:26:56.60,0:27:00.46,Chinese,,0,0,0,,因为你无法将客户端连接到不存在的服务器
Dialogue: 0,0:27:01.16,0:27:04.00,English,,0,0,0,,But it's just a little bit trickier to understand what's going on
Dialogue: 0,0:27:01.16,0:27:04.00,Chinese,,0,0,0,,但要理解正在发生的事情只是有点棘手
Dialogue: 0,0:27:05.00,0:27:07.84,English,,0,0,0,,But you'll see it the first two steps are the same I need a socket
Dialogue: 0,0:27:05.00,0:27:07.84,Chinese,,0,0,0,,但你会看到它的前两个步骤是相同的​​我需要一个套接字
Dialogue: 0,0:27:08.54,0:27:13.22,English,,0,0,0,,But then remember what I want to do is essentially set up a server
Dialogue: 0,0:27:08.54,0:27:13.22,Chinese,,0,0,0,,但是记住我想要做的事实上是设置一个服务器
Dialogue: 0,0:27:13.22,0:27:18.54,English,,0,0,0,,That's listening on a particular port for clients to request on it
Dialogue: 0,0:27:13.22,0:27:18.54,Chinese,,0,0,0,,那是在监听特定端口以供客户端请求
Dialogue: 0,0:27:18.98,0:27:21.62,English,,0,0,0,,And that's the function of the bind and the listen functions
Dialogue: 0,0:27:18.98,0:27:21.62,Chinese,,0,0,0,,这就是bind和listen函数的功能
Dialogue: 0,0:27:22.68,0:27:26.44,English,,0,0,0,,And then the accept is when I'm saying ok the server is ready
Dialogue: 0,0:27:22.68,0:27:26.44,Chinese,,0,0,0,,然后接受就是当我说服务器准备就绪时
Dialogue: 0,0:27:27.04,0:27:28.50,English,,0,0,0,,I'm ready to accept requests
Dialogue: 0,0:27:27.04,0:27:28.50,Chinese,,0,0,0,,我已经准备好接受请求了
Dialogue: 0,0:27:29.00,0:27:32.02,English,,0,0,0,,And it will fire that up
Dialogue: 0,0:27:29.00,0:27:32.02,Chinese,,0,0,0,,它会解雇它
Dialogue: 0,0:27:33.04,0:27:39.06,English,,0,0,0,,In particular the accept will just stop and hang up and wait
Dialogue: 0,0:27:33.04,0:27:39.06,Chinese,,0,0,0,,特别是接受将停止并挂断并等待
Dialogue: 0,0:27:39.34,0:27:43.02,English,,0,0,0,,Indefinitely until some connection request comes in
Dialogue: 0,0:27:39.34,0:27:43.02,Chinese,,0,0,0,,无限期地直到某些连接请求进入
Dialogue: 0,0:27:43.86,0:27:47.38,English,,0,0,0,,So if the server has no customers if there are no clients
Dialogue: 0,0:27:43.86,0:27:47.38,Chinese,,0,0,0,,因此，如果没有客户端，服务器就没有客户
Dialogue: 0,0:27:48.02,0:27:54.00,English,,0,0,0,,It will just be waiting potentially forever with the call to accept
Dialogue: 0,0:27:48.02,0:27:54.00,Chinese,,0,0,0,,它只会在接受电话的情况下永远等待
Dialogue: 0,0:27:55.64,0:27:57.82,English,,0,0,0,,Ok everything else goes through boom boom boom
Dialogue: 0,0:27:55.64,0:27:57.82,Chinese,,0,0,0,,好吧，其他一切都经历繁荣景气繁荣
Dialogue: 0,0:27:57.92,0:28:02.18,English,,0,0,0,,But that one is where the actual waiting occurs for client connections
Dialogue: 0,0:27:57.92,0:28:02.18,Chinese,,0,0,0,,但那个是客户端连接实际等待的地方
Dialogue: 0,0:28:07.00,0:28:08.74,English,,0,0,0,,Some way I should mention the connect
Dialogue: 0,0:28:07.00,0:28:08.74,Chinese,,0,0,0,,我应该提一下连接方式
Dialogue: 0,0:28:10.42,0:28:13.86,English,,0,0,0,,Will also hang up and wait until the connection is formed
Dialogue: 0,0:28:10.42,0:28:13.86,Chinese,,0,0,0,,也会挂起并等待连接形成
Dialogue: 0,0:28:14.36,0:28:19.10,English,,0,0,0,,But typically it's built in with a time out so that it will fail if it takes too long
Dialogue: 0,0:28:14.36,0:28:19.10,Chinese,,0,0,0,,但通常情况下它是内置的超时时间，如果花费的时间太长就会失败
Dialogue: 0,0:28:19.42,0:28:24.06,English,,0,0,0,,And there's you can adjust the parameters on both of these how long you wait for whether your weight or not
Dialogue: 0,0:28:19.42,0:28:24.06,Chinese,,0,0,0,,而且你可以调整这两个参数，等待你的体重与否
Dialogue: 0,0:28:26.28,0:28:28.00,English,,0,0,0,,But I'm talking the typical case
Dialogue: 0,0:28:26.28,0:28:28.00,Chinese,,0,0,0,,但我说的是典型案例
Dialogue: 0,0:28:28.54,0:28:30.20,English,,0,0,0,,So anyways
Dialogue: 0,0:28:28.54,0:28:30.20,Chinese,,0,0,0,,所以无论如何
Dialogue: 0,0:28:30.80,0:28:34.30,English,,0,0,0,,That again what will look a little those functions then
Dialogue: 0,0:28:30.80,0:28:34.30,Chinese,,0,0,0,,那又是什么看起来那些功能呢
Dialogue: 0,0:28:37.04,0:28:40.72,English,,0,0,0,,Okay so this again we have to make a call to getaddrinfo
Dialogue: 0,0:28:37.04,0:28:40.72,Chinese,,0,0,0,,好的，我们再次打电话给getaddrinfo
Dialogue: 0,0:28:41.34,0:28:45.64,English,,0,0,0,,And this time it's not because I need any IP addresses I already have an IP address
Dialogue: 0,0:28:41.34,0:28:45.64,Chinese,,0,0,0,,而这次并不是因为我需要任何IP地址我已经有了IP地址
Dialogue: 0,0:28:45.64,0:28:52.64,English,,0,0,0,,I'm a local server I don't actually need to know the IP addresses of my of the clients
Dialogue: 0,0:28:45.64,0:28:52.64,Chinese,,0,0,0,,我是本地服务器，实际上我不需要知道客户端的IP地址
Dialogue: 0,0:28:52.74,0:28:53.94,English,,0,0,0,,I usually won't know them
Dialogue: 0,0:28:52.74,0:28:53.94,Chinese,,0,0,0,,我通常不会认识他们
Dialogue: 0,0:28:54.96,0:28:59.68,English,,0,0,0,,But I need to fill in all those nasty little data structures and so
Dialogue: 0,0:28:54.96,0:28:59.68,Chinese,,0,0,0,,但我需要填写所有那些讨厌的小数据结构等等
Dialogue: 0,0:29:00.00,0:29:02.76,English,,0,0,0,,That's what I'm going to use getaddrinfo here for here
Dialogue: 0,0:29:00.00,0:29:02.76,Chinese,,0,0,0,,这就是我将在这里使用getaddrinfo
Dialogue: 0,0:29:03.72,0:29:08.06,English,,0,0,0,,So I'm going to say this time again I want a TCP connection a sock stream
Dialogue: 0,0:29:03.72,0:29:08.06,Chinese,,0,0,0,,所以这次我要再说一次，我希望TCP连接成为一个袜子流
Dialogue: 0,0:29:09.16,0:29:19.24,English,,0,0,0,,I want it to be a listening for any IP address connection coming in
Dialogue: 0,0:29:09.16,0:29:19.24,Chinese,,0,0,0,,我希望它能够监听任何IP地址连接
Dialogue: 0,0:29:21.00,0:29:25.02,English,,0,0,0,,So it's passive meaning it's not actively reaching out
Dialogue: 0,0:29:21.00,0:29:25.02,Chinese,,0,0,0,,所以它是被动的意思是它没有积极地伸出援手
Dialogue: 0,0:29:25.18,0:29:27.74,English,,0,0,0,,Its passively waiting for connection requests
Dialogue: 0,0:29:25.18,0:29:27.74,Chinese,,0,0,0,,它被动地等待连接请求
Dialogue: 0,0:29:29.52,0:29:32.18,English,,0,0,0,,I'll say that I'm going to tell you a port number
Dialogue: 0,0:29:29.52,0:29:32.18,Chinese,,0,0,0,,我会说我要告诉你一个端口号
Dialogue: 0,0:29:32.70,0:29:36.52,English,,0,0,0,,That I'm going to actually use as my servers port number
Dialogue: 0,0:29:32.70,0:29:36.52,Chinese,,0,0,0,,我将实际用作我的服务器端口号
Dialogue: 0,0:29:37.46,0:29:43.54,English,,0,0,0,,And then I'm going to make a call and this time you see that
Dialogue: 0,0:29:37.46,0:29:43.54,Chinese,,0,0,0,,然后我打算打电话，这次你看到了
Dialogue: 0,0:29:44.02,0:29:47.66,English,,0,0,0,,I'm not giving any information about the host because I am the host
Dialogue: 0,0:29:44.02,0:29:47.66,Chinese,,0,0,0,,我没有提供有关主机的任何信息，因为我是主持人
Dialogue: 0,0:29:48.40,0:29:53.58,English,,0,0,0,,But I'm giving the information of the port number that I'm using for this server
Dialogue: 0,0:29:48.40,0:29:53.58,Chinese,,0,0,0,,但我正在提供我正在为此服务器使用的端口号的信息
Dialogue: 0,0:29:54.34,0:29:56.92,English,,0,0,0,,And the other hints that I've just filled in
Dialogue: 0,0:29:54.34,0:29:56.92,Chinese,,0,0,0,,还有我刚刚填写的其他提示
Dialogue: 0,0:29:57.34,0:29:59.40,English,,0,0,0,,And then it will return a listp yes
Dialogue: 0,0:29:57.34,0:29:59.40,Chinese,,0,0,0,,然后它将返回listp是的
Dialogue: 0,0:29:59.40,0:30:02.06,English,,0,0,0,,[student speaking]
Dialogue: 0,0:30:02.08,0:30:11.56,English,,0,0,0,,Memset is the standard way that you set all the bytes in some number of bytes to a fixed value
Dialogue: 0,0:30:02.08,0:30:11.56,Chinese,,0,0,0,,Memset是将某些字节数的所有字节设置为固定值的标准方法
Dialogue: 0,0:30:12.20,0:30:15.84,English,,0,0,0,,It's the same as if you've use be 0 before or b
Dialogue: 0,0:30:12.20,0:30:15.84,Chinese,,0,0,0,,它就像你之前使用0或b一样
Dialogue: 0,0:30:16.94,0:30:20.82,English,,0,0,0,,It was is the way you often would zero out a bunch of bytes
Dialogue: 0,0:30:16.94,0:30:20.82,Chinese,,0,0,0,,这是你经常将一堆字节归零的方式
Dialogue: 0,0:30:21.72,0:30:27.76,English,,0,0,0,,And if you look at the web page and I don't know why they say use memset don't use be 0 anymore so
Dialogue: 0,0:30:21.72,0:30:27.76,Chinese,,0,0,0,,如果你看看网页，我不知道为什么他们说使用memset不再使用0
Dialogue: 0,0:30:30.98,0:30:34.28,English,,0,0,0,,Cal equal to 0 it out but I'm not actually
Dialogue: 0,0:30:30.98,0:30:34.28,Chinese,,0,0,0,,Cal等于0，但我实际上并不是
Dialogue: 0,0:30:34.80,0:30:39.12,English,,0,0,0,,Eleking anything see the hints is a struct here
Dialogue: 0,0:30:34.80,0:30:39.12,Chinese,,0,0,0,,Eleking任何看到提示都是这里的结构
Dialogue: 0,0:30:41.30,0:30:44.72,English,,0,0,0,,And remember is struct is just a bunch of bytes
Dialogue: 0,0:30:41.30,0:30:44.72,Chinese,,0,0,0,,请记住，struct只是一堆字节
Dialogue: 0,0:30:44.80,0:30:50.00,English,,0,0,0,,And so if I make that particular call to memset it will set every byte in that structure to 0
Dialogue: 0,0:30:44.80,0:30:50.00,Chinese,,0,0,0,,因此，如果我对memset进行特定调用，它会将该结构中的每个字节设置为0
Dialogue: 0,0:30:50.04,0:30:54.54,English,,0,0,0,,And this is sort of the official standard way you're supposed to do that kind of
Dialogue: 0,0:30:50.04,0:30:54.54,Chinese,,0,0,0,,这是你应该做的那种官方标准方式
Dialogue: 0,0:30:55.20,0:30:56.82,English,,0,0,0,,Thing it's a good question so question
Dialogue: 0,0:30:55.20,0:30:56.82,Chinese,,0,0,0,,这是一个很好的问题，所以问题
Dialogue: 0,0:30:56.96,0:31:01.20,English,,0,0,0,,[student speaking]
Dialogue: 0,0:31:01.20,0:31:03.90,English,,0,0,0,,AI_PASSIVE that it's a...
Dialogue: 0,0:31:01.20,0:31:03.90,Chinese,,0,0,0,,AI_PASSIVE它是......
Dialogue: 0,0:31:05.04,0:31:09.44,English,,0,0,0,,It's a listening connection it's going to be a listening connection
Dialogue: 0,0:31:05.04,0:31:09.44,Chinese,,0,0,0,,这是一个倾听的连接，它将成为一个倾听的连接
Dialogue: 0,0:31:10.26,0:31:15.88,English,,0,0,0,,And AI_ADDRCONFIG was some other argument
Dialogue: 0,0:31:10.26,0:31:15.88,Chinese,,0,0,0,,AI_ADDRCONFIG是另一个论点
Dialogue: 0,0:31:17.44,0:31:23.60,English,,0,0,0,,And quite honestly I don't remember but you saw I gave it before with the get host name
Dialogue: 0,0:31:17.44,0:31:23.60,Chinese,,0,0,0,,老实说，我不记得了，但是你看到我之前用get主机名给了它
Dialogue: 0,0:31:24.19,0:31:29.18,English,,0,0,0,,So I don't remember it's a slot somewhat obscure per parameter
Dialogue: 0,0:31:24.19,0:31:29.18,Chinese,,0,0,0,,所以我不记得它是一个每个参数有点模糊的插槽
Dialogue: 0,0:31:29.18,0:31:31.18,English,,0,0,0,,That's not even a required parameter
Dialogue: 0,0:31:29.18,0:31:31.18,Chinese,,0,0,0,,这甚至不是必需的参数
Dialogue: 0,0:31:31.90,0:31:33.52,English,,0,0,0,,It's in the book I'm sorry
Dialogue: 0,0:31:31.90,0:31:33.52,Chinese,,0,0,0,,在书中我很抱歉
Dialogue: 0,0:31:34.92,0:31:36.46,English,,0,0,0,,Or you could google it right now
Dialogue: 0,0:31:34.92,0:31:36.46,Chinese,,0,0,0,,或者你可以立即谷歌
Dialogue: 0,0:31:41.98,0:31:46.82,English,,0,0,0,,One interesting thing is I didn't say that on this code on either side that it's AF_INET
Dialogue: 0,0:31:41.98,0:31:46.82,Chinese,,0,0,0,,一个有趣的事情是我没有说这两侧的代码是AF_INET
Dialogue: 0,0:31:46.82,0:31:49.52,English,,0,0,0,,I didn't force this to be IPv4 code
Dialogue: 0,0:31:46.82,0:31:49.52,Chinese,,0,0,0,,我没有强制这是IPv4代码
Dialogue: 0,0:31:49.76,0:31:53.28,English,,0,0,0,,This will work for IPv4 or 6 the exact same code
Dialogue: 0,0:31:49.76,0:31:53.28,Chinese,,0,0,0,,这适用于IPv4或6完全相同的代码
Dialogue: 0,0:31:54.56,0:32:01.78,English,,0,0,0,,Okay so again listp comes back with a list of stuff typically that list will be of length one
Dialogue: 0,0:31:54.56,0:32:01.78,Chinese,,0,0,0,,好的，所以listp再次返回一个列表，通常列表的长度为1
Dialogue: 0,0:32:04.24,0:32:06.54,English,,0,0,0,,In fact I don't know why it would be anything else
Dialogue: 0,0:32:04.24,0:32:06.54,Chinese,,0,0,0,,事实上，我不知道为什么会这样
Dialogue: 0,0:32:07.32,0:32:10.46,English,,0,0,0,,But it has the same general look to it
Dialogue: 0,0:32:07.32,0:32:10.46,Chinese,,0,0,0,,但它有一般的外观
Dialogue: 0,0:32:11.44,0:32:15.12,English,,0,0,0,,So again I'm going to make a call to socket
Dialogue: 0,0:32:11.44,0:32:15.12,Chinese,,0,0,0,,所以我再次打电话给socket
Dialogue: 0,0:32:16.04,0:32:19.88,English,,0,0,0,,To create a file descriptor that I'm going to use this will be the one that
Dialogue: 0,0:32:16.04,0:32:19.88,Chinese,,0,0,0,,要创建一个我将要使用的文件描述符，这将是那个
Dialogue: 0,0:32:19.98,0:32:23.10,English,,0,0,0,,It's missed the server listens on of your connection requests
Dialogue: 0,0:32:19.98,0:32:23.10,Chinese,,0,0,0,,它错过了服务器监听你的连接请求
Dialogue: 0,0:32:25.08,0:32:31.24,English,,0,0,0,,And then there's another kind of obscure thing you have to do of setting some options on that socket
Dialogue: 0,0:32:25.08,0:32:31.24,Chinese,,0,0,0,,然后，你需要在该套接字上设置一些选项，这是另一种模糊不清的事情
Dialogue: 0,0:32:31.78,0:32:39.22,English,,0,0,0,,That will get it to free it up more quickly if there's a failure
Dialogue: 0,0:32:31.78,0:32:39.22,Chinese,,0,0,0,,如果出现故障，这将使其更快地释放它
Dialogue: 0,0:32:40.48,0:32:45.60,English,,0,0,0,,If this is gone this one I dunno and it's kind of obscure and it's in the book
Dialogue: 0,0:32:40.48,0:32:45.60,Chinese,,0,0,0,,如果这个消失了，我就不知道了，这有点模糊，而且在书中
Dialogue: 0,0:32:45.60,0:32:47.36,English,,0,0,0,,So I won't spend a lot of time talking about it
Dialogue: 0,0:32:45.60,0:32:47.36,Chinese,,0,0,0,,所以我不会花很多时间谈论它
Dialogue: 0,0:32:48.08,0:32:54.52,English,,0,0,0,,Okay but now what here's the real work is the bind call is the one that says
Dialogue: 0,0:32:48.08,0:32:54.52,Chinese,,0,0,0,,好的，但现在真正的工作是绑定调用就是那个
Dialogue: 0,0:32:55.64,0:33:01.82,English,,0,0,0,,I want this file descriptor to be associated with
Dialogue: 0,0:32:55.64,0:33:01.82,Chinese,,0,0,0,,我希望与此文件描述符相关联
Dialogue: 0,0:33:03.20,0:33:07.78,English,,0,0,0,,This information which in particular specifies the port number
Dialogue: 0,0:33:03.20,0:33:07.78,Chinese,,0,0,0,,此信息特别指定端口号
Dialogue: 0,0:33:07.94,0:33:13.86,English,,0,0,0,,So that's where the binding occurs for this machine remember port numbers are
Dialogue: 0,0:33:07.94,0:33:13.86,Chinese,,0,0,0,,这就是这台机器发生绑定的地方，记住端口号
Dialogue: 0,0:33:14.34,0:33:19.28,English,,0,0,0,,A resource that all the different applications on a single machine are sort of sharing
Dialogue: 0,0:33:14.34,0:33:19.28,Chinese,,0,0,0,,一台资源，单个机器上的所有不同应用程序都是共享的
Dialogue: 0,0:33:19.72,0:33:21.32,English,,0,0,0,,Where are competing for
Dialogue: 0,0:33:19.72,0:33:21.32,Chinese,,0,0,0,,在哪里竞争
Dialogue: 0,0:33:21.88,0:33:30.00,English,,0,0,0,,And so this is requesting I want to use this particular port number in doing this in setting up a server
Dialogue: 0,0:33:21.88,0:33:30.00,Chinese,,0,0,0,,所以这要求我想在设置服务器时使用这个特定的端口号
Dialogue: 0,0:33:30.48,0:33:33.00,English,,0,0,0,,And that may fail if the ports already in use
Dialogue: 0,0:33:30.48,0:33:33.00,Chinese,,0,0,0,,如果端口已在使用中，则可能会失败
Dialogue: 0,0:33:33.56,0:33:36.26,English,,0,0,0,,Or if you're trying to set up a service on a port
Dialogue: 0,0:33:33.56,0:33:36.26,Chinese,,0,0,0,,或者，如果你尝试在端口上设置服务
Dialogue: 0,0:33:36.28,0:33:45.18,English,,0,0,0,,That you're not allowed to do, you're not allowed to set up a service on port 80 unless you have root access
Dialogue: 0,0:33:36.28,0:33:45.18,Chinese,,0,0,0,,除非你具有root访问权限，否则不允许你在端口80上设置服务
Dialogue: 0,0:33:50.02,0:33:50.72,English,,0,0,0,,So and
Dialogue: 0,0:33:50.02,0:33:50.72,Chinese,,0,0,0,,所以和
Dialogue: 0,0:33:51.96,0:33:58.14,English,,0,0,0,,Then again it passes in the information that was filled in by the call to getaddrinfo
Dialogue: 0,0:33:51.96,0:33:58.14,Chinese,,0,0,0,,然后它再次传递getaddrinfo调用填写的信息
Dialogue: 0,0:34:04.96,0:34:06.28,English,,0,0,0,,So we're not quite done yet
Dialogue: 0,0:34:04.96,0:34:06.28,Chinese,,0,0,0,,所以我们还没有完成
Dialogue: 0,0:34:07.00,0:34:12.96,English,,0,0,0,,But we if this succeeds then what we've done is we bound a port number
Dialogue: 0,0:34:07.00,0:34:12.96,Chinese,,0,0,0,,但是，如果这成功，那么我们所做的就是绑定一个端口号
Dialogue: 0,0:34:13.34,0:34:17.42,English,,0,0,0,,And a file descriptor together and a socket
Dialogue: 0,0:34:13.34,0:34:17.42,Chinese,,0,0,0,,和一个文件描述符和一个套接字
Dialogue: 0,0:34:23.28,0:34:29.44,English,,0,0,0,,But it all that's done is that's again just within the machine saying okay
Dialogue: 0,0:34:23.28,0:34:29.44,Chinese,,0,0,0,,但所有这一切都是在机器内再次说好了
Dialogue: 0,0:34:30.10,0:34:36.18,English,,0,0,0,,I agree you particularly this particular process gets to be listening on a particular port
Dialogue: 0,0:34:30.10,0:34:36.18,Chinese,,0,0,0,,我同意你特别是这个特定的进程可以监听特定的端口
Dialogue: 0,0:34:36.90,0:34:38.50,English,,0,0,0,,But it's not actually listening yet
Dialogue: 0,0:34:36.90,0:34:38.50,Chinese,,0,0,0,,但实际上还没有听
Dialogue: 0,0:34:39.68,0:34:41.99,English,,0,0,0,,And I don't know why they split it into two but they do
Dialogue: 0,0:34:39.68,0:34:41.99,Chinese,,0,0,0,,我不知道为什么他们将它分成两部分，但他们确实如此
Dialogue: 0,0:34:42.66,0:34:46.64,English,,0,0,0,,And now I actually have to explicitly make a call to listen saying okay
Dialogue: 0,0:34:42.66,0:34:46.64,Chinese,,0,0,0,,现在我实际上必须明确打电话听听说好的
Dialogue: 0,0:34:47.06,0:34:50.00,English,,0,0,0,,Now I really am ready to receive connection requests
Dialogue: 0,0:34:47.06,0:34:50.00,Chinese,,0,0,0,,现在我真的准备接收连接请求了
Dialogue: 0,0:34:51.24,0:34:53.20,English,,0,0,0,,And you can give as a parameter of a
Dialogue: 0,0:34:51.24,0:34:53.20,Chinese,,0,0,0,,你可以给出一个参数
Dialogue: 0,0:34:55.16,0:35:03.36,English,,0,0,0,,Number that says how many a request connection requests are you allowed to queue up
Dialogue: 0,0:34:55.16,0:35:03.36,Chinese,,0,0,0,,表示允许排队的请求连接请求数的数字
Dialogue: 0,0:35:05.10,0:35:09.28,English,,0,0,0,,Before they start getting refused and this is a performance parameter
Dialogue: 0,0:35:05.10,0:35:09.28,Chinese,,0,0,0,,在他们开始被拒绝之前，这是一个性能参数
Dialogue: 0,0:35:09.78,0:35:11.62,English,,0,0,0,,That if you set it too low then
Dialogue: 0,0:35:09.78,0:35:11.62,Chinese,,0,0,0,,如果你把它设置得太低那么
Dialogue: 0,0:35:12.08,0:35:17.10,English,,0,0,0,,Unless you have a really fast server people will get failures in their connection requests
Dialogue: 0,0:35:12.08,0:35:17.10,Chinese,,0,0,0,,除非你有一个非常快的服务器，否则人们的连接请求会失败
Dialogue: 0,0:35:18.20,0:35:25.86,English,,0,0,0,,But if it's too big then you can you're vulnerable to certain types of sort of denial of service attacks
Dialogue: 0,0:35:18.20,0:35:25.86,Chinese,,0,0,0,,但如果它太大，那么你就可以容易受到某些类型的拒绝服务攻击
Dialogue: 0,0:35:27.82,0:35:30.24,English,,0,0,0,,So again a little bit of an obscure feature
Dialogue: 0,0:35:27.82,0:35:30.24,Chinese,,0,0,0,,所以再一点点一个不起眼的功能
Dialogue: 0,0:35:31.40,0:35:33.44,English,,0,0,0,,But the result of this is now
Dialogue: 0,0:35:31.40,0:35:33.44,Chinese,,0,0,0,,但结果是现在
Dialogue: 0,0:35:33.86,0:35:35.10,English,,0,0,0,,I'm returning out of this
Dialogue: 0,0:35:33.86,0:35:35.10,Chinese,,0,0,0,,我正在退出这个
Dialogue: 0,0:35:35.70,0:35:40.62,English,,0,0,0,,A file descriptor that the server can use to listen to pick up connection requests
Dialogue: 0,0:35:35.70,0:35:40.62,Chinese,,0,0,0,,服务器可用于侦听拾取连接请求的文件描述符
Dialogue: 0,0:35:44.54,0:35:49.54,English,,0,0,0,,Okay so let's do a little example of how we might actually do something
Dialogue: 0,0:35:44.54,0:35:49.54,Chinese,,0,0,0,,好的，让我们举一个例子来说明我们实际上可以做些什么
Dialogue: 0,0:35:49.84,0:35:55.24,English,,0,0,0,,And I'm going to use as an example a rather mundane application
Dialogue: 0,0:35:49.84,0:35:55.24,Chinese,,0,0,0,,我将以一个相当普通的应用程序为例
Dialogue: 0,0:35:57.30,0:35:59.10,English,,0,0,0,,Which is an echo server
Dialogue: 0,0:35:57.30,0:35:59.10,Chinese,,0,0,0,,哪个是echo服务器
Dialogue: 0,0:35:59.80,0:36:06.06,English,,0,0,0,,An echo server is just one that response back whatever it just received
Dialogue: 0,0:35:59.80,0:36:06.06,Chinese,,0,0,0,,回显服务器只是响应它刚才收到的回复服务器
Dialogue: 0,0:36:08.22,0:36:11.74,English,,0,0,0,,And the code for it saw in the book on the slides
Dialogue: 0,0:36:08.22,0:36:11.74,Chinese,,0,0,0,,它的代码在幻灯片的书中看到了
Dialogue: 0,0:36:12.40,0:36:13.20,English,,0,0,0,,We're studying
Dialogue: 0,0:36:12.40,0:36:13.20,Chinese,,0,0,0,,我们正在学习
Dialogue: 0,0:36:17.58,0:36:20.38,English,,0,0,0,,So let me set up this amazing demonstration
Dialogue: 0,0:36:17.58,0:36:20.38,Chinese,,0,0,0,,所以让我设置这个惊人的演示
Dialogue: 0,0:36:32.16,0:36:38.88,English,,0,0,0,,So it's called the echo server I meaning iterative it can only do one connection request at a time
Dialogue: 0,0:36:32.16,0:36:38.88,Chinese,,0,0,0,,所以它被称为echo服务器，我的意思是迭代，它一次只能做一个连接请求
Dialogue: 0,0:36:40.18,0:36:44.14,English,,0,0,0,,And I'm going to set it up on my laptop here
Dialogue: 0,0:36:40.18,0:36:44.14,Chinese,,0,0,0,,我打算在我的笔记本电脑上安装它
Dialogue: 0,0:36:45.40,0:36:46.26,English,,0,0,0,,And
Dialogue: 0,0:36:45.40,0:36:46.26,Chinese,,0,0,0,,和
Dialogue: 0,0:36:49.68,0:36:51.10,English,,0,0,0,,I'll connect to that
Dialogue: 0,0:36:49.68,0:36:51.10,Chinese,,0,0,0,,我会联系到那个
Dialogue: 0,0:37:00.24,0:37:08.24,English,,0,0,0,,So you'll see that I told the server use port 15213 which is just a random number I picked out as the port number
Dialogue: 0,0:37:00.24,0:37:08.24,Chinese,,0,0,0,,所以你会看到我告诉服务器使用端口15213这只是我选择的随机数作为端口号
Dialogue: 0,0:37:09.44,0:37:11.78,English,,0,0,0,,In general if you want to do your own stuff
Dialogue: 0,0:37:09.44,0:37:11.78,Chinese,,0,0,0,,一般来说，如果你想做自己的东西
Dialogue: 0,0:37:11.92,0:37:19.36,English,,0,0,0,,You pick port numbers that are a thousand or greater and they're limited to be unsigned 16-bit
Dialogue: 0,0:37:11.92,0:37:19.36,Chinese,,0,0,0,,你选择一千或更大的端口号，它们仅限于无符号16位
Dialogue: 0,0:37:19.50,0:37:22.62,English,,0,0,0,,So 64 or 65 thousand something some maximum
Dialogue: 0,0:37:19.50,0:37:22.62,Chinese,,0,0,0,,所以有64或65000个东西最多
Dialogue: 0,0:37:24.14,0:37:26.64,English,,0,0,0,,And as long as and by the way
Dialogue: 0,0:37:24.14,0:37:26.64,Chinese,,0,0,0,,只要顺便说一下
Dialogue: 0,0:37:27.38,0:37:32.80,English,,0,0,0,,If you're you live in a corporate world your ports will all be locked down and they will not let you do this
Dialogue: 0,0:37:27.38,0:37:32.80,Chinese,,0,0,0,,如果你住在公司世界，你的港口将被锁定，他们不会让你这样做
Dialogue: 0,0:37:32.92,0:37:37.38,English,,0,0,0,,But in the CMU environment has a pretty permissive policy
Dialogue: 0,0:37:32.92,0:37:37.38,Chinese,,0,0,0,,但在CMU环境中有一个非常宽松的政策
Dialogue: 0,0:37:37.76,0:37:44.12,English,,0,0,0,,And actually I'm just doing this on localhost,but you're allowed to at CMU  open up ports like you want
Dialogue: 0,0:37:37.76,0:37:44.12,Chinese,,0,0,0,,实际上我只是在localhost上执行此操作，但你可以在CMU中打开你想要的端口
Dialogue: 0,0:37:47.94,0:37:50.79,English,,0,0,0,,So anyways I'm going to run this client
Dialogue: 0,0:37:47.94,0:37:50.79,Chinese,,0,0,0,,所以无论如何我要运行这个客户端
Dialogue: 0,0:37:51.48,0:37:53.04,English,,0,0,0,,And you'll see that
Dialogue: 0,0:37:51.48,0:37:53.04,Chinese,,0,0,0,,你会看到的
Dialogue: 0,0:37:54.54,0:38:01.98,English,,0,0,0,,The server just said I've received a connection from the localhost not very exciting
Dialogue: 0,0:37:54.54,0:38:01.98,Chinese,,0,0,0,,服务器刚说我收到了localhost的连接并不是很令人兴奋
Dialogue: 0,0:38:02.52,0:38:06.12,English,,0,0,0,,And I've received it from port 55457
Dialogue: 0,0:38:02.52,0:38:06.12,Chinese,,0,0,0,,我从55457端口收到了它
Dialogue: 0,0:38:06.26,0:38:08.86,English,,0,0,0,,So this is the part that got assigned to the client
Dialogue: 0,0:38:06.26,0:38:08.86,Chinese,,0,0,0,,所以这是分配给客户的部分
Dialogue: 0,0:38:09.72,0:38:14.46,English,,0,0,0,,In making the connection the server is using port 15213
Dialogue: 0,0:38:09.72,0:38:14.46,Chinese,,0,0,0,,在建立连接时，服务器使用端口15213
Dialogue: 0,0:38:14.80,0:38:21.80,English,,0,0,0,,And you recall we talked about last time that a link is defined by the host and port names on either end
Dialogue: 0,0:38:14.80,0:38:21.80,Chinese,,0,0,0,,你还记得我们上次谈到过两端的主机和端口名都定义了一个链接
Dialogue: 0,0:38:22.46,0:38:26.54,English,,0,0,0,,And that the client side is usually assigned what they call a ephemeral port
Dialogue: 0,0:38:22.46,0:38:26.54,Chinese,,0,0,0,,并且客户端通常被分配他们称之为短暂端口的东西
Dialogue: 0,0:38:26.76,0:38:31.74,English,,0,0,0,,It's meaning it's just assigned a trip for this particular session that I'm going to run
Dialogue: 0,0:38:26.76,0:38:31.74,Chinese,,0,0,0,,这意味着它只为我将要运行的这个特定会话分配了一次旅行
Dialogue: 0,0:38:32.58,0:38:37.40,English,,0,0,0,,And now here's the amazing feature of an echo server is that you can type in stuff
Dialogue: 0,0:38:32.58,0:38:37.40,Chinese,,0,0,0,,现在这里回声服务器的一个惊人功能是你可以输入内容
Dialogue: 0,0:38:38.84,0:38:39.98,English,,0,0,0,,And it will come back to you
Dialogue: 0,0:38:38.84,0:38:39.98,Chinese,,0,0,0,,它会回到你身边
Dialogue: 0,0:38:43.58,0:38:46.00,English,,0,0,0,,Because echoing so what's happening is
Dialogue: 0,0:38:43.58,0:38:46.00,Chinese,,0,0,0,,因为回应所以正在发生的事情
Dialogue: 0,0:38:46.58,0:38:50.50,English,,0,0,0,,I'm sending those meaningful messages to the server
Dialogue: 0,0:38:46.58,0:38:50.50,Chinese,,0,0,0,,我正在将那些有意义的消息发送到服务器
Dialogue: 0,0:38:51.30,0:38:52.46,English,,0,0,0,,It's reading them
Dialogue: 0,0:38:51.30,0:38:52.46,Chinese,,0,0,0,,它在读它们
Dialogue: 0,0:38:52.94,0:38:54.86,English,,0,0,0,,And it's just sending them right back
Dialogue: 0,0:38:52.94,0:38:54.86,Chinese,,0,0,0,,它只是将它们发送回来
Dialogue: 0,0:38:55.14,0:39:00.10,English,,0,0,0,,And then the clients reading that and printing it on the screen
Dialogue: 0,0:38:55.14,0:39:00.10,Chinese,,0,0,0,,然后客户阅读并将其打印在屏幕上
Dialogue: 0,0:39:00.44,0:39:03.10,English,,0,0,0,,It's sort of the minimum function you could imagine
Dialogue: 0,0:39:00.44,0:39:03.10,Chinese,,0,0,0,,这是你能想象到的最小功能
Dialogue: 0,0:39:03.64,0:39:06.24,English,,0,0,0,,But you can see that the server is telling you
Dialogue: 0,0:39:03.64,0:39:06.24,Chinese,,0,0,0,,但是你可以看到服务器在告诉你
Dialogue: 0,0:39:06.60,0:39:12.04,English,,0,0,0,,Oh by the way I just received so many bytes,so many bytes,so many bytes,so you can see that it's actually doing something
Dialogue: 0,0:39:06.60,0:39:12.04,Chinese,,0,0,0,,哦顺便说一句，我刚收到这么多字节，那么多字节，那么多字节，所以你可以看到它实际上在做什么
Dialogue: 0,0:39:14.24,0:39:18.22,English,,0,0,0,,And then if I send it into file which is just to Ctrl-D
Dialogue: 0,0:39:14.24,0:39:18.22,Chinese,,0,0,0,,然后，如果我将它发送到文件只是Ctrl-D
Dialogue: 0,0:39:19.76,0:39:25.24,English,,0,0,0,,The client will exit and the server will
Dialogue: 0,0:39:19.76,0:39:25.24,Chinese,,0,0,0,,客户端将退出，服务器将退出
Dialogue: 0,0:39:25.24,0:39:27.62,English,,0,0,0,,Drop that connection but doesn't show
Dialogue: 0,0:39:25.24,0:39:27.62,Chinese,,0,0,0,,删除该连接但不显示
Dialogue: 0,0:39:27.62,0:39:31.78,English,,0,0,0,,You anything and if I wanted to I could start it again
Dialogue: 0,0:39:27.62,0:39:31.78,Chinese,,0,0,0,,你什么，如果我想，我可以再次开始
Dialogue: 0,0:39:32.30,0:39:37.32,English,,0,0,0,,And you see this time it signed a different ephemeral port to the client
Dialogue: 0,0:39:32.30,0:39:37.32,Chinese,,0,0,0,,而且你看到这次它与客户签署了一个不同的短暂端口
Dialogue: 0,0:39:39.50,0:39:44.34,English,,0,0,0,,But I can only do one at a time if I tried to now do another connection
Dialogue: 0,0:39:39.50,0:39:44.34,Chinese,,0,0,0,,但是如果我现在尝试进行另一次连接，我一次只能做一次
Dialogue: 0,0:39:47.14,0:39:49.48,English,,0,0,0,,I will try and do it,if I tried to do it
Dialogue: 0,0:39:47.14,0:39:49.48,Chinese,,0,0,0,,如果我尝试这样做，我会尽力去做
Dialogue: 0,0:39:51.70,0:39:56.30,English,,0,0,0,,I wouldn't...it would just hang up the the client would hang up it would not be able to get a connection
Dialogue: 0,0:39:51.70,0:39:56.30,Chinese,,0,0,0,,我不会......它只会挂断客户端会挂断它无法连接
Dialogue: 0,0:39:56.34,0:40:01.44,English,,0,0,0,,Because the server is only able to handle one client at a time
Dialogue: 0,0:39:56.34,0:40:01.44,Chinese,,0,0,0,,因为服务器一次只能处理一个客户端
Dialogue: 0,0:40:02.70,0:40:04.72,English,,0,0,0,,Okay so that's the
Dialogue: 0,0:40:02.70,0:40:04.72,Chinese,,0,0,0,,好的，这就是
Dialogue: 0,0:40:06.12,0:40:09.84,English,,0,0,0,,What the application does and now let's see how its implemented
Dialogue: 0,0:40:06.12,0:40:09.84,Chinese,,0,0,0,,该应用程序的功能现在让我们看看它是如何实现的
Dialogue: 0,0:40:13.98,0:40:18.26,English,,0,0,0,,It's pretty simple the nastiness was those functions we've already seen
Dialogue: 0,0:40:13.98,0:40:18.26,Chinese,,0,0,0,,这很简单，我们已经看到过的那些功能
Dialogue: 0,0:40:19.34,0:40:20.66,English,,0,0,0,,So here's the client side of it
Dialogue: 0,0:40:19.34,0:40:20.66,Chinese,,0,0,0,,所以这是客户端
Dialogue: 0,0:40:21.18,0:40:25.62,English,,0,0,0,,It calls that function I went through called open the client file descriptor
Dialogue: 0,0:40:21.18,0:40:25.62,Chinese,,0,0,0,,它调用我经历的函数调用打开客户端文件描述符
Dialogue: 0,0:40:25.64,0:40:29.40,English,,0,0,0,,Where you gave the name of the host and the name of the port
Dialogue: 0,0:40:25.64,0:40:29.40,Chinese,,0,0,0,,你在哪里提供了主机的名称和端口的名称
Dialogue: 0,0:40:30.28,0:40:32.52,English,,0,0,0,,That you're the server's operating on
Dialogue: 0,0:40:30.28,0:40:32.52,Chinese,,0,0,0,,你是服务器的运作
Dialogue: 0,0:40:32.60,0:40:36.18,English,,0,0,0,,So I said here localhost 15213
Dialogue: 0,0:40:32.60,0:40:36.18,Chinese,,0,0,0,,所以我在这里说localhost 15213
Dialogue: 0,0:40:37.00,0:40:38.76,English,,0,0,0,,And I'm going to initialize a buffer
Dialogue: 0,0:40:37.00,0:40:38.76,Chinese,,0,0,0,,我要初始化一个缓冲区
Dialogue: 0,0:40:39.26,0:40:44.98,English,,0,0,0,,That will be used for communication back and forth for this network communication
Dialogue: 0,0:40:39.26,0:40:44.98,Chinese,,0,0,0,,这将用于此网络通信的来回通信
Dialogue: 0,0:40:46.00,0:40:52.64,English,,0,0,0,,So now echoing means I from a client perspective it will just read in what I've typed
Dialogue: 0,0:40:46.00,0:40:52.64,Chinese,,0,0,0,,所以现在回声意味着我从客户的角度来看它只会阅读我输入的内容
Dialogue: 0,0:40:53.44,0:41:00.28,English,,0,0,0,,So using gets or fgets to read in what's been typed on the standard input
Dialogue: 0,0:40:53.44,0:41:00.28,Chinese,,0,0,0,,因此，使用gets或fgets来读取标准输入中输入的内容
Dialogue: 0,0:41:01.50,0:41:05.50,English,,0,0,0,,And as long as that's not null meaning I don't have a end of file
Dialogue: 0,0:41:01.50,0:41:05.50,Chinese,,0,0,0,,只要那不是空意味着我没有文件结束
Dialogue: 0,0:41:06.60,0:41:09.50,English,,0,0,0,,Then I will write it to the client file descriptors
Dialogue: 0,0:41:06.60,0:41:09.50,Chinese,,0,0,0,,然后我将它写入客户端文件描述符
Dialogue: 0,0:41:09.58,0:41:11.38,English,,0,0,0,,So that's how I actually send it over the network
Dialogue: 0,0:41:09.58,0:41:11.38,Chinese,,0,0,0,,这就是我实际通过网络发送它的方式
Dialogue: 0,0:41:11.50,0:41:19.08,English,,0,0,0,,As I do a write to that a socket that file descriptor represents
Dialogue: 0,0:41:11.50,0:41:19.08,Chinese,,0,0,0,,当我写一个文件描述符所代表的套接字时
Dialogue: 0,0:41:19.68,0:41:23.76,English,,0,0,0,,And then to get something back from the server its response I'll do a read
Dialogue: 0,0:41:19.68,0:41:23.76,Chinese,,0,0,0,,然后从服务器上取回一些东西它的响应我会做一个阅读
Dialogue: 0,0:41:26.58,0:41:29.08,English,,0,0,0,,And RIO as you call has embedded within it
Dialogue: 0,0:41:26.58,0:41:29.08,Chinese,,0,0,0,,你打电话的RIO已嵌入其中
Dialogue: 0,0:41:33.64,0:41:37.18,English,,0,0,0,,Now what file descriptor that read is using
Dialogue: 0,0:41:33.64,0:41:37.18,Chinese,,0,0,0,,现在读取的文件描述符正在使用
Dialogue: 0,0:41:39.22,0:41:45.32,English,,0,0,0,,So I'll say read from that particular file descriptor fill the results back into this buffer
Dialogue: 0,0:41:39.22,0:41:45.32,Chinese,,0,0,0,,所以我会说从特定文件描述符读取将结果填充回此缓冲区
Dialogue: 0,0:41:46.06,0:41:49.58,English,,0,0,0,,So I'm using buff both as a sending buffer and a receiving buffer
Dialogue: 0,0:41:46.06,0:41:49.58,Chinese,,0,0,0,,所以我使用buff作为发送缓冲区和接收缓冲区
Dialogue: 0,0:41:50.62,0:41:55.98,English,,0,0,0,,And then just print that out on to the terminal
Dialogue: 0,0:41:50.62,0:41:55.98,Chinese,,0,0,0,,然后将其打印到终端上
Dialogue: 0,0:41:56.60,0:42:01.24,English,,0,0,0,,And this is by the way the new lines being included in this not just the
Dialogue: 0,0:41:56.60,0:42:01.24,Chinese,,0,0,0,,顺便说一句，这条新线路不仅包括在内
Dialogue: 0,0:42:01.94,0:42:04.44,English,,0,0,0,,In all of this and that's how it's working
Dialogue: 0,0:42:01.94,0:42:04.44,Chinese,,0,0,0,,在所有这一切，这就是它的工作方式
Dialogue: 0,0:42:05.02,0:42:05.98,English,,0,0,0,,So that's all that happens
Dialogue: 0,0:42:05.02,0:42:05.98,Chinese,,0,0,0,,这就是发生的一切
Dialogue: 0,0:42:05.98,0:42:13.06,English,,0,0,0,,So the main point you see here is that I'm using this a socket like a file to both send and receive
Dialogue: 0,0:42:05.98,0:42:13.06,Chinese,,0,0,0,,所以你在这里看到的主要观点是我使用这个像文件一样的套接字来发送和接收
Dialogue: 0,0:42:17.44,0:42:23.56,English,,0,0,0,,The server code is just a shade more nasty than that to support some of those amazing features it has
Dialogue: 0,0:42:17.44,0:42:23.56,Chinese,,0,0,0,,服务器代码比支持它具有的一些惊人功能更加令人讨厌
Dialogue: 0,0:42:24.50,0:42:25.56,English,,0,0,0,,So in particular
Dialogue: 0,0:42:24.50,0:42:25.56,Chinese,,0,0,0,,特别是
Dialogue: 0,0:42:26.76,0:42:29.80,English,,0,0,0,,There's a weird struct called a socket or storage
Dialogue: 0,0:42:26.76,0:42:29.80,Chinese,,0,0,0,,有一个奇怪的结构称为套接字或存储
Dialogue: 0,0:42:30.56,0:42:34.74,English,,0,0,0,,That is just again part of this generic api
Dialogue: 0,0:42:30.56,0:42:34.74,Chinese,,0,0,0,,这只是这个通用api的一部分
Dialogue: 0,0:42:34.82,0:42:39.16,English,,0,0,0,,That gives you a buffer of some kind that's big enough to store
Dialogue: 0,0:42:34.82,0:42:39.16,Chinese,,0,0,0,,这给你一个足够大的存储缓冲区
Dialogue: 0,0:42:39.78,0:42:46.70,English,,0,0,0,,A name of a host is what I'm going to use it for you
Dialogue: 0,0:42:39.78,0:42:46.70,Chinese,,0,0,0,,我将为你使用主机名称
Dialogue: 0,0:42:50.02,0:42:55.68,English,,0,0,0,,And so I'm going to accept a connection
Dialogue: 0,0:42:50.02,0:42:55.68,Chinese,,0,0,0,,所以我要接受一个连接
Dialogue: 0,0:42:59.14,0:43:02.14,English,,0,0,0,,So except recall you recall is the way
Dialogue: 0,0:42:59.14,0:43:02.14,Chinese,,0,0,0,,所以除了召回你回忆的是方式
Dialogue: 0,0:43:02.34,0:43:09.30,English,,0,0,0,,It it says okay I'm going to wait here until a client contacts this server
Dialogue: 0,0:43:02.34,0:43:09.30,Chinese,,0,0,0,,它说没关系我会在这里等到客户联系这个服务器
Dialogue: 0,0:43:10.48,0:43:14.92,English,,0,0,0,,So that you make a call to accept and it will just hang until that contact occurs
Dialogue: 0,0:43:10.48,0:43:14.92,Chinese,,0,0,0,,因此，你拨打电话接受，它将一直挂起，直到发生联系
Dialogue: 0,0:43:16.04,0:43:23.32,English,,0,0,0,,And then what it will return from you is a new file descriptor that we call a connection file descriptor here
Dialogue: 0,0:43:16.04,0:43:23.32,Chinese,,0,0,0,,然后它将从你返回的是一个新的文件描述符，我们在这里称之为连接文件描述符
Dialogue: 0,0:43:23.92,0:43:26.92,English,,0,0,0,,Which is different from the listening file descriptor
Dialogue: 0,0:43:23.92,0:43:26.92,Chinese,,0,0,0,,这与侦听文件描述符不同
Dialogue: 0,0:43:26.92,0:43:31.18,English,,0,0,0,,And the reason is doesn't really show up in this code where I'm doing iteratively
Dialogue: 0,0:43:26.92,0:43:31.18,Chinese,,0,0,0,,原因是这个代码并没有真正显示在迭代中
Dialogue: 0,0:43:31.62,0:43:36.58,English,,0,0,0,,But you can imagine if I had a server and I wanted to be able to maintain a thousand connections at once
Dialogue: 0,0:43:31.62,0:43:36.58,Chinese,,0,0,0,,但你可以想象，如果我有一台服务器，我希望能够同时维护一千个连接
Dialogue: 0,0:43:37.26,0:43:40.84,English,,0,0,0,,There'll be one of those file descriptors that I pick up new requests on
Dialogue: 0,0:43:37.26,0:43:40.84,Chinese,,0,0,0,,我会收到一些新的请求的文件描述符
Dialogue: 0,0:43:41.34,0:43:45.96,English,,0,0,0,,And then all the other ones are the various other clients that I'm communicating with right now
Dialogue: 0,0:43:41.34,0:43:45.96,Chinese,,0,0,0,,然后所有其他的是我正在与之沟通的各种其他客户
Dialogue: 0,0:43:48.88,0:43:52.80,English,,0,0,0,,Oh and then what accept fills in here into this information
Dialogue: 0,0:43:48.88,0:43:52.80,Chinese,,0,0,0,,哦，然后接受填写此信息的内容
Dialogue: 0,0:43:52.88,0:44:00.48,English,,0,0,0,,It's a sockaddr struct is about information about the client the IP address of the client
Dialogue: 0,0:43:52.88,0:44:00.48,Chinese,,0,0,0,,这是一个sockaddr结构，是关于客户端的IP地址的信息
Dialogue: 0,0:44:04.70,0:44:05.62,English,,0,0,0,,And
Dialogue: 0,0:44:04.70,0:44:05.62,Chinese,,0,0,0,,和
Dialogue: 0,0:44:06.66,0:44:11.70,English,,0,0,0,,I'll use this call called getnameinfo which is again at one of these kitchen sink features
Dialogue: 0,0:44:06.66,0:44:11.70,Chinese,,0,0,0,,我将使用名为getnameinfo的这个调用，它再次出现在这些厨房水槽功能之一
Dialogue: 0,0:44:11.70,0:44:15.30,English,,0,0,0,,That I'll pass in this client address
Dialogue: 0,0:44:11.70,0:44:15.30,Chinese,,0,0,0,,我会传递这个客户地址
Dialogue: 0,0:44:18.00,0:44:19.64,English,,0,0,0,,And
Dialogue: 0,0:44:18.00,0:44:19.64,Chinese,,0,0,0,,和
Dialogue: 0,0:44:20.76,0:44:25.52,English,,0,0,0,,It will come back with the domain name of the client
Dialogue: 0,0:44:20.76,0:44:25.52,Chinese,,0,0,0,,它将返回客户端的域名
Dialogue: 0,0:44:27.04,0:44:33.08,English,,0,0,0,,And that's what you saw how it printed out when the connection was formed where that connection was coming from
Dialogue: 0,0:44:27.04,0:44:33.08,Chinese,,0,0,0,,这就是你所看到的，当连接形成于连接的来源时，它是如何打印出来的
Dialogue: 0,0:44:34.06,0:44:39.84,English,,0,0,0,,So this,all this business here is used to support that feature of being able to print out
Dialogue: 0,0:44:34.06,0:44:39.84,Chinese,,0,0,0,,所以，这里的所有这些业务都用于支持能够打印出来的功能
Dialogue: 0,0:44:40.52,0:44:45.32,English,,0,0,0,,What's the host number name and what port am I using
Dialogue: 0,0:44:40.52,0:44:45.32,Chinese,,0,0,0,,什么是主机号名称以及我使用的端口
Dialogue: 0,0:44:45.54,0:44:49.68,English,,0,0,0,,And this thing by the way client port is
Dialogue: 0,0:44:45.54,0:44:49.68,Chinese,,0,0,0,,顺便说一下客户端端口的这个东西
Dialogue: 0,0:44:52.98,0:44:59.80,English,,0,0,0,,A client host name and client port are both buffers
Dialogue: 0,0:44:52.98,0:44:59.80,Chinese,,0,0,0,,客户端主机名和客户端端口都是缓冲区
Dialogue: 0,0:45:01.52,0:45:05.78,English,,0,0,0,,Yes host name and port are both buffers
Dialogue: 0,0:45:01.52,0:45:05.78,Chinese,,0,0,0,,是的主机名和端口都是缓冲区
Dialogue: 0,0:45:05.92,0:45:07.98,English,,0,0,0,,And I'm passing a pointer those buffers
Dialogue: 0,0:45:05.92,0:45:07.98,Chinese,,0,0,0,,我正在传递指针那些缓冲区
Dialogue: 0,0:45:08.54,0:45:12.02,English,,0,0,0,,And I'm passing their length max line
Dialogue: 0,0:45:08.54,0:45:12.02,Chinese,,0,0,0,,我正在通过他们的长度最大线
Dialogue: 0,0:45:12.46,0:45:19.22,English,,0,0,0,,And then the call to getnameinfo is filling those in with a string representations of the host name in the port
Dialogue: 0,0:45:12.46,0:45:19.22,Chinese,,0,0,0,,然后对getnameinfo的调用正在填充端口中主机名的字符串表示
Dialogue: 0,0:45:22.74,0:45:27.20,English,,0,0,0,,And now it just makes a call to the echo function which I'll show you momentarily
Dialogue: 0,0:45:22.74,0:45:27.20,Chinese,,0,0,0,,现在它只是调用echo函数，我会暂时告诉你
Dialogue: 0,0:45:27.62,0:45:32.32,English,,0,0,0,,And then it closes that connection
Dialogue: 0,0:45:27.62,0:45:32.32,Chinese,,0,0,0,,然后它关闭了这个连接
Dialogue: 0,0:45:32.90,0:45:36.90,English,,0,0,0,,And then this continues you see the while one this is in a loop forever
Dialogue: 0,0:45:32.90,0:45:36.90,Chinese,,0,0,0,,然后这继续你看到一个人永远在循环中
Dialogue: 0,0:45:37.26,0:45:40.30,English,,0,0,0,,And you actually have to Ctrl-C on this program to get it to quit
Dialogue: 0,0:45:37.26,0:45:40.30,Chinese,,0,0,0,,而你实际上必须在这个程序上使用Ctrl-C才能让它退出
Dialogue: 0,0:45:42.08,0:45:42.32,English,,0,0,0,,Okay
Dialogue: 0,0:45:42.08,0:45:42.32,Chinese,,0,0,0,,好的
Dialogue: 0,0:45:43.46,0:45:45.08,English,,0,0,0,,So let me just look one more
Dialogue: 0,0:45:43.46,0:45:45.08,Chinese,,0,0,0,,那么，让我再看看一个
Dialogue: 0,0:45:46.10,0:45:50.86,English,,0,0,0,,So the func...this now is the echo function that the server uses and it's pretty straightforward
Dialogue: 0,0:45:46.10,0:45:50.86,Chinese,,0,0,0,,所以func ...现在这是服务器使用的echo函数，它非常简单
Dialogue: 0,0:45:51.60,0:45:56.58,English,,0,0,0,,In fact it looks kind of like what you just saw except it flips around the reading and the writing
Dialogue: 0,0:45:51.60,0:45:56.58,Chinese,,0,0,0,,事实上，它看起来有点像你刚刚看到的，除了它翻阅阅读和写作
Dialogue: 0,0:45:57.42,0:46:06.08,English,,0,0,0,,It will read some number of bytes over the connection file descriptor
Dialogue: 0,0:45:57.42,0:46:06.08,Chinese,,0,0,0,,它将读取连接文件描述符上的一些字节数
Dialogue: 0,0:46:07.96,0:46:10.72,English,,0,0,0,,And if that's a nonzero number
Dialogue: 0,0:46:07.96,0:46:10.72,Chinese,,0,0,0,,如果这是一个非零数字
Dialogue: 0,0:46:11.58,0:46:14.52,English,,0,0,0,,Then it will echo that back by writing it
Dialogue: 0,0:46:11.58,0:46:14.52,Chinese,,0,0,0,,然后它会通过写回来回应它
Dialogue: 0,0:46:15.36,0:46:18.32,English,,0,0,0,,If it's a zero that means it's detected and into file
Dialogue: 0,0:46:15.36,0:46:18.32,Chinese,,0,0,0,,如果它为零则意味着它被检测到并存入文件
Dialogue: 0,0:46:18.40,0:46:21.90,English,,0,0,0,,And it will just exit from that little loop
Dialogue: 0,0:46:18.40,0:46:21.90,Chinese,,0,0,0,,它将从那个小循环中退出
Dialogue: 0,0:46:22.46,0:46:26.30,English,,0,0,0,,But remember echo is within a bigger loop of accepting new connection requests
Dialogue: 0,0:46:22.46,0:46:26.30,Chinese,,0,0,0,,但请记住，echo是接受新连接请求的更大循环
Dialogue: 0,0:46:27.82,0:46:33.08,English,,0,0,0,,Okay but again just see that it reads is way of accepting information from the client
Dialogue: 0,0:46:27.82,0:46:33.08,Chinese,,0,0,0,,好的但是再次看到它是从客户端接受信息的方式
Dialogue: 0,0:46:33.62,0:46:35.98,English,,0,0,0,,And then it writes to send information back to the client
Dialogue: 0,0:46:33.62,0:46:35.98,Chinese,,0,0,0,,然后它写入将信息发送回客户端
Dialogue: 0,0:46:38.24,0:46:38.62,English,,0,0,0,,Good
Dialogue: 0,0:46:38.24,0:46:38.62,Chinese,,0,0,0,,好
Dialogue: 0,0:46:41.38,0:46:45.40,English,,0,0,0,,So one interesting feature is if you want to test some programs
Dialogue: 0,0:46:41.38,0:46:45.40,Chinese,,0,0,0,,所以一个有趣的功能是如果你想测试一些程序
Dialogue: 0,0:46:45.40,0:46:52.30,English,,0,0,0,,You can use a program called telnet which it used to be the old-fashioned way you use before ssh
Dialogue: 0,0:46:45.40,0:46:52.30,Chinese,,0,0,0,,你可以使用一个名为telnet的程序，它曾经是你在ssh之前使用的老式方法
Dialogue: 0,0:46:52.56,0:46:55.20,English,,0,0,0,,This is how you communicated with other machines
Dialogue: 0,0:46:52.56,0:46:55.20,Chinese,,0,0,0,,这就是你与其他机器通信的方式
Dialogue: 0,0:46:55.84,0:46:58.08,English,,0,0,0,,And it's absolutely completely insecure
Dialogue: 0,0:46:55.84,0:46:58.08,Chinese,,0,0,0,,这绝对是完全不安全的
Dialogue: 0,0:46:58.54,0:47:02.64,English,,0,0,0,,So don't ever use it to actually and most places
Dialogue: 0,0:46:58.54,0:47:02.64,Chinese,,0,0,0,,因此，不要将它用于实际和大多数地方
Dialogue: 0,0:47:02.68,0:47:05.80,English,,0,0,0,,You can't even make a connection to another machine using telnet
Dialogue: 0,0:47:02.68,0:47:05.80,Chinese,,0,0,0,,你甚至无法使用telnet连接到另一台计算机
Dialogue: 0,0:47:08.22,0:47:11.70,English,,0,0,0,,It's amazing how simple life used to be
Dialogue: 0,0:47:08.22,0:47:11.70,Chinese,,0,0,0,,令人惊讶的是过去的简单生活
Dialogue: 0,0:47:13.52,0:47:15.02,English,,0,0,0,,But for example
Dialogue: 0,0:47:13.52,0:47:15.02,Chinese,,0,0,0,,但举个例子
Dialogue: 0,0:47:20.44,0:47:23.52,English,,0,0,0,,If I telnet to myself on that port
Dialogue: 0,0:47:20.44,0:47:23.52,Chinese,,0,0,0,,如果我在那个端口上telnet自己
Dialogue: 0,0:47:27.88,0:47:30.16,English,,0,0,0,,It will begin a session
Dialogue: 0,0:47:27.88,0:47:30.16,Chinese,,0,0,0,,它将开始一个会话
Dialogue: 0,0:47:30.76,0:47:35.04,English,,0,0,0,,And it will in fact look a lot like an echo client because
Dialogue: 0,0:47:30.76,0:47:35.04,Chinese,,0,0,0,,事实上它看起来很像回声客户端，因为
Dialogue: 0,0:47:36.14,0:47:39.88,English,,0,0,0,,Because telnet just sends information to the server
Dialogue: 0,0:47:36.14,0:47:39.88,Chinese,,0,0,0,,因为telnet只是向服务器发送信息
Dialogue: 0,0:47:40.62,0:47:44.80,English,,0,0,0,,And the server is designed to echo it back and so it will print the response
Dialogue: 0,0:47:40.62,0:47:44.80,Chinese,,0,0,0,,并且服务器设计为回显它，因此它将打印响应
Dialogue: 0,0:47:45.02,0:47:49.32,English,,0,0,0,,And so if effectively telnet is behaving like an echo client for me
Dialogue: 0,0:47:45.02,0:47:49.32,Chinese,,0,0,0,,因此，如果有效的telnet对我来说就像一个echo客户端
Dialogue: 0,0:47:50.50,0:47:52.36,English,,0,0,0,,And I'll demo that because it's useful
Dialogue: 0,0:47:50.50,0:47:52.36,Chinese,,0,0,0,,我会演示它，因为它很有用
Dialogue: 0,0:47:52.90,0:47:56.80,English,,0,0,0,, I mean this is a pretty trivial program but there's actually times you can use telnet
Dialogue: 0,0:47:52.90,0:47:56.80,Chinese,,0,0,0,,我的意思是这是一个非常简单的程序，但实际上你可以使用telnet
Dialogue: 0,0:47:57.22,0:48:01.10,English,,0,0,0,,If there's the server somewhere out there and you want to give it a poke and see what's going on
Dialogue: 0,0:47:57.22,0:48:01.10,Chinese,,0,0,0,,如果服务器在那里的某个地方，你想要给它一个戳，看看发生了什么
Dialogue: 0,0:48:01.84,0:48:03.50,English,,0,0,0,,As a tool you can use telnet
Dialogue: 0,0:48:01.84,0:48:03.50,Chinese,,0,0,0,,作为一种工具，你可以使用telnet
Dialogue: 0,0:48:05.68,0:48:08.92,English,,0,0,0,,Let's see you have to escape with a control right bracket quick
Dialogue: 0,0:48:05.68,0:48:08.92,Chinese,,0,0,0,,让我们看看你必须快速控制右支架逃脱
Dialogue: 0,0:48:10.18,0:48:10.44,English,,0,0,0,,Okay
Dialogue: 0,0:48:10.18,0:48:10.44,Chinese,,0,0,0,,好的
Dialogue: 0,0:48:12.82,0:48:13.08,English,,0,0,0,,So
Dialogue: 0,0:48:12.82,0:48:13.08,Chinese,,0,0,0,,所以
Dialogue: 0,0:48:14.76,0:48:18.60,English,,0,0,0,,Now let's move on to http
Dialogue: 0,0:48:14.76,0:48:18.60,Chinese,,0,0,0,,现在让我们转到http
Dialogue: 0,0:48:22.94,0:48:24.86,English,,0,0,0,,I try to get rid of all the animations in this
Dialogue: 0,0:48:22.94,0:48:24.86,Chinese,,0,0,0,,我试图摆脱这里的所有动画
Dialogue: 0,0:48:26.62,0:48:34.92,English,,0,0,0,,Okay so that's sort of the basics of the low-level socket programming that you need to create client-server applications
Dialogue: 0,0:48:26.62,0:48:34.92,Chinese,,0,0,0,,好的，这就是创建客户端 - 服务器应用程序所需的低级套接字编程的基础知识
Dialogue: 0,0:48:35.80,0:48:40.68,English,,0,0,0,,So the best example out there of a client-server application is the world wide web
Dialogue: 0,0:48:35.80,0:48:40.68,Chinese,,0,0,0,,因此，客户端 - 服务器应用程序的最佳示例是万维网
Dialogue: 0,0:48:41.62,0:48:46.08,English,,0,0,0,,And you know the idea web servers and your browser is a client
Dialogue: 0,0:48:41.62,0:48:46.08,Chinese,,0,0,0,,而且你知道Web服务器和浏览器是客户端的想法
Dialogue: 0,0:48:47.16,0:48:55.20,English,,0,0,0,,So but all of that sits on top of the protocols for that sit on top of the other internet protocols
Dialogue: 0,0:48:47.16,0:48:55.20,Chinese,,0,0,0,,因此，所有这些都位于其他互联网协议之上的协议之上
Dialogue: 0,0:48:55.90,0:49:01.80,English,,0,0,0,,So we talked about TCP is sort of sits on top of the lowest level the packet protocol
Dialogue: 0,0:48:55.90,0:49:01.80,Chinese,,0,0,0,,所以我们谈到TCP有点位于最低级别的数据包协议之上
Dialogue: 0,0:49:02.34,0:49:12.14,English,,0,0,0,,And then http sits on top of that and uses TCP connections to send and receive data over the world wide web
Dialogue: 0,0:49:02.34,0:49:12.14,Chinese,,0,0,0,,然后http位于其上并使用TCP连接在万维网上发送和接收数据
Dialogue: 0,0:49:14.82,0:49:21.34,English,,0,0,0,,And that's all according to a protocol that was developed starting in the early 90s
Dialogue: 0,0:49:14.82,0:49:21.34,Chinese,,0,0,0,,这完全符合从90年代初开始开发的协议
Dialogue: 0,0:49:21.92,0:49:28.05,English,,0,0,0,,But and that's what Tim Berners Lee did initially
Dialogue: 0,0:49:21.92,0:49:28.05,Chinese,,0,0,0,,但这就是Tim Berners Lee最初的所作所为
Dialogue: 0,0:49:29.38,0:49:31.72,English,,0,0,0,,And it's gone through a couple revisions
Dialogue: 0,0:49:29.38,0:49:31.72,Chinese,,0,0,0,,它经历了几次修改
Dialogue: 0,0:49:32.24,0:49:39.76,English,,0,0,0,,But the latest one is still dates back to 1999 http version excuse me 1.1
Dialogue: 0,0:49:32.24,0:49:39.76,Chinese,,0,0,0,,但最新的还是可以追溯到1999年的http版本，请原谅我1.1
Dialogue: 0,0:49:41.54,0:49:47.36,English,,0,0,0,,So just as a some terminology and you've sort of heard this at various different ways is
Dialogue: 0,0:49:41.54,0:49:47.36,Chinese,,0,0,0,,所以就像一些术语一样，你可以通过各种不同的方式听到它
Dialogue: 0,0:49:47.94,0:49:56.50,English,,0,0,0,,It’s you can one of the clever things about http is it lets you set handles different formats
Dialogue: 0,0:49:47.94,0:49:56.50,Chinese,,0,0,0,,这是关于http的一个聪明的事情，它可以让你设置处理不同的格式
Dialogue: 0,0:49:56.60,0:50:03.44,English,,0,0,0,,You can send a jpeg image,you can send a a text and so forth
Dialogue: 0,0:49:56.60,0:50:03.44,Chinese,,0,0,0,,你可以发送jpeg图像，也可以发送文本等
Dialogue: 0,0:50:03.46,0:50:07.66,English,,0,0,0,,And those are all encoded in a format called mime
Dialogue: 0,0:50:03.46,0:50:07.66,Chinese,,0,0,0,,这些都是以mime格式编码的
Dialogue: 0,0:50:08.92,0:50:17.64,English,,0,0,0,,Which is actually just a way to take a binary values and convert them into hex formatted strings
Dialogue: 0,0:50:08.92,0:50:17.64,Chinese,,0,0,0,,这实际上只是一种获取二进制值并将其转换为十六进制格式化字符串的方法
Dialogue: 0,0:50:20.16,0:50:21.88,English,,0,0,0,,Oh and
Dialogue: 0,0:50:20.16,0:50:21.88,Chinese,,0,0,0,,哦，还有
Dialogue: 0,0:50:22.80,0:50:28.14,English,,0,0,0,,And then sort of a standard for how you encode it at one end how you decode it the other
Dialogue: 0,0:50:22.80,0:50:28.14,Chinese,,0,0,0,,然后对你如何对其进行编码的一种标准进行排序
Dialogue: 0,0:50:33.96,0:50:40.12,English,,0,0,0,,And so you get to specify when you're sending stuff you specify what
Dialogue: 0,0:50:33.96,0:50:40.12,Chinese,,0,0,0,,因此，你可以指定何时发送你指定内容的内容
Dialogue: 0,0:50:40.92,0:50:42.82,English,,0,0,0,,What type of information it
Dialogue: 0,0:50:40.92,0:50:42.82,Chinese,,0,0,0,,它是什么类型的信息
Dialogue: 0,0:50:44.66,0:50:47.60,English,,0,0,0,,And then the other thing you've probably experienced
Dialogue: 0,0:50:44.66,0:50:47.60,Chinese,,0,0,0,,然后你可能经历过的另一件事
Dialogue: 0,0:50:47.84,0:50:52.34,English,,0,0,0,,And now we're talking a little bit ancient history and I'll update  it momentarily
Dialogue: 0,0:50:47.84,0:50:52.34,Chinese,,0,0,0,,现在我们谈论一些古老的历史，我会暂时更新它
Dialogue: 0,0:50:52.74,0:50:57.86,English,,0,0,0,,But classically you either use static content meaning a fixed web page
Dialogue: 0,0:50:52.74,0:50:57.86,Chinese,,0,0,0,,但经典地说，你要么使用静态内容，而是使用固定网页
Dialogue: 0,0:50:58.46,0:51:06.70,English,,0,0,0,,That was written in html format and was designed to just give you information that was the same every time you looked at it
Dialogue: 0,0:50:58.46,0:51:06.70,Chinese,,0,0,0,,这是用html格式编写的，旨在为你提供每次查看时都相同的信息
Dialogue: 0,0:51:07.18,0:51:12.38,English,,0,0,0,,Or dynamic content where you will change so
Dialogue: 0,0:51:07.18,0:51:12.38,Chinese,,0,0,0,,或动态内容，你将改变它
Dialogue: 0,0:51:12.40,0:51:17.52,English,,0,0,0,,For example a application,a server application that's giving you the weather
Dialogue: 0,0:51:12.40,0:51:17.52,Chinese,,0,0,0,,例如，一个应用程序，一个为你提供天气的服务器应用程序
Dialogue: 0,0:51:17.60,0:51:24.32,English,,0,0,0,,It's not the same page every time and so it will format it in dynamic content if you make a request
Dialogue: 0,0:51:17.60,0:51:24.32,Chinese,,0,0,0,,它不是每次都是相同的页面，因此如果你提出请求，它将在动态内容中格式化它
Dialogue: 0,0:51:24.76,0:51:27.40,English,,0,0,0,,Nowadays it's gotten a lot more complicated
Dialogue: 0,0:51:24.76,0:51:27.40,Chinese,,0,0,0,,如今，它变得更加复杂
Dialogue: 0,0:51:27.40,0:51:32.96,English,,0,0,0,,Because of javascript and all these other sort of client-side programming languages
Dialogue: 0,0:51:27.40,0:51:32.96,Chinese,,0,0,0,,因为javascript和所有这些其他类型的客户端编程语言
Dialogue: 0,0:51:33.00,0:51:38.54,English,,0,0,0,,That actually execute code on your client and communicates back and forth to get results
Dialogue: 0,0:51:33.00,0:51:38.54,Chinese,,0,0,0,,这实际上是在你的客户端上执行代码并来回通信以获得结果
Dialogue: 0,0:51:39.22,0:51:43.72,English,,0,0,0,,So I'm a little bit dated here talking about this sort of old-style way of working
Dialogue: 0,0:51:39.22,0:51:43.72,Chinese,,0,0,0,,所以我在这里谈论这种旧式的工作方式有点过时了
Dialogue: 0,0:51:44.50,0:51:50.58,English,,0,0,0,,But in all cases what actually comes across the wires are some type of a file
Dialogue: 0,0:51:44.50,0:51:50.58,Chinese,,0,0,0,,但在所有情况下，实际遇到的是某种类型的文件
Dialogue: 0,0:51:54.80,0:52:00.10,English,,0,0,0,,And then you've heard the term url meaning universal resource locator
Dialogue: 0,0:51:54.80,0:52:00.10,Chinese,,0,0,0,,然后你听说过url这个术语意味着通用资源定位器
Dialogue: 0,0:52:00.54,0:52:03.72,English,,0,0,0,,Is a combination of a couple things one is it tells you
Dialogue: 0,0:52:00.54,0:52:03.72,Chinese,,0,0,0,,它是一对夫妇的组合，它告诉你
Dialogue: 0,0:52:04.14,0:52:10.26,English,,0,0,0,,Where is that information in terms of a domain name and potentially with a port number
Dialogue: 0,0:52:04.14,0:52:10.26,Chinese,,0,0,0,,域名方面的信息在哪里，可能还有端口号
Dialogue: 0,0:52:10.88,0:52:13.74,English,,0,0,0,,And then also on that particular host
Dialogue: 0,0:52:10.88,0:52:13.74,Chinese,,0,0,0,,然后也在那个特定的主机上
Dialogue: 0,0:52:16.66,0:52:20.14,English,,0,0,0,,Where within the host is that information to be found
Dialogue: 0,0:52:16.66,0:52:20.14,Chinese,,0,0,0,,在主机内的哪个位置可以找到该信息
Dialogue: 0,0:52:20.54,0:52:26.04,English,,0,0,0,,And there's defaults like if you don't give anything it defaults to index.html for example
Dialogue: 0,0:52:20.54,0:52:26.04,Chinese,,0,0,0,,并且有默认值，例如，如果你没有提供任何默认为index.html的内容
Dialogue: 0,0:52:26.72,0:52:33.70,English,,0,0,0,,But url in principle gives you where to locate something on a remote machine
Dialogue: 0,0:52:26.72,0:52:33.70,Chinese,,0,0,0,,但url原则上会为你提供在远程计算机上找到某些内容的位置
Dialogue: 0,0:52:34.96,0:52:40.20,English,,0,0,0,,And now we've seen examples of the tricks that DNS plays
Dialogue: 0,0:52:34.96,0:52:40.20,Chinese,,0,0,0,,现在我们已经看到了DNS播放的技巧示例
Dialogue: 0,0:52:40.30,0:52:43.44,English,,0,0,0,,So that even though you're giving a hostname a domain name
Dialogue: 0,0:52:40.30,0:52:43.44,Chinese,,0,0,0,,即使你给主机名域名，也要如此
Dialogue: 0,0:52:43.88,0:52:48.16,English,,0,0,0,,It could be any of a number of different servers but the the concept still the same
Dialogue: 0,0:52:43.88,0:52:48.16,Chinese,,0,0,0,,它可以是许多不同服务器中的任何一个，但概念仍然相同
Dialogue: 0,0:52:53.10,0:52:55.60,English,,0,0,0,,So when I make a request then
Dialogue: 0,0:52:53.10,0:52:55.60,Chinese,,0,0,0,,所以，当我提出请求时
Dialogue: 0,0:52:55.60,0:52:59.66,English,,0,0,0,,When I running my browser and I want to see a webpage
Dialogue: 0,0:52:55.60,0:52:59.66,Chinese,,0,0,0,,当我运行浏览器并且想要查看网页时
Dialogue: 0,0:53:00.12,0:53:08.68,English,,0,0,0,,What it does is it sends an http request out to the server to do something and to return back a webpage
Dialogue: 0,0:53:00.12,0:53:08.68,Chinese,,0,0,0,,它的作用是将http请求发送到服务器以执行某些操作并返回一个网页
Dialogue: 0,0:53:09.16,0:53:13.42,English,,0,0,0,,And there's a couple of different standard services the most common the one that
Dialogue: 0,0:53:09.16,0:53:13.42,Chinese,,0,0,0,,并且有一些最常见的标准服务
Dialogue: 0,0:53:14.02,0:53:18.84,English,,0,0,0,,It's used 90 some percent of the time is get me a page
Dialogue: 0,0:53:14.02,0:53:18.84,Chinese,,0,0,0,,它使用90％的时间是给我一个页面
Dialogue: 0,0:53:20.24,0:53:21.96,English,,0,0,0,,And there's other stuff too
Dialogue: 0,0:53:20.24,0:53:21.96,Chinese,,0,0,0,,还有其他的东西
Dialogue: 0,0:53:29.08,0:53:31.54,English,,0,0,0,,And and then it will respond back
Dialogue: 0,0:53:29.08,0:53:31.54,Chinese,,0,0,0,,然后它会回应
Dialogue: 0,0:53:32.04,0:53:38.54,English,,0,0,0,,With what's called the response line and embedded within that response will be the thing you're asking for
Dialogue: 0,0:53:32.04,0:53:38.54,Chinese,,0,0,0,,通过所谓的响应线并嵌入到响应中将是你要求的东西
Dialogue: 0,0:53:38.54,0:53:40.30,English,,0,0,0,,But in front of it all is a header
Dialogue: 0,0:53:38.54,0:53:40.30,Chinese,,0,0,0,,但在它面前，一切都是标题
Dialogue: 0,0:53:40.64,0:53:48.50,English,,0,0,0,,That contains other stuff that is of some range of interest of whether you really care
Dialogue: 0,0:53:40.64,0:53:48.50,Chinese,,0,0,0,,这包含了你是否真正关心的其他一些感兴趣的东西
Dialogue: 0,0:53:49.22,0:53:58.16,English,,0,0,0,,Not it can also come back with a response that says there's an error code as you know the infamous 404 error code
Dialogue: 0,0:53:49.22,0:53:58.16,Chinese,,0,0,0,,不是它也可以返回一个响应，说明有一个错误代码，因为你知道臭名昭着的404错误代码
Dialogue: 0,0:54:01.96,0:54:03.64,English,,0,0,0,,So let me give you a demo
Dialogue: 0,0:54:01.96,0:54:03.64,Chinese,,0,0,0,,那么让我给你一个演示
Dialogue: 0,0:54:05.38,0:54:11.16,English,,0,0,0,,Of this just so we're talking a little abstract
Dialogue: 0,0:54:05.38,0:54:11.16,Chinese,,0,0,0,,对此我们说的有点抽象
Dialogue: 0,0:54:13.60,0:54:15.66,English,,0,0,0,,And this is a little tricky to make it work
Dialogue: 0,0:54:13.60,0:54:15.66,Chinese,,0,0,0,,让它运作起来有点棘手
Dialogue: 0,0:54:18.28,0:54:21.44,English,,0,0,0,,And I'll use auto telnet as a way to probe a web server
Dialogue: 0,0:54:18.28,0:54:21.44,Chinese,,0,0,0,,我将使用auto telnet作为探测Web服务器的方法
Dialogue: 0,0:54:29.22,0:54:36.34,English,,0,0,0,,So I'll make a telnet connection to the computer science departments a web server
Dialogue: 0,0:54:29.22,0:54:36.34,Chinese,,0,0,0,,所以我将telnet连接到计算机科学部门的Web服务器
Dialogue: 0,0:54:36.96,0:54:39.38,English,,0,0,0,,And now I need to make a get request
Dialogue: 0,0:54:36.96,0:54:39.38,Chinese,,0,0,0,,现在我需要提出一个get请求
Dialogue: 0,0:54:40.94,0:54:45.86,English,,0,0,0,,This remember it all it is now I'm basically providing the exact bytes
Dialogue: 0,0:54:40.94,0:54:45.86,Chinese,,0,0,0,,这就记住它现在我基本上提供了确切的字节
Dialogue: 0,0:54:46.00,0:54:59.08,English,,0,0,0,,That will be seen by the web server so if I say GET /~bryant/test.html see if this really works
Dialogue: 0,0:54:46.00,0:54:59.08,Chinese,,0,0,0,,这将由Web服务器看到，所以如果我说GET /〜bryant/test.html看看这是否真的有效
Dialogue: 0,0:55:12.62,0:55:13.42,English,,0,0,0,,Hot worked
Dialogue: 0,0:55:12.62,0:55:13.42,Chinese,,0,0,0,,热的工作
Dialogue: 0,0:55:16.96,0:55:19.52,English,,0,0,0,,I'm always surprised when things actually work
Dialogue: 0,0:55:16.96,0:55:19.52,Chinese,,0,0,0,,事情确实有效，我总是感到惊讶
Dialogue: 0,0:55:21.56,0:55:24.14,English,,0,0,0,,Ah so anyways let's just look at what happened
Dialogue: 0,0:55:21.56,0:55:24.14,Chinese,,0,0,0,,啊，不管怎样，让我们​​看看发生了什么
Dialogue: 0,0:55:26.48,0:55:28.66,English,,0,0,0,,So at the top is what I typed in
Dialogue: 0,0:55:26.48,0:55:28.66,Chinese,,0,0,0,,所以在顶部是我输入的内容
Dialogue: 0,0:55:29.28,0:55:35.02,English,,0,0,0,,It's getting and this I'm giving some the name of a particular web page that
Dialogue: 0,0:55:29.28,0:55:35.02,Chinese,,0,0,0,,它已经到了，我正在给出一些特定网页的名称
Dialogue: 0,0:55:35.18,0:55:39.16,English,,0,0,0,,I made up just for this purpose a fairly simple web page
Dialogue: 0,0:55:35.18,0:55:39.16,Chinese,,0,0,0,,我为此目的编写了一个相当简单的网页
Dialogue: 0,0:55:39.54,0:55:46.18,English,,0,0,0,,And I'm telling it, I want the response in the http 1.1 format
Dialogue: 0,0:55:39.54,0:55:46.18,Chinese,,0,0,0,,我告诉它，我想要http 1.1格式的响应
Dialogue: 0,0:55:46.64,0:55:50.96,English,,0,0,0,,And then I have to also give a hostname explicitly and the reason for this is
Dialogue: 0,0:55:46.64,0:55:50.96,Chinese,,0,0,0,,然后我还必须明确地给出一个主机名，原因是这样
Dialogue: 0,0:55:51.34,0:55:56.64,English,,0,0,0,,I given machine can actually be a serve multiple hosts
Dialogue: 0,0:55:51.34,0:55:56.64,Chinese,,0,0,0,,我给机器实际上可以服务多个主机
Dialogue: 0,0:55:57.50,0:56:06.64,English,,0,0,0,,Like if you know I want to pay for a hosting of some domain name of say to godaddy.com
Dialogue: 0,0:55:57.50,0:56:06.64,Chinese,,0,0,0,,就像你知道我想要为godaddy.com支付托管的一些域名一样
Dialogue: 0,0:56:07.36,0:56:11.00,English,,0,0,0,,But it's serving hundreds or thousands of different domain names
Dialogue: 0,0:56:07.36,0:56:11.00,Chinese,,0,0,0,,但它提供数百或数千个不同的域名
Dialogue: 0,0:56:11.00,0:56:15.60,English,,0,0,0,,And so it actually used that host information to figure out oh which particular web
Dialogue: 0,0:56:11.00,0:56:15.60,Chinese,,0,0,0,,所以它实际上使用该主机信息来弄清楚哪个特定网络
Dialogue: 0,0:56:16.34,0:56:18.54,English,,0,0,0,,You know customer am I supporting here
Dialogue: 0,0:56:16.34,0:56:18.54,Chinese,,0,0,0,,你知道客户我在这里支持
Dialogue: 0,0:56:19.44,0:56:21.70,English,,0,0,0,,Ok and now it came back with its response
Dialogue: 0,0:56:19.44,0:56:21.70,Chinese,,0,0,0,,好的，现在又回来了
Dialogue: 0,0:56:22.38,0:56:28.28,English,,0,0,0,,And it said the code 200 means that was accepted which it tells you ok
Dialogue: 0,0:56:22.38,0:56:28.28,Chinese,,0,0,0,,并且它说代码200表示被接受，它告诉你好
Dialogue: 0,0:56:28.76,0:56:31.88,English,,0,0,0,,And now it comes back with this is the header information that says
Dialogue: 0,0:56:28.76,0:56:31.88,Chinese,,0,0,0,,现在又回来了，这是标题信息
Dialogue: 0,0:56:32.30,0:56:37.20,English,,0,0,0,,Here's the date here the server,here's some cookie information
Dialogue: 0,0:56:32.30,0:56:37.20,Chinese,,0,0,0,,这是服务器的日期，这里是一些cookie信息
Dialogue: 0,0:56:38.66,0:56:43.52,English,,0,0,0,,It's a the overall content is exactly 479 bytes
Dialogue: 0,0:56:38.66,0:56:43.52,Chinese,,0,0,0,,它的总体内容正好是479个字节
Dialogue: 0,0:56:44.24,0:56:46.74,English,,0,0,0,,And it's a text html format
Dialogue: 0,0:56:44.24,0:56:46.74,Chinese,,0,0,0,,它是一种文本html格式
Dialogue: 0,0:56:47.46,0:56:51.16,English,,0,0,0,,And then it will return back the raw html
Dialogue: 0,0:56:47.46,0:56:51.16,Chinese,,0,0,0,,然后它将返回原始html
Dialogue: 0,0:56:52.14,0:56:55.70,English,,0,0,0,,That this web page had
Dialogue: 0,0:56:52.14,0:56:55.70,Chinese,,0,0,0,,这个网页有
Dialogue: 0,0:56:56.24,0:57:00.94,English,,0,0,0,,Which is what I actually you know I type that I did this by hand
Dialogue: 0,0:56:56.24,0:57:00.94,Chinese,,0,0,0,,这就是我实际上你知道的，我输入的是我手工完成的
Dialogue: 0,0:57:00.94,0:57:04.12,English,,0,0,0,,But you can imagine other types of things
Dialogue: 0,0:57:00.94,0:57:04.12,Chinese,,0,0,0,,但你可以想象其他类型的东西
Dialogue: 0,0:57:04.92,0:57:07.46,English,,0,0,0,,And then it just closes the connection
Dialogue: 0,0:57:04.92,0:57:07.46,Chinese,,0,0,0,,然后它就会关闭连接
Dialogue: 0,0:57:08.04,0:57:16.04,English,,0,0,0,,So you can see that this return both the header information and the actual content information as well
Dialogue: 0,0:57:08.04,0:57:16.04,Chinese,,0,0,0,,因此，你可以看到它同时返回标头信息和实际内容信息
Dialogue: 0,0:57:16.94,0:57:21.32,English,,0,0,0,,And so that's the general idea of what an http transaction looks like
Dialogue: 0,0:57:16.94,0:57:21.32,Chinese,,0,0,0,,这就是http事务的概念
Dialogue: 0,0:57:22.40,0:57:25.28,English,,0,0,0,,And the slides go through a different version of it
Dialogue: 0,0:57:22.40,0:57:25.28,Chinese,,0,0,0,,幻灯片通过不同的版本
Dialogue: 0,0:57:25.92,0:57:27.46,English,,0,0,0,,But it's the same general idea
Dialogue: 0,0:57:25.92,0:57:27.46,Chinese,,0,0,0,,但这是一般的想法
Dialogue: 0,0:57:32.70,0:57:40.18,English,,0,0,0,,So the text has a really interesting code that I highly recommend you read and study called tiny
Dialogue: 0,0:57:32.70,0:57:40.18,Chinese,,0,0,0,,因此，该文本有一个非常有趣的代码，我强烈建议你阅读和研究称为tiny
Dialogue: 0,0:57:40.18,0:57:45.10,English,,0,0,0,,Which is the world's smallest functioning web server
Dialogue: 0,0:57:40.18,0:57:45.10,Chinese,,0,0,0,,哪个是世界上功能最小的Web服务器
Dialogue: 0,0:57:45.84,0:57:50.50,English,,0,0,0,,And what it's really only a couple pages of code
Dialogue: 0,0:57:45.84,0:57:50.50,Chinese,,0,0,0,,它实际上只有几页代码
Dialogue: 0,0:57:50.92,0:57:55.78,English,,0,0,0,,It serves it says some very basic handling of static and dynamic content
Dialogue: 0,0:57:50.92,0:57:55.78,Chinese,,0,0,0,,它提供了静态和动态内容的一些非常基本的处理
Dialogue: 0,0:57:58.24,0:58:03.04,English,,0,0,0,,It's something you can sit down and read and study 239 lines of code
Dialogue: 0,0:57:58.24,0:58:03.04,Chinese,,0,0,0,,这是你可以坐下来阅读和研究239行代码的东西
Dialogue: 0,0:58:03.82,0:58:08.36,English,,0,0,0,,Now it lacks a lot of features it does very bad job of handling errors
Dialogue: 0,0:58:03.82,0:58:08.36,Chinese,,0,0,0,,现在它缺乏很多功能，它处理错误的工作非常糟糕
Dialogue: 0,0:58:09.22,0:58:13.28,English,,0,0,0,,It doesn't have a lot of the functionality you'd come to expect on a server
Dialogue: 0,0:58:09.22,0:58:13.28,Chinese,,0,0,0,,它没有很多你在服务器上期望的功能
Dialogue: 0,0:58:13.34,0:58:18.49,English,,0,0,0,,So it's been stripped down to the sort of barriss bones to demonstrate the the concepts
Dialogue: 0,0:58:13.34,0:58:18.49,Chinese,,0,0,0,,所以它被剥离到了那些barriss骨头来展示这些概念
Dialogue: 0,0:58:19.46,0:58:22.58,English,,0,0,0,,But it's pretty cool that it works and I can say this because I didn't write it
Dialogue: 0,0:58:19.46,0:58:22.58,Chinese,,0,0,0,,但它的工作非常酷，我可以说这是因为我没有写它
Dialogue: 0,0:58:22.82,0:58:23.14,English,,0,0,0,,So
Dialogue: 0,0:58:22.82,0:58:23.14,Chinese,,0,0,0,,所以
Dialogue: 0,0:58:26.18,0:58:29.84,English,,0,0,0,,So the overall idea then is on the cert it's a server
Dialogue: 0,0:58:26.18,0:58:29.84,Chinese,,0,0,0,,因此，总体思路是证书，它是一个服务器
Dialogue: 0,0:58:29.98,0:58:33.20,English,,0,0,0,,So it's receiving requests from clients from browsers
Dialogue: 0,0:58:29.98,0:58:33.20,Chinese,,0,0,0,,所以它接收来自浏览器的客户端的请求
Dialogue: 0,0:58:33.78,0:58:42.44,English,,0,0,0,,Saying I want this web page or I want to execute this particular dynamic program to get dynamic content
Dialogue: 0,0:58:33.78,0:58:42.44,Chinese,,0,0,0,,说我想要这个网页，或者我想执行这个特定的动态程序来获取动态内容
Dialogue: 0,0:58:43.18,0:58:47.08,English,,0,0,0,,So it comes in with a request get requests like you just saw
Dialogue: 0,0:58:43.18,0:58:47.08,Chinese,,0,0,0,,所以它提供了一个请求获取请求，就像你刚刚看到的那样
Dialogue: 0,0:58:47.52,0:58:52.98,English,,0,0,0,,And it splits that it picks out the what's called the uri
Dialogue: 0,0:58:47.52,0:58:52.98,Chinese,,0,0,0,,它分裂，它挑选出所谓的uri
Dialogue: 0,0:58:53.52,0:58:58.70,English,,0,0,0,,The argument to the get request a uri is a universal resource indicator
Dialogue: 0,0:58:53.52,0:58:58.70,Chinese,,0,0,0,,get请求的参数uri是一个通用资源指示符
Dialogue: 0,0:58:59.66,0:59:06.74,English,,0,0,0,,Which is not a complete potential uris are a super set of urls
Dialogue: 0,0:58:59.66,0:59:06.74,Chinese,,0,0,0,,这不是一个完整的潜在的uris是一组超级网址
Dialogue: 0,0:59:06.76,0:59:12.18,English,,0,0,0,,Url has to include the hostname and all the information to get from anywhere to anywhere
Dialogue: 0,0:59:06.76,0:59:12.18,Chinese,,0,0,0,,Url必须包含主机名和从任何地方到任何地方的所有信息
Dialogue: 0,0:59:13.20,0:59:16.54,English,,0,0,0,,But a uri can just be a portion of that information
Dialogue: 0,0:59:13.20,0:59:16.54,Chinese,,0,0,0,,但是，uri只能成为该信息的一部分
Dialogue: 0,0:59:17.93,0:59:23.64,English,,0,0,0,,And then it will determine is this a request for static or dynamic content
Dialogue: 0,0:59:17.93,0:59:23.64,Chinese,,0,0,0,,然后它将确定这是对静态或动态内容的请求
Dialogue: 0,0:59:23.92,0:59:26.08,English,,0,0,0,,I'll show you both of them hopefully
Dialogue: 0,0:59:23.92,0:59:26.08,Chinese,,0,0,0,,我希望能告诉你们他们两个
Dialogue: 0,0:59:27.00,0:59:31.74,English,,0,0,0,,And if it's a static content all it has to do is retrieve a file on its own machine
Dialogue: 0,0:59:27.00,0:59:31.74,Chinese,,0,0,0,,如果它是静态内容，它所要做的就是在自己的机器上检索文件
Dialogue: 0,0:59:32.70,0:59:35.10,English,,0,0,0,,Send that back in that format that I just showed you
Dialogue: 0,0:59:32.70,0:59:35.10,Chinese,,0,0,0,,以我刚刚向你展示的格式发回
Dialogue: 0,0:59:36.00,0:59:36.78,English,,0,0,0,,So let's take a look
Dialogue: 0,0:59:36.00,0:59:36.78,Chinese,,0,0,0,,那我们来看看吧
Dialogue: 0,0:59:38.03,0:59:42.34,English,,0,0,0,,So this is sort of the guts of the static server
Dialogue: 0,0:59:38.03,0:59:42.34,Chinese,,0,0,0,,所以这是静态服务器的内核
Dialogue: 0,0:59:43.74,0:59:46.38,English,,0,0,0,,So what it's done is its received a request
Dialogue: 0,0:59:43.74,0:59:46.38,Chinese,,0,0,0,,所以它完成的是它收到了一个请求
Dialogue: 0,0:59:46.96,0:59:50.74,English,,0,0,0,,This is you know a function a helper function of this code
Dialogue: 0,0:59:46.96,0:59:50.74,Chinese,,0,0,0,,这是你知道一个函数这个代码的辅助函数
Dialogue: 0,0:59:50.76,0:59:52.48,English,,0,0,0,,So I'm kind of buried down in the middle
Dialogue: 0,0:59:50.76,0:59:52.48,Chinese,,0,0,0,,所以我有点被埋在中间
Dialogue: 0,0:59:53.06,1:00:02.90,English,,0,0,0,,But what it's picked out is the server has received a request for a particular file name from the uri
Dialogue: 0,0:59:53.06,1:00:02.90,Chinese,,0,0,0,,但它挑选出来的是服务器收到了来自uri的特定文件名的请求
Dialogue: 0,1:00:03.64,1:00:08.72,English,,0,0,0,,And it's also done a look up through the OS call
Dialogue: 0,1:00:03.64,1:00:08.72,Chinese,,0,0,0,,它也通过操作系统调用查看
Dialogue: 0,1:00:09.10,1:00:12.26,English,,0,0,0,,How big is that file how many bytes long is that file
Dialogue: 0,1:00:09.10,1:00:12.26,Chinese,,0,0,0,,该文件有多大，该文件的长度是多少
Dialogue: 0,1:00:12.86,1:00:15.90,English,,0,0,0,,And it's also given the file descriptor that
Dialogue: 0,1:00:12.86,1:00:15.90,Chinese,,0,0,0,,它还给出了文件描述符
Dialogue: 0,1:00:16.56,1:00:20.10,English,,0,0,0,,Is the connect it the file descriptor for this particular connection
Dialogue: 0,1:00:16.56,1:00:20.10,Chinese,,0,0,0,,是连接它是这个特定连接的文件描述符
Dialogue: 0,1:00:21.18,1:00:26.00,English,,0,0,0,,So all it's doing here you'll notice is it's doing a bunch of spirit ups into a buffer
Dialogue: 0,1:00:21.18,1:00:26.00,Chinese,,0,0,0,,所以它在这里所做的一切你都会注意到它是在做一堆精神上升到一个缓冲区
Dialogue: 0,1:00:26.78,1:00:31.18,English,,0,0,0,,And what it's doing there is its formatting the header information
Dialogue: 0,1:00:26.78,1:00:31.18,Chinese,,0,0,0,,而它正在做的是它格式化标题信息
Dialogue: 0,1:00:31.54,1:00:37.98,English,,0,0,0,,As a byte is just a big long string including the returns in it
Dialogue: 0,1:00:31.54,1:00:37.98,Chinese,,0,0,0,,因为一个字节只是一个很长的字符串，包括其中的返回值
Dialogue: 0,1:00:38.48,1:00:46.36,English,,0,0,0,,And one of the features which don't ask me why the great wisdom of Tim Berners Lee
Dialogue: 0,1:00:38.48,1:00:46.36,Chinese,,0,0,0,,并且其中一个功能并没有问我为什么Tim Berners Lee的伟大智慧
Dialogue: 0,1:00:46.38,1:00:54.08,English,,0,0,0,,We did or whoever figured this out but every line has to finish with both a carriage return and a new line
Dialogue: 0,1:00:46.38,1:00:54.08,Chinese,,0,0,0,,我们做过或者想过这个但是每一行都必须以回车和新线完成
Dialogue: 0,1:00:54.08,1:00:57.36,English,,0,0,0,,Instead of the usual Linux thing of just new lines
Dialogue: 0,1:00:54.08,1:00:57.36,Chinese,,0,0,0,,而不是通常的Linux只是新线
Dialogue: 0,1:00:58.02,1:01:00.56,English,,0,0,0,,So that's what the \r \ n
Dialogue: 0,1:00:58.02,1:01:00.56,Chinese,,0,0,0,,这就是\ r \ n
Dialogue: 0,1:01:01.12,1:01:05.34,English,,0,0,0,,Means but you'll see it's going to respond back to with an okay
Dialogue: 0,1:01:01.12,1:01:05.34,Chinese,,0,0,0,,意味着但你会看到它会回复一个没问题
Dialogue: 0,1:01:05.92,1:01:09.56,English,,0,0,0,,And some of this kind of information that's not very exciting
Dialogue: 0,1:01:05.92,1:01:09.56,Chinese,,0,0,0,,还有一些不太令人兴奋的信息
Dialogue: 0,1:01:10.18,1:01:18.94,English,,0,0,0,,But the ones that really matter are...the lengths the in bytes that has to be given
Dialogue: 0,1:01:10.18,1:01:18.94,Chinese,,0,0,0,,但真正重要的是......必须给出的字节长度
Dialogue: 0,1:01:19.76,1:01:23.56,English,,0,0,0,,And the type ones beginning this file type
Dialogue: 0,1:01:19.76,1:01:23.56,Chinese,,0,0,0,,并且类型以此文件类型开头
Dialogue: 0,1:01:24.22,1:01:27.92,English,,0,0,0,,Oh there's another function oh I remember why
Dialogue: 0,1:01:24.22,1:01:27.92,Chinese,,0,0,0,,哦，还有另外一个功能哦，我记得为什么
Dialogue: 0,1:01:29.24,1:01:37.42,English,,0,0,0,,There's a another helper function here that because this supports not just text but also gif and jpeg images
Dialogue: 0,1:01:29.24,1:01:37.42,Chinese,,0,0,0,,这里有另一个辅助函数，因为它不仅支持文本，还支持gif和jpeg图像
Dialogue: 0,1:01:38.20,1:01:49.08,English,,0,0,0,,So get file type is another function somewhere else that's telling which a mime type is this particular file
Dialogue: 0,1:01:38.20,1:01:49.08,Chinese,,0,0,0,,所以获取文件类型是其他地方的另一个函数，它告诉mime类型是哪个特定文件
Dialogue: 0,1:01:50.42,1:01:52.46,English,,0,0,0,,And so it's putting that together
Dialogue: 0,1:01:50.42,1:01:52.46,Chinese,,0,0,0,,所以它把它们放在一起
Dialogue: 0,1:01:53.90,1:01:57.30,English,,0,0,0,,And it's and now write set out
Dialogue: 0,1:01:53.90,1:01:57.30,Chinese,,0,0,0,,它现在已经开始写了
Dialogue: 0,1:01:58.16,1:02:07.70,English,,0,0,0,,So it writes the header information out to the client
Dialogue: 0,1:01:58.16,1:02:07.70,Chinese,,0,0,0,,因此它将头信息写入客户端
Dialogue: 0,1:02:08.64,1:02:10.70,English,,0,0,0,,So it's sending back to the client
Dialogue: 0,1:02:08.64,1:02:10.70,Chinese,,0,0,0,,所以它会发回客户端
Dialogue: 0,1:02:11.56,1:02:18.42,English,,0,0,0,,And then it's going through a few gyrations here to get the file open it up
Dialogue: 0,1:02:11.56,1:02:18.42,Chinese,,0,0,0,,然后它会在这里进行一些旋转以使文件打开
Dialogue: 0,1:02:18.96,1:02:20.86,English,,0,0,0,,And then there's a function called Mmap
Dialogue: 0,1:02:18.96,1:02:20.86,Chinese,,0,0,0,,然后是一个名为Mmap的函数
Dialogue: 0,1:02:21.34,1:02:22.64,English,,0,0,0,,If you guys covered them up
Dialogue: 0,1:02:21.34,1:02:22.64,Chinese,,0,0,0,,如果你们覆盖了他们
Dialogue: 0,1:02:23.68,1:02:29.18,English,,0,0,0,,Yet know which is just a tricky way to avoid having to actually read the file into the machine
Dialogue: 0,1:02:23.68,1:02:29.18,Chinese,,0,0,0,,然而，知道哪种方法可以避免必须将文件实际读入机器
Dialogue: 0,1:02:30.02,1:02:40.54,English,,0,0,0,,But basically be able to pass off a pointer directly to or into the read it
Dialogue: 0,1:02:30.02,1:02:40.54,Chinese,,0,0,0,,但基本上能够直接将指针传递给读取它
Dialogue: 0,1:02:40.54,1:02:46.08,English,,0,0,0,,Through explicit read commands into yet another buffer just avoids one step of buffering
Dialogue: 0,1:02:40.54,1:02:46.08,Chinese,,0,0,0,,通过显式读取命令进入另一个缓冲区只需避免一步缓冲
Dialogue: 0,1:02:46.64,1:02:54.44,English,,0,0,0,,So all it does is map then of from the operating system where this particular file is located
Dialogue: 0,1:02:46.64,1:02:54.44,Chinese,,0,0,0,,所以它所做的就是从这个特定文件所在的操作系统映射
Dialogue: 0,1:02:56.16,1:03:01.56,English,,0,0,0,,And then writes that so now it's sending it off to the client
Dialogue: 0,1:02:56.16,1:03:01.56,Chinese,,0,0,0,,然后写道，所以现在它将它发送给客户端
Dialogue: 0,1:03:02.66,1:03:06.12,English,,0,0,0,,And so this could be done with a regular read in a
Dialogue: 0,1:03:02.66,1:03:06.12,Chinese,,0,0,0,,所以这可以通过定期读取来完成
Dialogue: 0,1:03:06.78,1:03:09.86,English,,0,0,0,,But this is a little bit more elegant way to handle it
Dialogue: 0,1:03:06.78,1:03:09.86,Chinese,,0,0,0,,但这是处理它的一种更优雅的方式
Dialogue: 0,1:03:10.56,1:03:17.40,English,,0,0,0,,And you'll notice by the way that the content length here is the length of the file
Dialogue: 0,1:03:10.56,1:03:17.40,Chinese,,0,0,0,,你会注意到这里的内容长度是文件的长度
Dialogue: 0,1:03:17.66,1:03:22.46,English,,0,0,0,,The and not does not include the number of bytes in the header so the header comes first
Dialogue: 0,1:03:17.66,1:03:22.46,Chinese,,0,0,0,,并且不包括标题中的字节数，因此标题首先出现
Dialogue: 0,1:03:23.30,1:03:27.66,English,,0,0,0,,There's no length associated with it that so sent back
Dialogue: 0,1:03:23.30,1:03:27.66,Chinese,,0,0,0,,它没有与之相关的长度
Dialogue: 0,1:03:28.10,1:03:33.20,English,,0,0,0,,But now the only way that the client knows exactly how many bytes
Dialogue: 0,1:03:28.10,1:03:33.20,Chinese,,0,0,0,,但现在客户端确切知道多少字节的唯一方法
Dialogue: 0,1:03:33.86,1:03:43.98,English,,0,0,0,,That response is going to be is by picking out this number in the header and reading that many bytes from it
Dialogue: 0,1:03:33.86,1:03:43.98,Chinese,,0,0,0,,那个响应将是通过在标题中选择这个数字并从中读取那么多字节来实现的
Dialogue: 0,1:03:43.98,1:03:44.82,English,,0,0,0,,We'll see that in a minute
Dialogue: 0,1:03:43.98,1:03:44.82,Chinese,,0,0,0,,我们马上就会看到
Dialogue: 0,1:03:45.54,1:03:47.68,English,,0,0,0,,But anyways this is the way a file gets sent
Dialogue: 0,1:03:45.54,1:03:47.68,Chinese,,0,0,0,,但无论如何这是文件发送的方式
Dialogue: 0,1:03:50.44,1:03:53.04,English,,0,0,0,,So now let's just real quickly look at dynamic content
Dialogue: 0,1:03:50.44,1:03:53.04,Chinese,,0,0,0,,所以，现在让我们快速看看动态内容
Dialogue: 0,1:03:53.20,1:03:58.86,English,,0,0,0,,So the idea of dynamic content is it lets you pass in parameters to a program
Dialogue: 0,1:03:53.20,1:03:58.86,Chinese,,0,0,0,,所以动态内容的概念是它允许你将参数传递给程序
Dialogue: 0,1:03:59.68,1:04:02.84,English,,0,0,0,,That then gets executed and the purpose that
Dialogue: 0,1:03:59.68,1:04:02.84,Chinese,,0,0,0,,然后执行和目的
Dialogue: 0,1:04:03.30,1:04:09.58,English,,0,0,0,,What that program then has to do is compose a web page and send that web page back you
Dialogue: 0,1:04:03.30,1:04:09.58,Chinese,,0,0,0,,那么该程序必须做的是撰写一个网页并将该网页发回给你
Dialogue: 0,1:04:10.22,1:04:14.08,English,,0,0,0,,So I'm going to demo this with a feature built into here
Dialogue: 0,1:04:10.22,1:04:14.08,Chinese,,0,0,0,,所以我将使用此处内置的功能演示此功能
Dialogue: 0,1:04:31.04,1:04:32.78,English,,0,0,0,,So in particular
Dialogue: 0,1:04:31.04,1:04:32.78,Chinese,,0,0,0,,特别是
Dialogue: 0,1:04:34.76,1:04:40.82,English,,0,0,0,,You probably can't you can barely see them I don't have a good way to blow up the thing
Dialogue: 0,1:04:34.76,1:04:40.82,Chinese,,0,0,0,,你可能不能，你几乎看不到他们我没有一个好方法来炸毁这件事
Dialogue: 0,1:04:41.44,1:04:46.42,English,,0,0,0,,But the you can also see what kind of things I look at but anyways
Dialogue: 0,1:04:41.44,1:04:46.42,Chinese,,0,0,0,,但你也可以看到我看到的是什么样的东西，但无论如何
Dialogue: 0,1:04:47.94,1:04:54.96,English,,0,0,0,,If I just say localhost:15213 that means port number 15213 on my local machine
Dialogue: 0,1:04:47.94,1:04:54.96,Chinese,,0,0,0,,如果我只说localhost：15213，这意味着我本地机器上的端口号为15213
Dialogue: 0,1:04:55.48,1:04:57.72,English,,0,0,0,,Which is currently running the tiny web server
Dialogue: 0,1:04:55.48,1:04:57.72,Chinese,,0,0,0,,目前正在运行微型Web服务器
Dialogue: 0,1:04:58.56,1:05:04.86,English,,0,0,0,,And the only webpage available for it is this rather stunning figure here
Dialogue: 0,1:04:58.56,1:05:04.86,Chinese,,0,0,0,,唯一可用的网页是这个相当惊人的数字
Dialogue: 0,1:05:05.38,1:05:10.74,English,,0,0,0,,But it shows that it can handle both gif content and text html
Dialogue: 0,1:05:05.38,1:05:10.74,Chinese,,0,0,0,,但它表明它可以处理gif内容和文本html
Dialogue: 0,1:05:15.28,1:05:16.98,English,,0,0,0,,But it also supports
Dialogue: 0,1:05:15.28,1:05:16.98,Chinese,,0,0,0,,但它也支持
Dialogue: 0,1:05:18.22,1:05:23.22,English,,0,0,0,,Another interesting feature which is a program that can add two numbers
Dialogue: 0,1:05:18.22,1:05:23.22,Chinese,,0,0,0,,另一个有趣的功能是可以添加两个数字的程序
Dialogue: 0,1:05:24.80,1:05:26.84,English,,0,0,0,,Called add.com
Dialogue: 0,1:05:24.80,1:05:26.84,Chinese,,0,0,0,,叫做add.com
Dialogue: 0,1:05:27.20,1:05:30.88,English,,0,0,0,,So our idea for a startup company that didn't quite make it so
Dialogue: 0,1:05:27.20,1:05:30.88,Chinese,,0,0,0,,所以我们对一家创业公司的想法并没有那么做
Dialogue: 0,1:05:32.72,1:05:34.00,English,,0,0,0,,So in particular
Dialogue: 0,1:05:32.72,1:05:34.00,Chinese,,0,0,0,,特别是
Dialogue: 0,1:05:37.02,1:05:42.18,English,,0,0,0,,That the idea of this is it's a cgi program,it's a dynamic content
Dialogue: 0,1:05:37.02,1:05:42.18,Chinese,,0,0,0,,这个想法是它是一个cgi程序，它是一个动态的内容
Dialogue: 0,1:05:42.40,1:05:44.50,English,,0,0,0,,So that I passing two numbers
Dialogue: 0,1:05:42.40,1:05:44.50,Chinese,,0,0,0,,所以我传了两个号码
Dialogue: 0,1:05:45.24,1:05:47.80,English,,0,0,0,,Embedded within the url my request
Dialogue: 0,1:05:45.24,1:05:47.80,Chinese,,0,0,0,,在我的请求中嵌入了url
Dialogue: 0,1:05:48.70,1:05:53.72,English,,0,0,0,,And it comes back with a web page that is beautifully formatted like this one
Dialogue: 0,1:05:48.70,1:05:53.72,Chinese,,0,0,0,,它带来了一个网页，其格式就像这样
Dialogue: 0,1:05:54.72,1:06:00.34,English,,0,0,0,,So you can't see very well maybe but if you look up there the teeny tiny print at the top
Dialogue: 0,1:05:54.72,1:06:00.34,Chinese,,0,0,0,,因此，你可能看不太清楚，但如果你在那里看到顶部的小小字体
Dialogue: 0,1:06:02.44,1:06:09.58,English,,0,0,0,,You will localhost:15213 that's the web server and /cgi-bin that's
Dialogue: 0,1:06:02.44,1:06:09.58,Chinese,,0,0,0,,你将localhost：15213这是web服务器和/ cgi-bin
Dialogue: 0,1:06:10.30,1:06:15.22,English,,0,0,0,,What this particular server and what most servers do for interpreting dynamic content
Dialogue: 0,1:06:10.30,1:06:15.22,Chinese,,0,0,0,,这个特定的服务器和大多数服务器用于解释动态内容的功能
Dialogue: 0,1:06:16.00,1:06:19.54,English,,0,0,0,,And then a program it's an executable file called adder
Dialogue: 0,1:06:16.00,1:06:19.54,Chinese,,0,0,0,,然后一个程序，它是一个名为adder的可执行文件
Dialogue: 0,1:06:20.52,1:06:25.88,English,,0,0,0,,And then the argument string that you embed in this kind of curious way the question mark
Dialogue: 0,1:06:20.52,1:06:25.88,Chinese,,0,0,0,,然后是你以这种奇怪的方式嵌入问号的参数字符串
Dialogue: 0,1:06:26.34,1:06:29.42,English,,0,0,0,,And then use ampersands to separate out the different fields
Dialogue: 0,1:06:26.34,1:06:29.42,Chinese,,0,0,0,,然后使用＆符号分隔出不同的字段
Dialogue: 0,1:06:30.96,1:06:35.48,English,,0,0,0,,So that's all pretty a standard way of handling dynamic content
Dialogue: 0,1:06:30.96,1:06:35.48,Chinese,,0,0,0,,所以这都是处理动态内容的标准方法
Dialogue: 0,1:06:36.04,1:06:39.32,English,,0,0,0,,And as I said nowadays there's a lot fancier ways of doing it
Dialogue: 0,1:06:36.04,1:06:39.32,Chinese,,0,0,0,,正如我现在所说的，有很多更好的方法
Dialogue: 0,1:06:39.32,1:06:41.68,English,,0,0,0,,But that's sort of the basic way
Dialogue: 0,1:06:39.32,1:06:41.68,Chinese,,0,0,0,,但这是基本的方式
Dialogue: 0,1:06:41.68,1:06:43.46,English,,0,0,0,,And you'll see it's still getting used today
Dialogue: 0,1:06:41.68,1:06:43.46,Chinese,,0,0,0,,你会发现它今天仍在使用
Dialogue: 0,1:06:46.22,1:06:51.74,English,,0,0,0,,So imagine that this time it's a get request
Dialogue: 0,1:06:46.22,1:06:51.74,Chinese,,0,0,0,,所以想象一下这次是获取请求
Dialogue: 0,1:06:51.82,1:06:58.66,English,,0,0,0,,But instead of the adder function at some other perl program that is sitting on the server somewhere called env
Dialogue: 0,1:06:51.82,1:06:58.66,Chinese,,0,0,0,,但是在某个名为env的服务器上的某个其他perl程序中，不是加法器函数
Dialogue: 0,1:06:59.26,1:07:03.36,English,,0,0,0,,And we won't worry about what that program does, we'll just show you the idea behind it
Dialogue: 0,1:06:59.26,1:07:03.36,Chinese,,0,0,0,,我们不会担心该程序的功能，我们只会向你展示它背后的想法
Dialogue: 0,1:07:04.02,1:07:08.34,English,,0,0,0,,So in particular there's a get request comes in and it says cgi-bin
Dialogue: 0,1:07:04.02,1:07:08.34,Chinese,,0,0,0,,所以特别是有一个get请求进来，它说cgi-bin
Dialogue: 0,1:07:09.10,1:07:13.48,English,,0,0,0,,And then the next argument is interpreted as the name of a file
Dialogue: 0,1:07:09.10,1:07:13.48,Chinese,,0,0,0,,然后将下一个参数解释为文件的名称
Dialogue: 0,1:07:15.56,1:07:20.98,English,,0,0,0,,And what will happen then is that the server will spawn off a process
Dialogue: 0,1:07:15.56,1:07:20.98,Chinese,,0,0,0,,然后会发生什么，服务器将产生一个进程
Dialogue: 0,1:07:32.10,1:07:34.06,English,,0,0,0,,Using our friends fork and exec
Dialogue: 0,1:07:32.10,1:07:34.06,Chinese,,0,0,0,,使用我们的朋友fork和exec
Dialogue: 0,1:07:35.14,1:07:36.70,English,,0,0,0,,Which you know so well now
Dialogue: 0,1:07:35.14,1:07:36.70,Chinese,,0,0,0,,你现在知道的很好
Dialogue: 0,1:07:37.98,1:07:40.24,English,,0,0,0,,Doing the shell web so
Dialogue: 0,1:07:37.98,1:07:40.24,Chinese,,0,0,0,,这样做shell网
Dialogue: 0,1:07:40.86,1:07:46.06,English,,0,0,0,,And that program will execute of will execute
Dialogue: 0,1:07:40.86,1:07:46.06,Chinese,,0,0,0,,该程序将执行将执行
Dialogue: 0,1:07:47.00,1:07:56.16,English,,0,0,0,,And it will its job then is to generate a file in html format
Dialogue: 0,1:07:47.00,1:07:56.16,Chinese,,0,0,0,,然后它的工作就是以html格式生成一个文件
Dialogue: 0,1:07:56.92,1:08:00.00,English,,0,0,0,,And then the server will send the result back to the client
Dialogue: 0,1:07:56.92,1:08:00.00,Chinese,,0,0,0,,然后服务器将结果发送回客户端
Dialogue: 0,1:08:05.60,1:08:09.42,English,,0,0,0,,So there's a few details we got to figure out to make this work
Dialogue: 0,1:08:05.60,1:08:09.42,Chinese,,0,0,0,,所以我们需要弄清楚一些细节才能使这项工作成功
Dialogue: 0,1:08:10.42,1:08:17.62,English,,0,0,0,,One is how will I actually pass arguments how will env know what's being passed to it as arguments
Dialogue: 0,1:08:10.42,1:08:17.62,Chinese,,0,0,0,,一个是我将如何实际传递参数如何将env知道作为参数传递给它的内容
Dialogue: 0,1:08:18.60,1:08:27.66,English,,0,0,0,,How npl get whatever page html it creates back to the server,so that the server can send it to the client
Dialogue: 0,1:08:18.60,1:08:27.66,Chinese,,0,0,0,,npl如何将它创建的任何页面html返回给服务器，以便服务器可以将其发送到客户端
Dialogue: 0,1:08:27.80,1:08:32.14,English,,0,0,0,,Those are all the sort of details of the cgi
Dialogue: 0,1:08:27.80,1:08:32.14,Chinese,,0,0,0,,这些都是cgi的细节
Dialogue: 0,1:08:32.60,1:08:36.06,English,,0,0,0,,Specification cgi stands for common gateway interface
Dialogue: 0,1:08:32.60,1:08:36.06,Chinese,,0,0,0,,规范cgi代表公共网关接口
Dialogue: 0,1:08:43.82,1:08:47.98,English,,0,0,0,,So you just saw a demo of add.com
Dialogue: 0,1:08:43.82,1:08:47.98,Chinese,,0,0,0,,所以你刚看了一个add.com的演示
Dialogue: 0,1:08:50.70,1:08:54.40,English,,0,0,0,,And so let's just look at how this works
Dialogue: 0,1:08:50.70,1:08:54.40,Chinese,,0,0,0,,让我们来看看它是如何工作的
Dialogue: 0,1:08:56.78,1:09:03.72,English,,0,0,0,,So as I mentioned the way things get passed is within the url you include the program name
Dialogue: 0,1:08:56.78,1:09:03.72,Chinese,,0,0,0,,因此，当我提到事情传递的方式是在URL中包含程序名称
Dialogue: 0,1:09:04.14,1:09:09.34,English,,0,0,0,,And then the question mark is what is like the terminator for the program name
Dialogue: 0,1:09:04.14,1:09:09.34,Chinese,,0,0,0,,然后问号是程序名称的终结符
Dialogue: 0,1:09:09.82,1:09:13.66,English,,0,0,0,,And then all the other arguments with ampersands between them
Dialogue: 0,1:09:09.82,1:09:13.66,Chinese,,0,0,0,,然后所有其他论点与他们之间的＆符号
Dialogue: 0,1:09:13.94,1:09:17.58,English,,0,0,0,,And you can't have any blanks in here so they put 20%
Dialogue: 0,1:09:13.94,1:09:17.58,Chinese,,0,0,0,,你不能在这里有任何空白所以他们放20％
Dialogue: 0,1:09:18.08,1:09:22.90,English,,0,0,0,,And as you probably see in various other those are called escape codes
Dialogue: 0,1:09:18.08,1:09:22.90,Chinese,,0,0,0,,正如你可能在其他各种中看到的那些被称为转义码
Dialogue: 0,1:09:23.34,1:09:26.62,English,,0,0,0,,When you can't use a particular character how do you encode it in some other way
Dialogue: 0,1:09:23.34,1:09:26.62,Chinese,,0,0,0,,当你不能使用特定字符时，如何以其他方式对其进行编码
Dialogue: 0,1:09:36.28,1:09:41.50,English,,0,0,0,,So the first thing is how does the server then pass the argument to the program that gets executed
Dialogue: 0,1:09:36.28,1:09:41.50,Chinese,,0,0,0,,所以第一件事是服务器如何将参数传递给执行的程序
Dialogue: 0,1:09:42.82,1:09:48.94,English,,0,0,0,,Well it's really weird the way it does it is by creating an environment variable for your machine
Dialogue: 0,1:09:42.82,1:09:48.94,Chinese,,0,0,0,,通过为你的机器创建环境变量，它的实现方式非常奇怪
Dialogue: 0,1:09:50.38,1:09:51.96,English,,0,0,0,,That's called query string
Dialogue: 0,1:09:50.38,1:09:51.96,Chinese,,0,0,0,,这叫做查询字符串
Dialogue: 0,1:09:53.36,1:09:58.48,English,,0,0,0,,And so the server defines that environment variable
Dialogue: 0,1:09:53.36,1:09:58.48,Chinese,,0,0,0,,因此服务器定义了该环境变量
Dialogue: 0,1:10:01.10,1:10:06.46,English,,0,0,0,,And then the job on the cgi side of the script
Dialogue: 0,1:10:01.10,1:10:06.46,Chinese,,0,0,0,,然后是脚本cgi端的工作
Dialogue: 0,1:10:06.88,1:10:12.04,English,,0,0,0,,Is to then retrieve that environment variable is a way of getting the string
Dialogue: 0,1:10:06.88,1:10:12.04,Chinese,,0,0,0,,然后检索该环境变量是获取字符串的一种方式
Dialogue: 0,1:10:12.62,1:10:17.34,English,,0,0,0,,You can already see hey wait a minute what if you were running multiple servers at once
Dialogue: 0,1:10:12.62,1:10:17.34,Chinese,,0,0,0,,如果你一次运行多个服务器，你可以看到嘿等一下
Dialogue: 0,1:10:17.66,1:10:19.44,English,,0,0,0,,You can see you've got a problem here but
Dialogue: 0,1:10:17.66,1:10:19.44,Chinese,,0,0,0,,你可以看到你在这里遇到了问题但是
Dialogue: 0,1:10:20.52,1:10:24.36,English,,0,0,0,,Actually no environments are specific to particular processes so this will work
Dialogue: 0,1:10:20.52,1:10:24.36,Chinese,,0,0,0,,实际上没有特定于特定进程的环境，因此这将起作用
Dialogue: 0,1:10:25.30,1:10:34.82,English,,0,0,0,,So it's creating for the application program that we'll be able to sort of retrieve from the operating system essentially
Dialogue: 0,1:10:25.30,1:10:34.82,Chinese,,0,0,0,,因此，它正在为应用程序创建，我们将能够从操作系统中进行检索
Dialogue: 0,1:10:35.14,1:10:41.20,English,,0,0,0,,What arguments were passed to the are being passed to it
Dialogue: 0,1:10:35.14,1:10:41.20,Chinese,,0,0,0,,传递给它的参数是什么
Dialogue: 0,1:10:46.54,1:10:49.84,English,,0,0,0,,And so this is what the code looks like for the dynamic server
Dialogue: 0,1:10:46.54,1:10:49.84,Chinese,,0,0,0,,所以这就是动态服务器的代码
Dialogue: 0,1:10:50.58,1:10:52.20,English,,0,0,0,,Again it's going to write back
Dialogue: 0,1:10:50.58,1:10:52.20,Chinese,,0,0,0,,它又会回写
Dialogue: 0,1:10:59.58,1:11:07.64,English,,0,0,0,,Some information back to the client
Dialogue: 0,1:10:59.58,1:11:07.64,Chinese,,0,0,0,,一些信息回馈给客户
Dialogue: 0,1:11:11.40,1:11:13.26,English,,0,0,0,,And let's look at this
Dialogue: 0,1:11:11.40,1:11:13.26,Chinese,,0,0,0,,让我们看看这个
Dialogue: 0,1:11:14.38,1:11:20.80,English,,0,0,0,,And now it's going to set up this cgi a query string environment variable
Dialogue: 0,1:11:14.38,1:11:20.80,Chinese,,0,0,0,,现在，它将设置此cgi一个查询字符串环境变量
Dialogue: 0,1:11:21.38,1:11:24.16,English,,0,0,0,,And then use our friends Dup2 and Execve
Dialogue: 0,1:11:21.38,1:11:24.16,Chinese,,0,0,0,,然后使用我们的朋友Dup2和Execve
Dialogue: 0,1:11:24.74,1:11:33.94,English,,0,0,0,,Basically to redirect the standard output to its client
Dialogue: 0,1:11:24.74,1:11:33.94,Chinese,,0,0,0,,基本上是将标准输出重定向到其客户端
Dialogue: 0,1:11:39.48,1:11:40.30,English,,0,0,0,,Oh I'm sorry
Dialogue: 0,1:11:39.48,1:11:40.30,Chinese,,0,0,0,,哦，对不起
Dialogue: 0,1:11:41.16,1:11:44.26,English,,0,0,0,,The file descriptor is the clients file descriptor
Dialogue: 0,1:11:41.16,1:11:44.26,Chinese,,0,0,0,,文件描述符是客户端文件描述符
Dialogue: 0,1:11:44.70,1:11:49.28,English,,0,0,0,,So it will tell it's going to
Dialogue: 0,1:11:44.70,1:11:49.28,Chinese,,0,0,0,,所以它会告诉它
Dialogue: 0,1:11:50.20,1:11:51.84,English,,0,0,0,,And we're enough work I'm sorry
Dialogue: 0,1:11:50.20,1:11:51.84,Chinese,,0,0,0,,而且我们已经足够工作了，我很抱歉
Dialogue: 0,1:11:52.28,1:11:54.18,English,,0,0,0,,So now we're in the child process okay
Dialogue: 0,1:11:52.28,1:11:54.18,Chinese,,0,0,0,,所以现在我们在孩子的过程中还可以
Dialogue: 0,1:11:54.74,1:11:58.62,English,,0,0,0,,Let me read all the code and within the child process it's going to rename
Dialogue: 0,1:11:54.74,1:11:58.62,Chinese,,0,0,0,,让我阅读所有代码，并在子进程中重命名
Dialogue: 0,1:11:59.16,1:12:03.54,English,,0,0,0,,The it's standard output so that it's writing directly to the client
Dialogue: 0,1:11:59.16,1:12:03.54,Chinese,,0,0,0,,它是标准输出，因此它直接写入客户端
Dialogue: 0,1:12:05.20,1:12:07.58,English,,0,0,0,,And and then call execve
Dialogue: 0,1:12:05.20,1:12:07.58,Chinese,,0,0,0,,然后拨打execve
Dialogue: 0,1:12:08.38,1:12:13.20,English,,0,0,0,,Which as you know it's the way you take this program which is just given by a file name
Dialogue: 0,1:12:08.38,1:12:13.20,Chinese,,0,0,0,,你知道这就是你采用此程序的方式，该程序仅由文件名提供
Dialogue: 0,1:12:14.00,1:12:18.68,English,,0,0,0,,And fire it up and get it going with that defined environment value
Dialogue: 0,1:12:14.00,1:12:18.68,Chinese,,0,0,0,,然后启动并使用定义的环境值
Dialogue: 0,1:12:20.88,1:12:24.62,English,,0,0,0,,And then this is the parent we'll just wait until the child completes
Dialogue: 0,1:12:20.88,1:12:24.62,Chinese,,0,0,0,,然后这是父母，我们将等到孩子完成
Dialogue: 0,1:12:28.06,1:12:30.52,English,,0,0,0,,Okay so now we're almost done
Dialogue: 0,1:12:28.06,1:12:30.52,Chinese,,0,0,0,,好的，现在我们差不多完成了
Dialogue: 0,1:12:35.46,1:12:42.36,English,,0,0,0,,So the now this is what the actual program the adder program does the one that the cgi program
Dialogue: 0,1:12:35.46,1:12:42.36,Chinese,,0,0,0,,那么现在这就是加法器程序实际执行cgi程序的程序
Dialogue: 0,1:12:43.58,1:12:45.98,English,,0,0,0,,The one that's been forked off and exempt
Dialogue: 0,1:12:43.58,1:12:45.98,Chinese,,0,0,0,,那个被分开并免除的人
Dialogue: 0,1:12:47.10,1:12:49.94,English,,0,0,0,,So it creates them the html
Dialogue: 0,1:12:47.10,1:12:49.94,Chinese,,0,0,0,,所以它创建了html
Dialogue: 0,1:12:53.32,1:12:59.32,English,,0,0,0,,That you want to send back and here it's pretty mundane
Dialogue: 0,1:12:53.32,1:12:59.32,Chinese,,0,0,0,,你要寄回去，这里很平凡
Dialogue: 0,1:12:59.50,1:13:04.50,English,,0,0,0,,The only actual html and here are the peas meaning paragraph markers
Dialogue: 0,1:12:59.50,1:13:04.50,Chinese,,0,0,0,,唯一真正的html，这里是豌豆意味着段落标记
Dialogue: 0,1:13:05.08,1:13:15.34,English,,0,0,0,,So this is literally generating http html content and storing them all in a string called content
Dialogue: 0,1:13:05.08,1:13:15.34,Chinese,,0,0,0,,因此，这实际上是生成http html内容并将它们全部存储在名为content的字符串中
Dialogue: 0,1:13:17.88,1:13:21.34,English,,0,0,0,,And now it wants to send that content back
Dialogue: 0,1:13:17.88,1:13:21.34,Chinese,,0,0,0,,现在它想要发回那些内容
Dialogue: 0,1:13:22.16,1:13:27.94,English,,0,0,0,,And you saw before that the server already filled in the top-level stuff
Dialogue: 0,1:13:22.16,1:13:27.94,Chinese,,0,0,0,,你之前看到服务器已经填满了顶级的东西
Dialogue: 0,1:13:27.94,1:13:32.58,English,,0,0,0,,But I have to tell what is the type and how many bytes it is
Dialogue: 0,1:13:27.94,1:13:32.58,Chinese,,0,0,0,,但我必须告诉它是什么类型和字节数
Dialogue: 0,1:13:33.26,1:13:36.58,English,,0,0,0,,So I'll use strlen to figure out how many bytes I'm sending back
Dialogue: 0,1:13:33.26,1:13:36.58,Chinese,,0,0,0,,所以我将使用strlen来确定我要发回的字节数
Dialogue: 0,1:13:37.72,1:13:38.98,English,,0,0,0,,And the content type
Dialogue: 0,1:13:37.72,1:13:38.98,Chinese,,0,0,0,,和内容类型
Dialogue: 0,1:13:39.62,1:13:43.72,English,,0,0,0,,And then I will and I'm printf this
Dialogue: 0,1:13:39.62,1:13:43.72,Chinese,,0,0,0,,然后我会和我打印这个
Dialogue: 0,1:13:44.62,1:13:50.22,English,,0,0,0,,Which as you recall mapped a standard output now is talking directly to the client
Dialogue: 0,1:13:44.62,1:13:50.22,Chinese,,0,0,0,,你回忆起现在标准输出正在直接与客户交谈
Dialogue: 0,1:13:51.38,1:13:55.70,English,,0,0,0,,And just to be sure it all goes out I'll flush that out of there at the end
Dialogue: 0,1:13:51.38,1:13:55.70,Chinese,,0,0,0,,而且为了确保一切顺利，我会在最后冲出那里
Dialogue: 0,1:13:56.22,1:14:07.96,English,,0,0,0,,So what's happening here then it's the job of the the cgi program to write the html and to send it back to the client
Dialogue: 0,1:13:56.22,1:14:07.96,Chinese,,0,0,0,,那么这里发生了什么呢？cgi程序的工作是编写html并将其发送回客户端
Dialogue: 0,1:14:19.82,1:14:23.84,English,,0,0,0,,So again let's just do a real quick demo here got just enough time
Dialogue: 0,1:14:19.82,1:14:23.84,Chinese,,0,0,0,,所以再次让我们在这里做一个真正的快速演示得到足够的时间
Dialogue: 0,1:14:33.62,1:14:34.04,English,,0,0,0,,Oh
Dialogue: 0,1:14:33.62,1:14:34.04,Chinese,,0,0,0,,哦
Dialogue: 0,1:14:46.53,1:14:53.32,English,,0,0,0,,So I've got the tiny web server running down at the bottom and I'm using telnet to reach it
Dialogue: 0,1:14:46.53,1:14:53.32,Chinese,,0,0,0,,所以我已经在底部运行了一个小型Web服务器，我正在使用telnet来访问它
Dialogue: 0,1:14:53.36,1:14:55.52,English,,0,0,0,,And so now I want to say
Dialogue: 0,1:14:53.36,1:14:55.52,Chinese,,0,0,0,,所以现在我想说
Dialogue: 0,1:15:01.80,1:15:04.06,English,,0,0,0,,I have to take time
Dialogue: 0,1:15:01.80,1:15:04.06,Chinese,,0,0,0,,我需要时间
Dialogue: 0,1:15:07.90,1:15:17.86,English,,0,0,0,,/cgi-bin/adder quest what numbers do you want to add 17 and 13
Dialogue: 0,1:15:07.90,1:15:17.86,Chinese,,0,0,0,,/ cgi-bin / adder quest你想要添加17和13的数字
Dialogue: 0,1:15:24.26,1:15:28.12,English,,0,0,0,,So you don't get many shots at it so I like to double check I'm doing
Dialogue: 0,1:15:24.26,1:15:28.12,Chinese,,0,0,0,,所以你没有得到很多镜头，所以我想仔细检查一下我在做什么
Dialogue: 0,1:15:44.20,1:15:44.80,English,,0,0,0,,We worked
Dialogue: 0,1:15:44.20,1:15:44.80,Chinese,,0,0,0,,我们工作了
Dialogue: 0,1:15:46.96,1:15:47.44,English,,0,0,0,,Always amazed 
Dialogue: 0,1:15:46.96,1:15:47.44,Chinese,,0,0,0,,总是很惊讶
Dialogue: 0,1:15:48.16,1:15:52.40,English,,0,0,0,,So it shouldn't surprise you what comes back because you just saw the code that did it but
Dialogue: 0,1:15:48.16,1:15:52.40,Chinese,,0,0,0,,所以回来后不应该让你感到惊讶，因为你只看到了代码，但是
Dialogue: 0,1:15:53.20,1:16:00.44,English,,0,0,0,,What you see then is that this first three lines got generated by the server code
Dialogue: 0,1:15:53.20,1:16:00.44,Chinese,,0,0,0,,你看到的是前三行是由服务器代码生成的
Dialogue: 0,1:16:01.50,1:16:05.18,English,,0,0,0,,That comes back with the ok information about the server
Dialogue: 0,1:16:01.50,1:16:05.18,Chinese,,0,0,0,,这回来了关于服务器的确定信息
Dialogue: 0,1:16:06.14,1:16:11.48,English,,0,0,0,,And then the content length was generated by the cgi program adder
Dialogue: 0,1:16:06.14,1:16:11.48,Chinese,,0,0,0,,然后内容长度由cgi程序加法器生成
Dialogue: 0,1:16:12.14,1:16:17.36,English,,0,0,0,,And the content type and then this is the html that you saw being generated
Dialogue: 0,1:16:12.14,1:16:17.36,Chinese,,0,0,0,,然后是内容类型，然后这是你看到生成的html
Dialogue: 0,1:16:18.14,1:16:25.58,English,,0,0,0,,So it's actually what people say about this early world wide web
Dialogue: 0,1:16:18.14,1:16:25.58,Chinese,,0,0,0,,所以它实际上是人们对这个早期万维网的看法
Dialogue: 0,1:16:25.70,1:16:27.28,English,,0,0,0,,And it's gotten a lot more complicated
Dialogue: 0,1:16:25.70,1:16:27.28,Chinese,,0,0,0,,而且它变得更复杂了
Dialogue: 0,1:16:27.78,1:16:32.16,English,,0,0,0,,Is the best thing Tim Berners Lee was to figure out how simple it could be
Dialogue: 0,1:16:27.78,1:16:32.16,Chinese,,0,0,0,,Tim Berners Lee最好的办法是弄清楚它有多么简单
Dialogue: 0,1:16:32.46,1:16:43.18,English,,0,0,0,,Because other people were working much more exotic ways to get different agents to talk to each other over the internet
Dialogue: 0,1:16:32.46,1:16:43.18,Chinese,,0,0,0,,因为其他人正在以更奇特的方式工作，让不同的代理人通过互联网互相交谈
Dialogue: 0,1:16:44.04,1:16:50.62,English,,0,0,0,,And what Berners Lee figured out is we can just kind of cobble together standard ideas of sockets interface
Dialogue: 0,1:16:44.04,1:16:50.62,Chinese,,0,0,0,,而Berners Lee所发现的是我们可以将拼接接口的标准思想拼凑在一起
Dialogue: 0,1:16:51.20,1:16:54.20,English,,0,0,0,,Have some protocol pretty straightforward protocol
Dialogue: 0,1:16:51.20,1:16:54.20,Chinese,,0,0,0,,有一些协议非常简单的协议
Dialogue: 0,1:16:54.80,1:17:02.68,English,,0,0,0,,Handle different content type of set up these dynamic things by forking off a process every time
Dialogue: 0,1:16:54.80,1:17:02.68,Chinese,,0,0,0,,通过每次分离进程来处理设置这些动态事物的不同内容类型
Dialogue: 0,1:17:02.68,1:17:10.38,English,,0,0,0,,Which is extraordinarily inefficient way to do it like to add two numbers by forking off a whole process
Dialogue: 0,1:17:02.68,1:17:10.38,Chinese,,0,0,0,,这是非常低效的方式，通过分离整个过程来添加两个数字
Dialogue: 0,1:17:10.42,1:17:14.44,English,,0,0,0,,And doing it is totally absurd but then so is add.com
Dialogue: 0,1:17:10.42,1:17:14.44,Chinese,,0,0,0,,这样做完全是荒谬的，但add.com也是如此
Dialogue: 0,1:17:14.82,1:17:24.22,English,,0,0,0,,But you know it's not...it in some ways it he took a bunch of ideas that existed and figured out how to put it together
Dialogue: 0,1:17:14.82,1:17:24.22,Chinese,,0,0,0,,但是你知道它不是......它在某种程度上它采取了一堆存在的想法，并弄清楚如何把它放在一起
Dialogue: 0,1:17:24.58,1:17:30.30,English,,0,0,0,,And I'll recognize that the value people would obtain from that and it took the internet from being something that
Dialogue: 0,1:17:24.58,1:17:30.30,Chinese,,0,0,0,,而且我会认识到人们从中获得的价值，并且互联网不再具有这种价值
Dialogue: 0,1:17:30.80,1:17:34.05,English,,0,0,0,,Was certainly used by nerdy people to talk to each other
Dialogue: 0,1:17:30.80,1:17:34.05,Chinese,,0,0,0,,肯定被书呆子的人用来互相交谈
Dialogue: 0,1:17:34.36,1:17:38.42,English,,0,0,0,,And opened it up to all the things that we know of today
Dialogue: 0,1:17:34.36,1:17:38.42,Chinese,,0,0,0,,并打开了我们今天所知道的所有事情
Dialogue: 0,1:17:38.50,1:17:44.76,English,,0,0,0,,So it was a huge step forward I give them full credit even if from a technical point of view is actually fairly straightforward
Dialogue: 0,1:17:38.50,1:17:44.76,Chinese,,0,0,0,,所以这是向前迈出的一大步，即使从技术角度来看实际上相当简单，我也给予他们充分的信任
Dialogue: 0,1:17:45.62,1:17:49.67,English,,0,0,0,,Ok so that will do us for today
Dialogue: 0,1:17:45.62,1:17:49.67,Chinese,,0,0,0,,好的，这样我们今天就能做到
